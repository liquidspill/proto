// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: fluid/controlplane/v1/controlplane.proto

package controlplanev1

import (
	v1 "github.com/liquidspill/proto/go/std/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Export        bool                   `protobuf:"varint,1,opt,name=export,proto3" json:"export,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetExport() bool {
	if x != nil {
		return x.Export
	}
	return false
}

type ControlMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *ControlMessage        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlMessageRequest) Reset() {
	*x = ControlMessageRequest{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessageRequest) ProtoMessage() {}

func (x *ControlMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessageRequest.ProtoReflect.Descriptor instead.
func (*ControlMessageRequest) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{1}
}

func (x *ControlMessageRequest) GetMessage() *ControlMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type ControlMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *ControlMessage        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Config        *Config                `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlMessageResponse) Reset() {
	*x = ControlMessageResponse{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessageResponse) ProtoMessage() {}

func (x *ControlMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessageResponse.ProtoReflect.Descriptor instead.
func (*ControlMessageResponse) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{2}
}

func (x *ControlMessageResponse) GetMessage() *ControlMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ControlMessageResponse) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type ControlMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ControlMessage_ExportTelemetry
	Message       isControlMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlMessage) Reset() {
	*x = ControlMessage{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage) ProtoMessage() {}

func (x *ControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{3}
}

func (x *ControlMessage) GetMessage() isControlMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ControlMessage) GetExportTelemetry() *ExportTelemetry {
	if x != nil {
		if x, ok := x.Message.(*ControlMessage_ExportTelemetry); ok {
			return x.ExportTelemetry
		}
	}
	return nil
}

type isControlMessage_Message interface {
	isControlMessage_Message()
}

type ControlMessage_ExportTelemetry struct {
	ExportTelemetry *ExportTelemetry `protobuf:"bytes,1,opt,name=export_telemetry,json=exportTelemetry,proto3,oneof"`
}

func (*ControlMessage_ExportTelemetry) isControlMessage_Message() {}

type ExportTelemetry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Export        bool                   `protobuf:"varint,1,opt,name=export,proto3" json:"export,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportTelemetry) Reset() {
	*x = ExportTelemetry{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportTelemetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTelemetry) ProtoMessage() {}

func (x *ExportTelemetry) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTelemetry.ProtoReflect.Descriptor instead.
func (*ExportTelemetry) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{4}
}

func (x *ExportTelemetry) GetExport() bool {
	if x != nil {
		return x.Export
	}
	return false
}

type RegisterRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *Target                `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Rule          *Rule                  `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRuleRequest) Reset() {
	*x = RegisterRuleRequest{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRuleRequest) ProtoMessage() {}

func (x *RegisterRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRuleRequest.ProtoReflect.Descriptor instead.
func (*RegisterRuleRequest) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterRuleRequest) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *RegisterRuleRequest) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type RegisterRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionAt      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=action_at,json=actionAt,proto3" json:"action_at,omitempty"`
	RuleId        string                 `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Target        *Target                `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Rule          *Rule                  `protobuf:"bytes,4,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRuleResponse) Reset() {
	*x = RegisterRuleResponse{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRuleResponse) ProtoMessage() {}

func (x *RegisterRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRuleResponse.ProtoReflect.Descriptor instead.
func (*RegisterRuleResponse) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterRuleResponse) GetActionAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ActionAt
	}
	return nil
}

func (x *RegisterRuleResponse) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *RegisterRuleResponse) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *RegisterRuleResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type Target struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Target:
	//
	//	*Target_Devices
	//	*Target_Descriptor_
	Target        isTarget_Target `protobuf_oneof:"target"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{7}
}

func (x *Target) GetTarget() isTarget_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Target) GetDevices() *Devices {
	if x != nil {
		if x, ok := x.Target.(*Target_Devices); ok {
			return x.Devices
		}
	}
	return nil
}

func (x *Target) GetDescriptor_() *DeviceDescriptor {
	if x != nil {
		if x, ok := x.Target.(*Target_Descriptor_); ok {
			return x.Descriptor_
		}
	}
	return nil
}

type isTarget_Target interface {
	isTarget_Target()
}

type Target_Devices struct {
	Devices *Devices `protobuf:"bytes,1,opt,name=devices,proto3,oneof"`
}

type Target_Descriptor_ struct {
	Descriptor_ *DeviceDescriptor `protobuf:"bytes,2,opt,name=descriptor,proto3,oneof"`
}

func (*Target_Devices) isTarget_Target() {}

func (*Target_Descriptor_) isTarget_Target() {}

type Devices struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceIds     []string               `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Devices) Reset() {
	*x = Devices{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devices) ProtoMessage() {}

func (x *Devices) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devices.ProtoReflect.Descriptor instead.
func (*Devices) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{8}
}

func (x *Devices) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

type DeviceDescriptor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vendor        string                 `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Model         string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Os            string                 `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	Labels        []*v1.KeyValue         `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceDescriptor) Reset() {
	*x = DeviceDescriptor{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDescriptor) ProtoMessage() {}

func (x *DeviceDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDescriptor.ProtoReflect.Descriptor instead.
func (*DeviceDescriptor) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceDescriptor) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *DeviceDescriptor) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *DeviceDescriptor) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *DeviceDescriptor) GetLabels() []*v1.KeyValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Rule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{10}
}

type DeregisterRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleId        string                 `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeregisterRuleRequest) Reset() {
	*x = DeregisterRuleRequest{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeregisterRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeregisterRuleRequest) ProtoMessage() {}

func (x *DeregisterRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeregisterRuleRequest.ProtoReflect.Descriptor instead.
func (*DeregisterRuleRequest) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{11}
}

func (x *DeregisterRuleRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

type DeregisterRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionAt      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=action_at,json=actionAt,proto3" json:"action_at,omitempty"`
	RuleId        string                 `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeregisterRuleResponse) Reset() {
	*x = DeregisterRuleResponse{}
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeregisterRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeregisterRuleResponse) ProtoMessage() {}

func (x *DeregisterRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_controlplane_v1_controlplane_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeregisterRuleResponse.ProtoReflect.Descriptor instead.
func (*DeregisterRuleResponse) Descriptor() ([]byte, []int) {
	return file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP(), []int{12}
}

func (x *DeregisterRuleResponse) GetActionAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ActionAt
	}
	return nil
}

func (x *DeregisterRuleResponse) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

var File_fluid_controlplane_v1_controlplane_proto protoreflect.FileDescriptor

const file_fluid_controlplane_v1_controlplane_proto_rawDesc = "" +
	"\n" +
	"(fluid/controlplane/v1/controlplane.proto\x12\x15fluid.controlplane.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x10std/v1/std.proto\" \n" +
	"\x06Config\x12\x16\n" +
	"\x06export\x18\x01 \x01(\bR\x06export\"X\n" +
	"\x15ControlMessageRequest\x12?\n" +
	"\amessage\x18\x01 \x01(\v2%.fluid.controlplane.v1.ControlMessageR\amessage\"\x90\x01\n" +
	"\x16ControlMessageResponse\x12?\n" +
	"\amessage\x18\x01 \x01(\v2%.fluid.controlplane.v1.ControlMessageR\amessage\x125\n" +
	"\x06config\x18\x02 \x01(\v2\x1d.fluid.controlplane.v1.ConfigR\x06config\"p\n" +
	"\x0eControlMessage\x12S\n" +
	"\x10export_telemetry\x18\x01 \x01(\v2&.fluid.controlplane.v1.ExportTelemetryH\x00R\x0fexportTelemetryB\t\n" +
	"\amessage\")\n" +
	"\x0fExportTelemetry\x12\x16\n" +
	"\x06export\x18\x01 \x01(\bR\x06export\"}\n" +
	"\x13RegisterRuleRequest\x125\n" +
	"\x06target\x18\x01 \x01(\v2\x1d.fluid.controlplane.v1.TargetR\x06target\x12/\n" +
	"\x04rule\x18\x02 \x01(\v2\x1b.fluid.controlplane.v1.RuleR\x04rule\"\xd0\x01\n" +
	"\x14RegisterRuleResponse\x127\n" +
	"\taction_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bactionAt\x12\x17\n" +
	"\arule_id\x18\x02 \x01(\tR\x06ruleId\x125\n" +
	"\x06target\x18\x03 \x01(\v2\x1d.fluid.controlplane.v1.TargetR\x06target\x12/\n" +
	"\x04rule\x18\x04 \x01(\v2\x1b.fluid.controlplane.v1.RuleR\x04rule\"\x99\x01\n" +
	"\x06Target\x12:\n" +
	"\adevices\x18\x01 \x01(\v2\x1e.fluid.controlplane.v1.DevicesH\x00R\adevices\x12I\n" +
	"\n" +
	"descriptor\x18\x02 \x01(\v2'.fluid.controlplane.v1.DeviceDescriptorH\x00R\n" +
	"descriptorB\b\n" +
	"\x06target\"(\n" +
	"\aDevices\x12\x1d\n" +
	"\n" +
	"device_ids\x18\x01 \x03(\tR\tdeviceIds\"z\n" +
	"\x10DeviceDescriptor\x12\x16\n" +
	"\x06vendor\x18\x01 \x01(\tR\x06vendor\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12\x0e\n" +
	"\x02os\x18\x03 \x01(\tR\x02os\x12(\n" +
	"\x06labels\x18\x04 \x03(\v2\x10.std.v1.KeyValueR\x06labels\"\x06\n" +
	"\x04Rule\"0\n" +
	"\x15DeregisterRuleRequest\x12\x17\n" +
	"\arule_id\x18\x01 \x01(\tR\x06ruleId\"j\n" +
	"\x16DeregisterRuleResponse\x127\n" +
	"\taction_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bactionAt\x12\x17\n" +
	"\arule_id\x18\x02 \x01(\tR\x06ruleId2\xdb\x02\n" +
	"\x13ControlPlaneService\x12h\n" +
	"\aControl\x12,.fluid.controlplane.v1.ControlMessageRequest\x1a-.fluid.controlplane.v1.ControlMessageResponse\"\x00\x12i\n" +
	"\fRegisterRule\x12*.fluid.controlplane.v1.RegisterRuleRequest\x1a+.fluid.controlplane.v1.RegisterRuleResponse\"\x00\x12o\n" +
	"\x0eDeregisterRule\x12,.fluid.controlplane.v1.DeregisterRuleRequest\x1a-.fluid.controlplane.v1.DeregisterRuleResponse\"\x00BFZDgithub.com/liquidspill/proto/go/fluid/controlplane/v1;controlplanev1b\x06proto3"

var (
	file_fluid_controlplane_v1_controlplane_proto_rawDescOnce sync.Once
	file_fluid_controlplane_v1_controlplane_proto_rawDescData []byte
)

func file_fluid_controlplane_v1_controlplane_proto_rawDescGZIP() []byte {
	file_fluid_controlplane_v1_controlplane_proto_rawDescOnce.Do(func() {
		file_fluid_controlplane_v1_controlplane_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fluid_controlplane_v1_controlplane_proto_rawDesc), len(file_fluid_controlplane_v1_controlplane_proto_rawDesc)))
	})
	return file_fluid_controlplane_v1_controlplane_proto_rawDescData
}

var file_fluid_controlplane_v1_controlplane_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_fluid_controlplane_v1_controlplane_proto_goTypes = []any{
	(*Config)(nil),                 // 0: fluid.controlplane.v1.Config
	(*ControlMessageRequest)(nil),  // 1: fluid.controlplane.v1.ControlMessageRequest
	(*ControlMessageResponse)(nil), // 2: fluid.controlplane.v1.ControlMessageResponse
	(*ControlMessage)(nil),         // 3: fluid.controlplane.v1.ControlMessage
	(*ExportTelemetry)(nil),        // 4: fluid.controlplane.v1.ExportTelemetry
	(*RegisterRuleRequest)(nil),    // 5: fluid.controlplane.v1.RegisterRuleRequest
	(*RegisterRuleResponse)(nil),   // 6: fluid.controlplane.v1.RegisterRuleResponse
	(*Target)(nil),                 // 7: fluid.controlplane.v1.Target
	(*Devices)(nil),                // 8: fluid.controlplane.v1.Devices
	(*DeviceDescriptor)(nil),       // 9: fluid.controlplane.v1.DeviceDescriptor
	(*Rule)(nil),                   // 10: fluid.controlplane.v1.Rule
	(*DeregisterRuleRequest)(nil),  // 11: fluid.controlplane.v1.DeregisterRuleRequest
	(*DeregisterRuleResponse)(nil), // 12: fluid.controlplane.v1.DeregisterRuleResponse
	(*timestamppb.Timestamp)(nil),  // 13: google.protobuf.Timestamp
	(*v1.KeyValue)(nil),            // 14: std.v1.KeyValue
}
var file_fluid_controlplane_v1_controlplane_proto_depIdxs = []int32{
	3,  // 0: fluid.controlplane.v1.ControlMessageRequest.message:type_name -> fluid.controlplane.v1.ControlMessage
	3,  // 1: fluid.controlplane.v1.ControlMessageResponse.message:type_name -> fluid.controlplane.v1.ControlMessage
	0,  // 2: fluid.controlplane.v1.ControlMessageResponse.config:type_name -> fluid.controlplane.v1.Config
	4,  // 3: fluid.controlplane.v1.ControlMessage.export_telemetry:type_name -> fluid.controlplane.v1.ExportTelemetry
	7,  // 4: fluid.controlplane.v1.RegisterRuleRequest.target:type_name -> fluid.controlplane.v1.Target
	10, // 5: fluid.controlplane.v1.RegisterRuleRequest.rule:type_name -> fluid.controlplane.v1.Rule
	13, // 6: fluid.controlplane.v1.RegisterRuleResponse.action_at:type_name -> google.protobuf.Timestamp
	7,  // 7: fluid.controlplane.v1.RegisterRuleResponse.target:type_name -> fluid.controlplane.v1.Target
	10, // 8: fluid.controlplane.v1.RegisterRuleResponse.rule:type_name -> fluid.controlplane.v1.Rule
	8,  // 9: fluid.controlplane.v1.Target.devices:type_name -> fluid.controlplane.v1.Devices
	9,  // 10: fluid.controlplane.v1.Target.descriptor:type_name -> fluid.controlplane.v1.DeviceDescriptor
	14, // 11: fluid.controlplane.v1.DeviceDescriptor.labels:type_name -> std.v1.KeyValue
	13, // 12: fluid.controlplane.v1.DeregisterRuleResponse.action_at:type_name -> google.protobuf.Timestamp
	1,  // 13: fluid.controlplane.v1.ControlPlaneService.Control:input_type -> fluid.controlplane.v1.ControlMessageRequest
	5,  // 14: fluid.controlplane.v1.ControlPlaneService.RegisterRule:input_type -> fluid.controlplane.v1.RegisterRuleRequest
	11, // 15: fluid.controlplane.v1.ControlPlaneService.DeregisterRule:input_type -> fluid.controlplane.v1.DeregisterRuleRequest
	2,  // 16: fluid.controlplane.v1.ControlPlaneService.Control:output_type -> fluid.controlplane.v1.ControlMessageResponse
	6,  // 17: fluid.controlplane.v1.ControlPlaneService.RegisterRule:output_type -> fluid.controlplane.v1.RegisterRuleResponse
	12, // 18: fluid.controlplane.v1.ControlPlaneService.DeregisterRule:output_type -> fluid.controlplane.v1.DeregisterRuleResponse
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_fluid_controlplane_v1_controlplane_proto_init() }
func file_fluid_controlplane_v1_controlplane_proto_init() {
	if File_fluid_controlplane_v1_controlplane_proto != nil {
		return
	}
	file_fluid_controlplane_v1_controlplane_proto_msgTypes[3].OneofWrappers = []any{
		(*ControlMessage_ExportTelemetry)(nil),
	}
	file_fluid_controlplane_v1_controlplane_proto_msgTypes[7].OneofWrappers = []any{
		(*Target_Devices)(nil),
		(*Target_Descriptor_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fluid_controlplane_v1_controlplane_proto_rawDesc), len(file_fluid_controlplane_v1_controlplane_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fluid_controlplane_v1_controlplane_proto_goTypes,
		DependencyIndexes: file_fluid_controlplane_v1_controlplane_proto_depIdxs,
		MessageInfos:      file_fluid_controlplane_v1_controlplane_proto_msgTypes,
	}.Build()
	File_fluid_controlplane_v1_controlplane_proto = out.File
	file_fluid_controlplane_v1_controlplane_proto_goTypes = nil
	file_fluid_controlplane_v1_controlplane_proto_depIdxs = nil
}

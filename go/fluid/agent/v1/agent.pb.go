// RPCs to perform against Fluid (the agent). These handle operations like
// running queries, updating its configuration and other operational and
// administrative tasks.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: fluid/agent/v1/agent.proto

package agentv1

import (
	v1 "github.com/liquidspill/proto/go/nexus/controlplane/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecQueryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A (request) ID to keep track of the request. Usually set to the ID
	// of the query result (created in the control plane)
	Id            string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Query         *v1.Query `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecQueryRequest) Reset() {
	*x = ExecQueryRequest{}
	mi := &file_fluid_agent_v1_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecQueryRequest) ProtoMessage() {}

func (x *ExecQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_agent_v1_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecQueryRequest.ProtoReflect.Descriptor instead.
func (*ExecQueryRequest) Descriptor() ([]byte, []int) {
	return file_fluid_agent_v1_agent_proto_rawDescGZIP(), []int{0}
}

func (x *ExecQueryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecQueryRequest) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type ExecQueryResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Id            string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Result        *v1.QueryExecutionResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecQueryResponse) Reset() {
	*x = ExecQueryResponse{}
	mi := &file_fluid_agent_v1_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecQueryResponse) ProtoMessage() {}

func (x *ExecQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_agent_v1_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecQueryResponse.ProtoReflect.Descriptor instead.
func (*ExecQueryResponse) Descriptor() ([]byte, []int) {
	return file_fluid_agent_v1_agent_proto_rawDescGZIP(), []int{1}
}

func (x *ExecQueryResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecQueryResponse) GetResult() *v1.QueryExecutionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_fluid_agent_v1_agent_proto protoreflect.FileDescriptor

const file_fluid_agent_v1_agent_proto_rawDesc = "" +
	"\n" +
	"\x1afluid/agent/v1/agent.proto\x12\x0efluid.agent.v1\x1a)nexus/controlplane/v1/control_plane.proto\"V\n" +
	"\x10ExecQueryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x05query\x18\x02 \x01(\v2\x1c.nexus.controlplane.v1.QueryR\x05query\"h\n" +
	"\x11ExecQueryResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12C\n" +
	"\x06result\x18\x02 \x01(\v2+.nexus.controlplane.v1.QueryExecutionResultR\x06result2b\n" +
	"\fAgentService\x12R\n" +
	"\tExecQuery\x12 .fluid.agent.v1.ExecQueryRequest\x1a!.fluid.agent.v1.ExecQueryResponse\"\x00B8Z6github.com/liquidspill/proto/go/fluid/agent/v1;agentv1b\x06proto3"

var (
	file_fluid_agent_v1_agent_proto_rawDescOnce sync.Once
	file_fluid_agent_v1_agent_proto_rawDescData []byte
)

func file_fluid_agent_v1_agent_proto_rawDescGZIP() []byte {
	file_fluid_agent_v1_agent_proto_rawDescOnce.Do(func() {
		file_fluid_agent_v1_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fluid_agent_v1_agent_proto_rawDesc), len(file_fluid_agent_v1_agent_proto_rawDesc)))
	})
	return file_fluid_agent_v1_agent_proto_rawDescData
}

var file_fluid_agent_v1_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_fluid_agent_v1_agent_proto_goTypes = []any{
	(*ExecQueryRequest)(nil),        // 0: fluid.agent.v1.ExecQueryRequest
	(*ExecQueryResponse)(nil),       // 1: fluid.agent.v1.ExecQueryResponse
	(*v1.Query)(nil),                // 2: nexus.controlplane.v1.Query
	(*v1.QueryExecutionResult)(nil), // 3: nexus.controlplane.v1.QueryExecutionResult
}
var file_fluid_agent_v1_agent_proto_depIdxs = []int32{
	2, // 0: fluid.agent.v1.ExecQueryRequest.query:type_name -> nexus.controlplane.v1.Query
	3, // 1: fluid.agent.v1.ExecQueryResponse.result:type_name -> nexus.controlplane.v1.QueryExecutionResult
	0, // 2: fluid.agent.v1.AgentService.ExecQuery:input_type -> fluid.agent.v1.ExecQueryRequest
	1, // 3: fluid.agent.v1.AgentService.ExecQuery:output_type -> fluid.agent.v1.ExecQueryResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_fluid_agent_v1_agent_proto_init() }
func file_fluid_agent_v1_agent_proto_init() {
	if File_fluid_agent_v1_agent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fluid_agent_v1_agent_proto_rawDesc), len(file_fluid_agent_v1_agent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fluid_agent_v1_agent_proto_goTypes,
		DependencyIndexes: file_fluid_agent_v1_agent_proto_depIdxs,
		MessageInfos:      file_fluid_agent_v1_agent_proto_msgTypes,
	}.Build()
	File_fluid_agent_v1_agent_proto = out.File
	file_fluid_agent_v1_agent_proto_goTypes = nil
	file_fluid_agent_v1_agent_proto_depIdxs = nil
}

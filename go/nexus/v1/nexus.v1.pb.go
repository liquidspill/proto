// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: nexus.v1.proto

package nexusv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Column_Type int32

const (
	Column_INT8      Column_Type = 0
	Column_INT16     Column_Type = 1
	Column_INT32     Column_Type = 2
	Column_INT64     Column_Type = 3
	Column_UINT8     Column_Type = 4
	Column_UINT16    Column_Type = 5
	Column_UINT32    Column_Type = 6
	Column_UINT64    Column_Type = 7
	Column_STRING    Column_Type = 8
	Column_BOOLEAN   Column_Type = 9
	Column_TIMESTAMP Column_Type = 10
	Column_BYTES     Column_Type = 11
)

// Enum value maps for Column_Type.
var (
	Column_Type_name = map[int32]string{
		0:  "INT8",
		1:  "INT16",
		2:  "INT32",
		3:  "INT64",
		4:  "UINT8",
		5:  "UINT16",
		6:  "UINT32",
		7:  "UINT64",
		8:  "STRING",
		9:  "BOOLEAN",
		10: "TIMESTAMP",
		11: "BYTES",
	}
	Column_Type_value = map[string]int32{
		"INT8":      0,
		"INT16":     1,
		"INT32":     2,
		"INT64":     3,
		"UINT8":     4,
		"UINT16":    5,
		"UINT32":    6,
		"UINT64":    7,
		"STRING":    8,
		"BOOLEAN":   9,
		"TIMESTAMP": 10,
		"BYTES":     11,
	}
)

func (x Column_Type) Enum() *Column_Type {
	p := new(Column_Type)
	*p = x
	return p
}

func (x Column_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Column_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_v1_proto_enumTypes[0].Descriptor()
}

func (Column_Type) Type() protoreflect.EnumType {
	return &file_nexus_v1_proto_enumTypes[0]
}

func (x Column_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Column_Type.Descriptor instead.
func (Column_Type) EnumDescriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{7, 0}
}

type Value_Compression int32

const (
	Value_ZSTD   Value_Compression = 0
	Value_LZ4    Value_Compression = 1
	Value_SNAPPY Value_Compression = 2
)

// Enum value maps for Value_Compression.
var (
	Value_Compression_name = map[int32]string{
		0: "ZSTD",
		1: "LZ4",
		2: "SNAPPY",
	}
	Value_Compression_value = map[string]int32{
		"ZSTD":   0,
		"LZ4":    1,
		"SNAPPY": 2,
	}
)

func (x Value_Compression) Enum() *Value_Compression {
	p := new(Value_Compression)
	*p = x
	return p
}

func (x Value_Compression) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Value_Compression) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_v1_proto_enumTypes[1].Descriptor()
}

func (Value_Compression) Type() protoreflect.EnumType {
	return &file_nexus_v1_proto_enumTypes[1]
}

func (x Value_Compression) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Value_Compression.Descriptor instead.
func (Value_Compression) EnumDescriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{10, 0}
}

type CreateBucketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBucketRequest) Reset() {
	*x = CreateBucketRequest{}
	mi := &file_nexus_v1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketRequest) ProtoMessage() {}

func (x *CreateBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketRequest.ProtoReflect.Descriptor instead.
func (*CreateBucketRequest) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBucketRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateBucketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBucketResponse) Reset() {
	*x = CreateBucketResponse{}
	mi := &file_nexus_v1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketResponse) ProtoMessage() {}

func (x *CreateBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketResponse.ProtoReflect.Descriptor instead.
func (*CreateBucketResponse) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBucketResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateBucketResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreatePartitionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Partition     *Partition             `protobuf:"bytes,2,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePartitionRequest) Reset() {
	*x = CreatePartitionRequest{}
	mi := &file_nexus_v1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePartitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartitionRequest) ProtoMessage() {}

func (x *CreatePartitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartitionRequest.ProtoReflect.Descriptor instead.
func (*CreatePartitionRequest) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePartitionRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreatePartitionRequest) GetPartition() *Partition {
	if x != nil {
		return x.Partition
	}
	return nil
}

type CreatePartitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Partition     *Partition             `protobuf:"bytes,2,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePartitionResponse) Reset() {
	*x = CreatePartitionResponse{}
	mi := &file_nexus_v1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePartitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartitionResponse) ProtoMessage() {}

func (x *CreatePartitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartitionResponse.ProtoReflect.Descriptor instead.
func (*CreatePartitionResponse) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePartitionResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreatePartitionResponse) GetPartition() *Partition {
	if x != nil {
		return x.Partition
	}
	return nil
}

type ListPartitionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      uint64                 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	EnvironmentId uint64                 `protobuf:"varint,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartitionsRequest) Reset() {
	*x = ListPartitionsRequest{}
	mi := &file_nexus_v1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartitionsRequest) ProtoMessage() {}

func (x *ListPartitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartitionsRequest.ProtoReflect.Descriptor instead.
func (*ListPartitionsRequest) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{4}
}

func (x *ListPartitionsRequest) GetTenantId() uint64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *ListPartitionsRequest) GetEnvironmentId() uint64 {
	if x != nil {
		return x.EnvironmentId
	}
	return 0
}

func (x *ListPartitionsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListPartitionsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type ListPartitionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Partitions    []*Partition           `protobuf:"bytes,3,rep,name=partitions,proto3" json:"partitions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartitionsResponse) Reset() {
	*x = ListPartitionsResponse{}
	mi := &file_nexus_v1_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartitionsResponse) ProtoMessage() {}

func (x *ListPartitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartitionsResponse.ProtoReflect.Descriptor instead.
func (*ListPartitionsResponse) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{5}
}

func (x *ListPartitionsResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListPartitionsResponse) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ListPartitionsResponse) GetPartitions() []*Partition {
	if x != nil {
		return x.Partitions
	}
	return nil
}

// Immutable metadata describing a partition stored in object storage
type Partition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Key   string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The key used to cluster the data into partitions. This is
	// used to increase data locality, with the idea being that it
	// helps process queries faster
	ClusterKey *ClusterKey `protobuf:"bytes,2,opt,name=cluster_key,json=clusterKey,proto3" json:"cluster_key,omitempty"`
	// The size in bytes of the Parquet file
	Size     uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	RowCount uint64 `protobuf:"varint,4,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	// Time the partition was created
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Columns       map[string]*Column     `protobuf:"bytes,6,rep,name=columns,proto3" json:"columns,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Partition) Reset() {
	*x = Partition{}
	mi := &file_nexus_v1_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Partition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Partition) ProtoMessage() {}

func (x *Partition) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Partition.ProtoReflect.Descriptor instead.
func (*Partition) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{6}
}

func (x *Partition) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Partition) GetClusterKey() *ClusterKey {
	if x != nil {
		return x.ClusterKey
	}
	return nil
}

func (x *Partition) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Partition) GetRowCount() uint64 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *Partition) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Partition) GetColumns() map[string]*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type Column struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Statistics    *Statistics            `protobuf:"bytes,2,opt,name=statistics,proto3" json:"statistics,omitempty"`
	Type          Column_Type            `protobuf:"varint,3,opt,name=type,proto3,enum=nexus.v1.Column_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column) Reset() {
	*x = Column{}
	mi := &file_nexus_v1_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{7}
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Column) GetStatistics() *Statistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *Column) GetType() Column_Type {
	if x != nil {
		return x.Type
	}
	return Column_INT8
}

type Statistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Min:
	//
	//	*Statistics_MinInt32
	//	*Statistics_MinInt64
	//	*Statistics_MinUint32
	//	*Statistics_MinUint64
	//	*Statistics_MinBool
	//	*Statistics_MinString
	//	*Statistics_MinBytes
	//	*Statistics_MinTimestamp
	Min isStatistics_Min `protobuf_oneof:"min"`
	// Types that are valid to be assigned to Max:
	//
	//	*Statistics_MaxInt32
	//	*Statistics_MaxInt64
	//	*Statistics_MaxUint32
	//	*Statistics_MaxUint64
	//	*Statistics_MaxBool
	//	*Statistics_MaxString
	//	*Statistics_MaxBytes
	//	*Statistics_MaxTimestamp
	Max           isStatistics_Max `protobuf_oneof:"max"`
	Filter        []byte           `protobuf:"bytes,17,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	mi := &file_nexus_v1_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{8}
}

func (x *Statistics) GetMin() isStatistics_Min {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *Statistics) GetMinInt32() int32 {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinInt32); ok {
			return x.MinInt32
		}
	}
	return 0
}

func (x *Statistics) GetMinInt64() int64 {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinInt64); ok {
			return x.MinInt64
		}
	}
	return 0
}

func (x *Statistics) GetMinUint32() uint32 {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinUint32); ok {
			return x.MinUint32
		}
	}
	return 0
}

func (x *Statistics) GetMinUint64() uint64 {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinUint64); ok {
			return x.MinUint64
		}
	}
	return 0
}

func (x *Statistics) GetMinBool() bool {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinBool); ok {
			return x.MinBool
		}
	}
	return false
}

func (x *Statistics) GetMinString() string {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinString); ok {
			return x.MinString
		}
	}
	return ""
}

func (x *Statistics) GetMinBytes() []byte {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinBytes); ok {
			return x.MinBytes
		}
	}
	return nil
}

func (x *Statistics) GetMinTimestamp() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinTimestamp); ok {
			return x.MinTimestamp
		}
	}
	return nil
}

func (x *Statistics) GetMax() isStatistics_Max {
	if x != nil {
		return x.Max
	}
	return nil
}

func (x *Statistics) GetMaxInt32() int32 {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxInt32); ok {
			return x.MaxInt32
		}
	}
	return 0
}

func (x *Statistics) GetMaxInt64() int64 {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxInt64); ok {
			return x.MaxInt64
		}
	}
	return 0
}

func (x *Statistics) GetMaxUint32() uint32 {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxUint32); ok {
			return x.MaxUint32
		}
	}
	return 0
}

func (x *Statistics) GetMaxUint64() uint64 {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxUint64); ok {
			return x.MaxUint64
		}
	}
	return 0
}

func (x *Statistics) GetMaxBool() bool {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxBool); ok {
			return x.MaxBool
		}
	}
	return false
}

func (x *Statistics) GetMaxString() string {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxString); ok {
			return x.MaxString
		}
	}
	return ""
}

func (x *Statistics) GetMaxBytes() []byte {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxBytes); ok {
			return x.MaxBytes
		}
	}
	return nil
}

func (x *Statistics) GetMaxTimestamp() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxTimestamp); ok {
			return x.MaxTimestamp
		}
	}
	return nil
}

func (x *Statistics) GetFilter() []byte {
	if x != nil {
		return x.Filter
	}
	return nil
}

type isStatistics_Min interface {
	isStatistics_Min()
}

type Statistics_MinInt32 struct {
	// Handles int8, int16, int32
	MinInt32 int32 `protobuf:"varint,1,opt,name=min_int32,json=minInt32,proto3,oneof"`
}

type Statistics_MinInt64 struct {
	MinInt64 int64 `protobuf:"varint,2,opt,name=min_int64,json=minInt64,proto3,oneof"`
}

type Statistics_MinUint32 struct {
	// Handles uint8, uint16, uint32
	MinUint32 uint32 `protobuf:"varint,3,opt,name=min_uint32,json=minUint32,proto3,oneof"`
}

type Statistics_MinUint64 struct {
	MinUint64 uint64 `protobuf:"varint,4,opt,name=min_uint64,json=minUint64,proto3,oneof"`
}

type Statistics_MinBool struct {
	MinBool bool `protobuf:"varint,5,opt,name=min_bool,json=minBool,proto3,oneof"`
}

type Statistics_MinString struct {
	MinString string `protobuf:"bytes,6,opt,name=min_string,json=minString,proto3,oneof"`
}

type Statistics_MinBytes struct {
	MinBytes []byte `protobuf:"bytes,7,opt,name=min_bytes,json=minBytes,proto3,oneof"`
}

type Statistics_MinTimestamp struct {
	MinTimestamp *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=min_timestamp,json=minTimestamp,proto3,oneof"`
}

func (*Statistics_MinInt32) isStatistics_Min() {}

func (*Statistics_MinInt64) isStatistics_Min() {}

func (*Statistics_MinUint32) isStatistics_Min() {}

func (*Statistics_MinUint64) isStatistics_Min() {}

func (*Statistics_MinBool) isStatistics_Min() {}

func (*Statistics_MinString) isStatistics_Min() {}

func (*Statistics_MinBytes) isStatistics_Min() {}

func (*Statistics_MinTimestamp) isStatistics_Min() {}

type isStatistics_Max interface {
	isStatistics_Max()
}

type Statistics_MaxInt32 struct {
	// Handles int8, int16, int32
	MaxInt32 int32 `protobuf:"varint,9,opt,name=max_int32,json=maxInt32,proto3,oneof"`
}

type Statistics_MaxInt64 struct {
	MaxInt64 int64 `protobuf:"varint,10,opt,name=max_int64,json=maxInt64,proto3,oneof"`
}

type Statistics_MaxUint32 struct {
	// Handles uint8, uint16, uint32
	MaxUint32 uint32 `protobuf:"varint,11,opt,name=max_uint32,json=maxUint32,proto3,oneof"`
}

type Statistics_MaxUint64 struct {
	MaxUint64 uint64 `protobuf:"varint,12,opt,name=max_uint64,json=maxUint64,proto3,oneof"`
}

type Statistics_MaxBool struct {
	MaxBool bool `protobuf:"varint,13,opt,name=max_bool,json=maxBool,proto3,oneof"`
}

type Statistics_MaxString struct {
	MaxString string `protobuf:"bytes,14,opt,name=max_string,json=maxString,proto3,oneof"`
}

type Statistics_MaxBytes struct {
	MaxBytes []byte `protobuf:"bytes,15,opt,name=max_bytes,json=maxBytes,proto3,oneof"`
}

type Statistics_MaxTimestamp struct {
	MaxTimestamp *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=max_timestamp,json=maxTimestamp,proto3,oneof"`
}

func (*Statistics_MaxInt32) isStatistics_Max() {}

func (*Statistics_MaxInt64) isStatistics_Max() {}

func (*Statistics_MaxUint32) isStatistics_Max() {}

func (*Statistics_MaxUint64) isStatistics_Max() {}

func (*Statistics_MaxBool) isStatistics_Max() {}

func (*Statistics_MaxString) isStatistics_Max() {}

func (*Statistics_MaxBytes) isStatistics_Max() {}

func (*Statistics_MaxTimestamp) isStatistics_Max() {}

type ClusterKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The timestamp is the time that the flow was received
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The ID of the device the flow belongs to
	DeviceId      uint64 `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterKey) Reset() {
	*x = ClusterKey{}
	mi := &file_nexus_v1_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterKey) ProtoMessage() {}

func (x *ClusterKey) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterKey.ProtoReflect.Descriptor instead.
func (*ClusterKey) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{9}
}

func (x *ClusterKey) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ClusterKey) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

// Metadata and data stored for a given value
type Value struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// int32 enc = 2; // encoding of the raw data -- store as enums
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Comp          Value_Compression      `protobuf:"varint,3,opt,name=comp,proto3,enum=nexus.v1.Value_Compression" json:"comp,omitempty"`
	Raw           []byte                 `protobuf:"bytes,4,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_nexus_v1_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_v1_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_nexus_v1_proto_rawDescGZIP(), []int{10}
}

func (x *Value) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Value) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Value) GetComp() Value_Compression {
	if x != nil {
		return x.Comp
	}
	return Value_ZSTD
}

func (x *Value) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

var File_nexus_v1_proto protoreflect.FileDescriptor

var file_nexus_v1_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x31, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xcd, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xca, 0x02, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x52, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x1a, 0x4c, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x93, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49,
	0x4e, 0x54, 0x38, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x49,
	0x4e, 0x54, 0x36, 0x34, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x49, 0x4e, 0x54, 0x38, 0x10,
	0x04, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x05, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e,
	0x54, 0x36, 0x34, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x08, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x09, 0x12, 0x0d,
	0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x0a, 0x12, 0x09, 0x0a,
	0x05, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x0b, 0x22, 0xf2, 0x04, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1d, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1f, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x69, 0x6e,
	0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1f, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x69,
	0x6e, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1b, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x62,
	0x6f, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1d, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1f, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1f, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x61,
	0x78, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1b, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x62,
	0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x61, 0x78,
	0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x05, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x22, 0x63, 0x0a,
	0x0a, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x63,
	0x6f, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x2c, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x53, 0x54, 0x44, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x4c, 0x5a, 0x34, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x4e, 0x41, 0x50, 0x50,
	0x59, 0x10, 0x02, 0x32, 0x90, 0x02, 0x0a, 0x0c, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1f, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x73, 0x70, 0x69, 0x6c, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2f,
	0x76, 0x31, 0x3b, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_nexus_v1_proto_rawDescOnce sync.Once
	file_nexus_v1_proto_rawDescData []byte
)

func file_nexus_v1_proto_rawDescGZIP() []byte {
	file_nexus_v1_proto_rawDescOnce.Do(func() {
		file_nexus_v1_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nexus_v1_proto_rawDesc), len(file_nexus_v1_proto_rawDesc)))
	})
	return file_nexus_v1_proto_rawDescData
}

var file_nexus_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nexus_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_nexus_v1_proto_goTypes = []any{
	(Column_Type)(0),                // 0: nexus.v1.Column.Type
	(Value_Compression)(0),          // 1: nexus.v1.Value.Compression
	(*CreateBucketRequest)(nil),     // 2: nexus.v1.CreateBucketRequest
	(*CreateBucketResponse)(nil),    // 3: nexus.v1.CreateBucketResponse
	(*CreatePartitionRequest)(nil),  // 4: nexus.v1.CreatePartitionRequest
	(*CreatePartitionResponse)(nil), // 5: nexus.v1.CreatePartitionResponse
	(*ListPartitionsRequest)(nil),   // 6: nexus.v1.ListPartitionsRequest
	(*ListPartitionsResponse)(nil),  // 7: nexus.v1.ListPartitionsResponse
	(*Partition)(nil),               // 8: nexus.v1.Partition
	(*Column)(nil),                  // 9: nexus.v1.Column
	(*Statistics)(nil),              // 10: nexus.v1.Statistics
	(*ClusterKey)(nil),              // 11: nexus.v1.ClusterKey
	(*Value)(nil),                   // 12: nexus.v1.Value
	nil,                             // 13: nexus.v1.Partition.ColumnsEntry
	(*timestamppb.Timestamp)(nil),   // 14: google.protobuf.Timestamp
}
var file_nexus_v1_proto_depIdxs = []int32{
	14, // 0: nexus.v1.CreateBucketResponse.created_at:type_name -> google.protobuf.Timestamp
	8,  // 1: nexus.v1.CreatePartitionRequest.partition:type_name -> nexus.v1.Partition
	14, // 2: nexus.v1.CreatePartitionResponse.created_at:type_name -> google.protobuf.Timestamp
	8,  // 3: nexus.v1.CreatePartitionResponse.partition:type_name -> nexus.v1.Partition
	14, // 4: nexus.v1.ListPartitionsRequest.start_time:type_name -> google.protobuf.Timestamp
	14, // 5: nexus.v1.ListPartitionsRequest.end_time:type_name -> google.protobuf.Timestamp
	14, // 6: nexus.v1.ListPartitionsResponse.start_time:type_name -> google.protobuf.Timestamp
	14, // 7: nexus.v1.ListPartitionsResponse.end_time:type_name -> google.protobuf.Timestamp
	8,  // 8: nexus.v1.ListPartitionsResponse.partitions:type_name -> nexus.v1.Partition
	11, // 9: nexus.v1.Partition.cluster_key:type_name -> nexus.v1.ClusterKey
	14, // 10: nexus.v1.Partition.created_at:type_name -> google.protobuf.Timestamp
	13, // 11: nexus.v1.Partition.columns:type_name -> nexus.v1.Partition.ColumnsEntry
	10, // 12: nexus.v1.Column.statistics:type_name -> nexus.v1.Statistics
	0,  // 13: nexus.v1.Column.type:type_name -> nexus.v1.Column.Type
	14, // 14: nexus.v1.Statistics.min_timestamp:type_name -> google.protobuf.Timestamp
	14, // 15: nexus.v1.Statistics.max_timestamp:type_name -> google.protobuf.Timestamp
	14, // 16: nexus.v1.ClusterKey.timestamp:type_name -> google.protobuf.Timestamp
	14, // 17: nexus.v1.Value.created_at:type_name -> google.protobuf.Timestamp
	14, // 18: nexus.v1.Value.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 19: nexus.v1.Value.comp:type_name -> nexus.v1.Value.Compression
	9,  // 20: nexus.v1.Partition.ColumnsEntry.value:type_name -> nexus.v1.Column
	2,  // 21: nexus.v1.NexusService.CreateBucket:input_type -> nexus.v1.CreateBucketRequest
	4,  // 22: nexus.v1.NexusService.CreatePartition:input_type -> nexus.v1.CreatePartitionRequest
	6,  // 23: nexus.v1.NexusService.ListPartitions:input_type -> nexus.v1.ListPartitionsRequest
	3,  // 24: nexus.v1.NexusService.CreateBucket:output_type -> nexus.v1.CreateBucketResponse
	5,  // 25: nexus.v1.NexusService.CreatePartition:output_type -> nexus.v1.CreatePartitionResponse
	7,  // 26: nexus.v1.NexusService.ListPartitions:output_type -> nexus.v1.ListPartitionsResponse
	24, // [24:27] is the sub-list for method output_type
	21, // [21:24] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_nexus_v1_proto_init() }
func file_nexus_v1_proto_init() {
	if File_nexus_v1_proto != nil {
		return
	}
	file_nexus_v1_proto_msgTypes[8].OneofWrappers = []any{
		(*Statistics_MinInt32)(nil),
		(*Statistics_MinInt64)(nil),
		(*Statistics_MinUint32)(nil),
		(*Statistics_MinUint64)(nil),
		(*Statistics_MinBool)(nil),
		(*Statistics_MinString)(nil),
		(*Statistics_MinBytes)(nil),
		(*Statistics_MinTimestamp)(nil),
		(*Statistics_MaxInt32)(nil),
		(*Statistics_MaxInt64)(nil),
		(*Statistics_MaxUint32)(nil),
		(*Statistics_MaxUint64)(nil),
		(*Statistics_MaxBool)(nil),
		(*Statistics_MaxString)(nil),
		(*Statistics_MaxBytes)(nil),
		(*Statistics_MaxTimestamp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nexus_v1_proto_rawDesc), len(file_nexus_v1_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nexus_v1_proto_goTypes,
		DependencyIndexes: file_nexus_v1_proto_depIdxs,
		EnumInfos:         file_nexus_v1_proto_enumTypes,
		MessageInfos:      file_nexus_v1_proto_msgTypes,
	}.Build()
	File_nexus_v1_proto = out.File
	file_nexus_v1_proto_goTypes = nil
	file_nexus_v1_proto_depIdxs = nil
}

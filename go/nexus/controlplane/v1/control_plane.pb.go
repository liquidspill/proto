// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: nexus/controlplane/v1/control_plane.proto

package controlplanev1

import (
	v1 "github.com/liquidspill/proto/go/std/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterType int32

const (
	ClusterType_CLUSTER_TYPE_UNSPECIFIED ClusterType = 0
	// The cluster runs in their own cloud
	ClusterType_CLUSTER_TYPE_BYOC ClusterType = 1
	// We run the cluster in our cloud, on behalf of the user
	ClusterType_CLUSTER_TYPE_SERVERLESS ClusterType = 2
)

// Enum value maps for ClusterType.
var (
	ClusterType_name = map[int32]string{
		0: "CLUSTER_TYPE_UNSPECIFIED",
		1: "CLUSTER_TYPE_BYOC",
		2: "CLUSTER_TYPE_SERVERLESS",
	}
	ClusterType_value = map[string]int32{
		"CLUSTER_TYPE_UNSPECIFIED": 0,
		"CLUSTER_TYPE_BYOC":        1,
		"CLUSTER_TYPE_SERVERLESS":  2,
	}
)

func (x ClusterType) Enum() *ClusterType {
	p := new(ClusterType)
	*p = x
	return p
}

func (x ClusterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterType) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_controlplane_v1_control_plane_proto_enumTypes[0].Descriptor()
}

func (ClusterType) Type() protoreflect.EnumType {
	return &file_nexus_controlplane_v1_control_plane_proto_enumTypes[0]
}

func (x ClusterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterType.Descriptor instead.
func (ClusterType) EnumDescriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{0}
}

type IPVersion int32

const (
	IPVersion_IPVERSION_UNSPECIFIED IPVersion = 0
	IPVersion_IPVERSION_IPV4        IPVersion = 1
	IPVersion_IPVERSION_IPV6        IPVersion = 2
)

// Enum value maps for IPVersion.
var (
	IPVersion_name = map[int32]string{
		0: "IPVERSION_UNSPECIFIED",
		1: "IPVERSION_IPV4",
		2: "IPVERSION_IPV6",
	}
	IPVersion_value = map[string]int32{
		"IPVERSION_UNSPECIFIED": 0,
		"IPVERSION_IPV4":        1,
		"IPVERSION_IPV6":        2,
	}
)

func (x IPVersion) Enum() *IPVersion {
	p := new(IPVersion)
	*p = x
	return p
}

func (x IPVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IPVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_controlplane_v1_control_plane_proto_enumTypes[1].Descriptor()
}

func (IPVersion) Type() protoreflect.EnumType {
	return &file_nexus_controlplane_v1_control_plane_proto_enumTypes[1]
}

func (x IPVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IPVersion.Descriptor instead.
func (IPVersion) EnumDescriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{1}
}

type VisualiseOp int32

const (
	VisualiseOp_VISUALISE_OP_UNSPECIFIED    VisualiseOp = 0
	VisualiseOp_VISUALISE_OP_COUNT          VisualiseOp = 1
	VisualiseOp_VISUALISE_OP_COUNT_DISTINCT VisualiseOp = 2
	VisualiseOp_VISUALISE_OP_SUM            VisualiseOp = 3
	VisualiseOp_VISUALISE_OP_AVG            VisualiseOp = 4
	VisualiseOp_VISUALISE_OP_MAX            VisualiseOp = 5
	VisualiseOp_VISUALISE_OP_MIN            VisualiseOp = 6
	// Unsupported
	VisualiseOp_VISUALISE_OP_P001     VisualiseOp = 7
	VisualiseOp_VISUALISE_OP_P01      VisualiseOp = 8
	VisualiseOp_VISUALISE_OP_P05      VisualiseOp = 9
	VisualiseOp_VISUALISE_OP_P10      VisualiseOp = 10
	VisualiseOp_VISUALISE_OP_P25      VisualiseOp = 11
	VisualiseOp_VISUALISE_OP_P50      VisualiseOp = 12
	VisualiseOp_VISUALISE_OP_P75      VisualiseOp = 13
	VisualiseOp_VISUALISE_OP_P90      VisualiseOp = 14
	VisualiseOp_VISUALISE_OP_P95      VisualiseOp = 15
	VisualiseOp_VISUALISE_OP_P99      VisualiseOp = 16
	VisualiseOp_VISUALISE_OP_P999     VisualiseOp = 17
	VisualiseOp_VISUALISE_OP_RATE_AVG VisualiseOp = 18
	VisualiseOp_VISUALISE_OP_RATE_SUM VisualiseOp = 19
	VisualiseOp_VISUALISE_OP_RATE_MAX VisualiseOp = 20
)

// Enum value maps for VisualiseOp.
var (
	VisualiseOp_name = map[int32]string{
		0:  "VISUALISE_OP_UNSPECIFIED",
		1:  "VISUALISE_OP_COUNT",
		2:  "VISUALISE_OP_COUNT_DISTINCT",
		3:  "VISUALISE_OP_SUM",
		4:  "VISUALISE_OP_AVG",
		5:  "VISUALISE_OP_MAX",
		6:  "VISUALISE_OP_MIN",
		7:  "VISUALISE_OP_P001",
		8:  "VISUALISE_OP_P01",
		9:  "VISUALISE_OP_P05",
		10: "VISUALISE_OP_P10",
		11: "VISUALISE_OP_P25",
		12: "VISUALISE_OP_P50",
		13: "VISUALISE_OP_P75",
		14: "VISUALISE_OP_P90",
		15: "VISUALISE_OP_P95",
		16: "VISUALISE_OP_P99",
		17: "VISUALISE_OP_P999",
		18: "VISUALISE_OP_RATE_AVG",
		19: "VISUALISE_OP_RATE_SUM",
		20: "VISUALISE_OP_RATE_MAX",
	}
	VisualiseOp_value = map[string]int32{
		"VISUALISE_OP_UNSPECIFIED":    0,
		"VISUALISE_OP_COUNT":          1,
		"VISUALISE_OP_COUNT_DISTINCT": 2,
		"VISUALISE_OP_SUM":            3,
		"VISUALISE_OP_AVG":            4,
		"VISUALISE_OP_MAX":            5,
		"VISUALISE_OP_MIN":            6,
		"VISUALISE_OP_P001":           7,
		"VISUALISE_OP_P01":            8,
		"VISUALISE_OP_P05":            9,
		"VISUALISE_OP_P10":            10,
		"VISUALISE_OP_P25":            11,
		"VISUALISE_OP_P50":            12,
		"VISUALISE_OP_P75":            13,
		"VISUALISE_OP_P90":            14,
		"VISUALISE_OP_P95":            15,
		"VISUALISE_OP_P99":            16,
		"VISUALISE_OP_P999":           17,
		"VISUALISE_OP_RATE_AVG":       18,
		"VISUALISE_OP_RATE_SUM":       19,
		"VISUALISE_OP_RATE_MAX":       20,
	}
)

func (x VisualiseOp) Enum() *VisualiseOp {
	p := new(VisualiseOp)
	*p = x
	return p
}

func (x VisualiseOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VisualiseOp) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_controlplane_v1_control_plane_proto_enumTypes[2].Descriptor()
}

func (VisualiseOp) Type() protoreflect.EnumType {
	return &file_nexus_controlplane_v1_control_plane_proto_enumTypes[2]
}

func (x VisualiseOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VisualiseOp.Descriptor instead.
func (VisualiseOp) EnumDescriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{2}
}

type WhereOp int32

const (
	WhereOp_WHERE_OP_UNSPECIFIED WhereOp = 0
	WhereOp_WHERE_OP_AND         WhereOp = 1
	WhereOp_WHERE_OP_OR          WhereOp = 2
)

// Enum value maps for WhereOp.
var (
	WhereOp_name = map[int32]string{
		0: "WHERE_OP_UNSPECIFIED",
		1: "WHERE_OP_AND",
		2: "WHERE_OP_OR",
	}
	WhereOp_value = map[string]int32{
		"WHERE_OP_UNSPECIFIED": 0,
		"WHERE_OP_AND":         1,
		"WHERE_OP_OR":          2,
	}
)

func (x WhereOp) Enum() *WhereOp {
	p := new(WhereOp)
	*p = x
	return p
}

func (x WhereOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WhereOp) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_controlplane_v1_control_plane_proto_enumTypes[3].Descriptor()
}

func (WhereOp) Type() protoreflect.EnumType {
	return &file_nexus_controlplane_v1_control_plane_proto_enumTypes[3]
}

func (x WhereOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WhereOp.Descriptor instead.
func (WhereOp) EnumDescriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{3}
}

type CompareOp int32

const (
	CompareOp_COMPARE_OP_UNSPECIFIED           CompareOp = 0
	CompareOp_COMPARE_OP_EQUAL                 CompareOp = 1
	CompareOp_COMPARE_OP_NOT_EQUAL             CompareOp = 2
	CompareOp_COMPARE_OP_GREATER_THAN          CompareOp = 3
	CompareOp_COMPARE_OP_GREATER_THAN_OR_EQUAL CompareOp = 4
	CompareOp_COMPARE_OP_LESS_THAN             CompareOp = 5
	CompareOp_COMPARE_OP_LESS_THAN_OR_EQUAL    CompareOp = 6
	CompareOp_COMPARE_OP_CONTAINS              CompareOp = 7
	CompareOp_COMPARE_OP_DOES_NOT_CONTAIN      CompareOp = 8
	CompareOp_COMPARE_OP_IN                    CompareOp = 9
	CompareOp_COMPARE_OP_NOT_IN                CompareOp = 10
)

// Enum value maps for CompareOp.
var (
	CompareOp_name = map[int32]string{
		0:  "COMPARE_OP_UNSPECIFIED",
		1:  "COMPARE_OP_EQUAL",
		2:  "COMPARE_OP_NOT_EQUAL",
		3:  "COMPARE_OP_GREATER_THAN",
		4:  "COMPARE_OP_GREATER_THAN_OR_EQUAL",
		5:  "COMPARE_OP_LESS_THAN",
		6:  "COMPARE_OP_LESS_THAN_OR_EQUAL",
		7:  "COMPARE_OP_CONTAINS",
		8:  "COMPARE_OP_DOES_NOT_CONTAIN",
		9:  "COMPARE_OP_IN",
		10: "COMPARE_OP_NOT_IN",
	}
	CompareOp_value = map[string]int32{
		"COMPARE_OP_UNSPECIFIED":           0,
		"COMPARE_OP_EQUAL":                 1,
		"COMPARE_OP_NOT_EQUAL":             2,
		"COMPARE_OP_GREATER_THAN":          3,
		"COMPARE_OP_GREATER_THAN_OR_EQUAL": 4,
		"COMPARE_OP_LESS_THAN":             5,
		"COMPARE_OP_LESS_THAN_OR_EQUAL":    6,
		"COMPARE_OP_CONTAINS":              7,
		"COMPARE_OP_DOES_NOT_CONTAIN":      8,
		"COMPARE_OP_IN":                    9,
		"COMPARE_OP_NOT_IN":                10,
	}
)

func (x CompareOp) Enum() *CompareOp {
	p := new(CompareOp)
	*p = x
	return p
}

func (x CompareOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompareOp) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_controlplane_v1_control_plane_proto_enumTypes[4].Descriptor()
}

func (CompareOp) Type() protoreflect.EnumType {
	return &file_nexus_controlplane_v1_control_plane_proto_enumTypes[4]
}

func (x CompareOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompareOp.Descriptor instead.
func (CompareOp) EnumDescriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{4}
}

type OrderOp int32

const (
	OrderOp_ORDER_OP_UNSPECIFIED OrderOp = 0
	OrderOp_ORDER_OP_ASC         OrderOp = 1
	OrderOp_ORDER_OP_DESC        OrderOp = 2
)

// Enum value maps for OrderOp.
var (
	OrderOp_name = map[int32]string{
		0: "ORDER_OP_UNSPECIFIED",
		1: "ORDER_OP_ASC",
		2: "ORDER_OP_DESC",
	}
	OrderOp_value = map[string]int32{
		"ORDER_OP_UNSPECIFIED": 0,
		"ORDER_OP_ASC":         1,
		"ORDER_OP_DESC":        2,
	}
)

func (x OrderOp) Enum() *OrderOp {
	p := new(OrderOp)
	*p = x
	return p
}

func (x OrderOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderOp) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_controlplane_v1_control_plane_proto_enumTypes[5].Descriptor()
}

func (OrderOp) Type() protoreflect.EnumType {
	return &file_nexus_controlplane_v1_control_plane_proto_enumTypes[5]
}

func (x OrderOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderOp.Descriptor instead.
func (OrderOp) EnumDescriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{5}
}

type QueryExecutionStatus int32

const (
	QueryExecutionStatus_QUERY_EXECUTION_STATUS_UNSPECIFIED QueryExecutionStatus = 0
	QueryExecutionStatus_QUERY_EXECUTION_STATUS_PENDING     QueryExecutionStatus = 1
	QueryExecutionStatus_QUERY_EXECUTION_STATUS_RUNNING     QueryExecutionStatus = 2
	QueryExecutionStatus_QUERY_EXECUTION_STATUS_COMPLETED   QueryExecutionStatus = 3
	QueryExecutionStatus_QUERY_EXECUTION_STATUS_FAILED      QueryExecutionStatus = 4
)

// Enum value maps for QueryExecutionStatus.
var (
	QueryExecutionStatus_name = map[int32]string{
		0: "QUERY_EXECUTION_STATUS_UNSPECIFIED",
		1: "QUERY_EXECUTION_STATUS_PENDING",
		2: "QUERY_EXECUTION_STATUS_RUNNING",
		3: "QUERY_EXECUTION_STATUS_COMPLETED",
		4: "QUERY_EXECUTION_STATUS_FAILED",
	}
	QueryExecutionStatus_value = map[string]int32{
		"QUERY_EXECUTION_STATUS_UNSPECIFIED": 0,
		"QUERY_EXECUTION_STATUS_PENDING":     1,
		"QUERY_EXECUTION_STATUS_RUNNING":     2,
		"QUERY_EXECUTION_STATUS_COMPLETED":   3,
		"QUERY_EXECUTION_STATUS_FAILED":      4,
	}
)

func (x QueryExecutionStatus) Enum() *QueryExecutionStatus {
	p := new(QueryExecutionStatus)
	*p = x
	return p
}

func (x QueryExecutionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryExecutionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_controlplane_v1_control_plane_proto_enumTypes[6].Descriptor()
}

func (QueryExecutionStatus) Type() protoreflect.EnumType {
	return &file_nexus_controlplane_v1_control_plane_proto_enumTypes[6]
}

func (x QueryExecutionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryExecutionStatus.Descriptor instead.
func (QueryExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{6}
}

type AgentStatus int32

const (
	AgentStatus_AGENT_STATUS_UNSPECIFIED AgentStatus = 0
	// The last heartbeat was received within the last 5 minutes.
	AgentStatus_AGENT_STATUS_ALIVE AgentStatus = 1
	// The last heartbeat was received more than 5 minutes ago.
	AgentStatus_AGENT_STATUS_STALE AgentStatus = 2
	// The last heartbeat was received more than 30 minutes ago.
	AgentStatus_AGENT_STATUS_UNRESPONSIVE AgentStatus = 3
	// The agent has not been heard of in the last 8 hours.
	AgentStatus_AGENT_STATUS_DEAD AgentStatus = 4
)

// Enum value maps for AgentStatus.
var (
	AgentStatus_name = map[int32]string{
		0: "AGENT_STATUS_UNSPECIFIED",
		1: "AGENT_STATUS_ALIVE",
		2: "AGENT_STATUS_STALE",
		3: "AGENT_STATUS_UNRESPONSIVE",
		4: "AGENT_STATUS_DEAD",
	}
	AgentStatus_value = map[string]int32{
		"AGENT_STATUS_UNSPECIFIED":  0,
		"AGENT_STATUS_ALIVE":        1,
		"AGENT_STATUS_STALE":        2,
		"AGENT_STATUS_UNRESPONSIVE": 3,
		"AGENT_STATUS_DEAD":         4,
	}
)

func (x AgentStatus) Enum() *AgentStatus {
	p := new(AgentStatus)
	*p = x
	return p
}

func (x AgentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_controlplane_v1_control_plane_proto_enumTypes[7].Descriptor()
}

func (AgentStatus) Type() protoreflect.EnumType {
	return &file_nexus_controlplane_v1_control_plane_proto_enumTypes[7]
}

func (x AgentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentStatus.Descriptor instead.
func (AgentStatus) EnumDescriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{7}
}

type Dataset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	TeamPid       string                 `protobuf:"bytes,2,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   *string                `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dataset) Reset() {
	*x = Dataset{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dataset) ProtoMessage() {}

func (x *Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dataset.ProtoReflect.Descriptor instead.
func (*Dataset) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{0}
}

func (x *Dataset) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *Dataset) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *Dataset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dataset) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Dataset) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Dataset) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateDatasetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamPid       string                 `protobuf:"bytes,1,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDatasetRequest) Reset() {
	*x = CreateDatasetRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasetRequest) ProtoMessage() {}

func (x *CreateDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasetRequest.ProtoReflect.Descriptor instead.
func (*CreateDatasetRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDatasetRequest) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *CreateDatasetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDatasetRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type CreateDatasetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Dataset       *Dataset               `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDatasetResponse) Reset() {
	*x = CreateDatasetResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasetResponse) ProtoMessage() {}

func (x *CreateDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasetResponse.ProtoReflect.Descriptor instead.
func (*CreateDatasetResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDatasetResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *CreateDatasetResponse) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *CreateDatasetResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DeleteDatasetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDatasetRequest) Reset() {
	*x = DeleteDatasetRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatasetRequest) ProtoMessage() {}

func (x *DeleteDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatasetRequest.ProtoReflect.Descriptor instead.
func (*DeleteDatasetRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteDatasetRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

type DeleteDatasetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDatasetResponse) Reset() {
	*x = DeleteDatasetResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatasetResponse) ProtoMessage() {}

func (x *DeleteDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatasetResponse.ProtoReflect.Descriptor instead.
func (*DeleteDatasetResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDatasetResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *DeleteDatasetResponse) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type ListDatasetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamPid       string                 `protobuf:"bytes,1,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatasetsRequest) Reset() {
	*x = ListDatasetsRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatasetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsRequest) ProtoMessage() {}

func (x *ListDatasetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsRequest.ProtoReflect.Descriptor instead.
func (*ListDatasetsRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{5}
}

func (x *ListDatasetsRequest) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

type ListDatasetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamPid       string                 `protobuf:"bytes,1,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	Datasets      []*Dataset             `protobuf:"bytes,2,rep,name=datasets,proto3" json:"datasets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatasetsResponse) Reset() {
	*x = ListDatasetsResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatasetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsResponse) ProtoMessage() {}

func (x *ListDatasetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsResponse.ProtoReflect.Descriptor instead.
func (*ListDatasetsResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{6}
}

func (x *ListDatasetsResponse) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *ListDatasetsResponse) GetDatasets() []*Dataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

type GetDatasetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatasetRequest) Reset() {
	*x = GetDatasetRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetRequest) ProtoMessage() {}

func (x *GetDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{7}
}

func (x *GetDatasetRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

type GetDatasetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Dataset       *Dataset               `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatasetResponse) Reset() {
	*x = GetDatasetResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetResponse) ProtoMessage() {}

func (x *GetDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{8}
}

func (x *GetDatasetResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *GetDatasetResponse) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

// Cluster represents the query/read side of the system
// where a distributed query engine runs to query manifests
// and calculate final results. Clusters can be either
// BYOC (bring your own cloud) or serverless (managed in our cloud).
type Cluster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	TeamPid       string                 `protobuf:"bytes,2,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type          ClusterType            `protobuf:"varint,4,opt,name=type,proto3,enum=nexus.controlplane.v1.ClusterType" json:"type,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{9}
}

func (x *Cluster) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *Cluster) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetType() ClusterType {
	if x != nil {
		return x.Type
	}
	return ClusterType_CLUSTER_TYPE_UNSPECIFIED
}

func (x *Cluster) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Cluster) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamPid       string                 `protobuf:"bytes,1,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          ClusterType            `protobuf:"varint,3,opt,name=type,proto3,enum=nexus.controlplane.v1.ClusterType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateClusterRequest) Reset() {
	*x = CreateClusterRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRequest) ProtoMessage() {}

func (x *CreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{10}
}

func (x *CreateClusterRequest) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *CreateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateClusterRequest) GetType() ClusterType {
	if x != nil {
		return x.Type
	}
	return ClusterType_CLUSTER_TYPE_UNSPECIFIED
}

type CreateClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Cluster       *Cluster               `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateClusterResponse) Reset() {
	*x = CreateClusterResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterResponse) ProtoMessage() {}

func (x *CreateClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterResponse.ProtoReflect.Descriptor instead.
func (*CreateClusterResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{11}
}

func (x *CreateClusterResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *CreateClusterResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *CreateClusterResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DeleteClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterRequest) Reset() {
	*x = DeleteClusterRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterRequest) ProtoMessage() {}

func (x *DeleteClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteClusterRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

type DeleteClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterResponse) Reset() {
	*x = DeleteClusterResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterResponse) ProtoMessage() {}

func (x *DeleteClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterResponse.ProtoReflect.Descriptor instead.
func (*DeleteClusterResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteClusterResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *DeleteClusterResponse) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type ListClustersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamPid       string                 `protobuf:"bytes,1,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{14}
}

func (x *ListClustersRequest) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

type ListClustersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamPid       string                 `protobuf:"bytes,1,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	Clusters      []*Cluster             `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{15}
}

func (x *ListClustersResponse) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *ListClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type GetClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{16}
}

func (x *GetClusterRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

type GetClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Cluster       *Cluster               `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterResponse) Reset() {
	*x = GetClusterResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterResponse) ProtoMessage() {}

func (x *GetClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterResponse.ProtoReflect.Descriptor instead.
func (*GetClusterResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{17}
}

func (x *GetClusterResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *GetClusterResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type Device struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Pid     string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	TeamPid string                 `protobuf:"bytes,2,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	// A "common name" for the device that the user can use
	// to identify it.
	Name        string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Types that are valid to be assigned to Model:
	//
	//	*Device_Generic
	Model isDevice_Model `protobuf_oneof:"model"`
	// The IP addresses of the device. We use these to look
	// up the relevant device to enrich our flow with its information.
	Addresses []*IpAddress `protobuf:"bytes,6,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// User-defined labels for the device. Used to add more metadata
	// to query over.
	Labels        []*v1.KeyValue         `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{18}
}

func (x *Device) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *Device) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Device) GetModel() isDevice_Model {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *Device) GetGeneric() *GenericModel {
	if x != nil {
		if x, ok := x.Model.(*Device_Generic); ok {
			return x.Generic
		}
	}
	return nil
}

func (x *Device) GetAddresses() []*IpAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *Device) GetLabels() []*v1.KeyValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Device) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Device) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type isDevice_Model interface {
	isDevice_Model()
}

type Device_Generic struct {
	Generic *GenericModel `protobuf:"bytes,5,opt,name=generic,proto3,oneof"`
}

func (*Device_Generic) isDevice_Model() {}

type GenericModel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Model string                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// It is possible that we have a known vendor (e.g Cisco or Arista)
	//
	// Types that are valid to be assigned to Vendor:
	//
	//	*GenericModel_OtherVendor
	//	*GenericModel_Cisco
	//	*GenericModel_Arista
	Vendor        isGenericModel_Vendor `protobuf_oneof:"vendor"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenericModel) Reset() {
	*x = GenericModel{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenericModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericModel) ProtoMessage() {}

func (x *GenericModel) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericModel.ProtoReflect.Descriptor instead.
func (*GenericModel) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{19}
}

func (x *GenericModel) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GenericModel) GetVendor() isGenericModel_Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

func (x *GenericModel) GetOtherVendor() string {
	if x != nil {
		if x, ok := x.Vendor.(*GenericModel_OtherVendor); ok {
			return x.OtherVendor
		}
	}
	return ""
}

func (x *GenericModel) GetCisco() *Cisco {
	if x != nil {
		if x, ok := x.Vendor.(*GenericModel_Cisco); ok {
			return x.Cisco
		}
	}
	return nil
}

func (x *GenericModel) GetArista() *Arista {
	if x != nil {
		if x, ok := x.Vendor.(*GenericModel_Arista); ok {
			return x.Arista
		}
	}
	return nil
}

type isGenericModel_Vendor interface {
	isGenericModel_Vendor()
}

type GenericModel_OtherVendor struct {
	OtherVendor string `protobuf:"bytes,2,opt,name=other_vendor,json=otherVendor,proto3,oneof"`
}

type GenericModel_Cisco struct {
	Cisco *Cisco `protobuf:"bytes,3,opt,name=cisco,proto3,oneof"`
}

type GenericModel_Arista struct {
	Arista *Arista `protobuf:"bytes,4,opt,name=arista,proto3,oneof"`
}

func (*GenericModel_OtherVendor) isGenericModel_Vendor() {}

func (*GenericModel_Cisco) isGenericModel_Vendor() {}

func (*GenericModel_Arista) isGenericModel_Vendor() {}

type Cisco struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cisco) Reset() {
	*x = Cisco{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cisco) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cisco) ProtoMessage() {}

func (x *Cisco) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cisco.ProtoReflect.Descriptor instead.
func (*Cisco) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{20}
}

type Arista struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Arista) Reset() {
	*x = Arista{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Arista) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arista) ProtoMessage() {}

func (x *Arista) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arista.ProtoReflect.Descriptor instead.
func (*Arista) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{21}
}

type IpAddress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Version       IPVersion              `protobuf:"varint,2,opt,name=version,proto3,enum=nexus.controlplane.v1.IPVersion" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpAddress) Reset() {
	*x = IpAddress{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpAddress) ProtoMessage() {}

func (x *IpAddress) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpAddress.ProtoReflect.Descriptor instead.
func (*IpAddress) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{22}
}

func (x *IpAddress) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *IpAddress) GetVersion() IPVersion {
	if x != nil {
		return x.Version
	}
	return IPVersion_IPVERSION_UNSPECIFIED
}

type CreateDeviceRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	TeamPid     string                 `protobuf:"bytes,1,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are valid to be assigned to Model:
	//
	//	*CreateDeviceRequest_Generic
	Model         isCreateDeviceRequest_Model `protobuf_oneof:"model"`
	Addresses     []*IpAddress                `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Labels        []*v1.KeyValue              `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDeviceRequest) Reset() {
	*x = CreateDeviceRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequest) ProtoMessage() {}

func (x *CreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{23}
}

func (x *CreateDeviceRequest) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *CreateDeviceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDeviceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateDeviceRequest) GetModel() isCreateDeviceRequest_Model {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *CreateDeviceRequest) GetGeneric() *GenericModel {
	if x != nil {
		if x, ok := x.Model.(*CreateDeviceRequest_Generic); ok {
			return x.Generic
		}
	}
	return nil
}

func (x *CreateDeviceRequest) GetAddresses() []*IpAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *CreateDeviceRequest) GetLabels() []*v1.KeyValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

type isCreateDeviceRequest_Model interface {
	isCreateDeviceRequest_Model()
}

type CreateDeviceRequest_Generic struct {
	Generic *GenericModel `protobuf:"bytes,4,opt,name=generic,proto3,oneof"`
}

func (*CreateDeviceRequest_Generic) isCreateDeviceRequest_Model() {}

type CreateDeviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Device        *Device                `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDeviceResponse) Reset() {
	*x = CreateDeviceResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceResponse) ProtoMessage() {}

func (x *CreateDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{24}
}

func (x *CreateDeviceResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *CreateDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *CreateDeviceResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DeleteDeviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteDeviceRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

type DeleteDeviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDeviceResponse) Reset() {
	*x = DeleteDeviceResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceResponse) ProtoMessage() {}

func (x *DeleteDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceResponse.ProtoReflect.Descriptor instead.
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteDeviceResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *DeleteDeviceResponse) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type UpdateDeviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Device        *Device                `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeviceRequest) Reset() {
	*x = UpdateDeviceRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceRequest) ProtoMessage() {}

func (x *UpdateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateDeviceRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *UpdateDeviceRequest) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *UpdateDeviceRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateDeviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Device        *Device                `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeviceResponse) Reset() {
	*x = UpdateDeviceResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceResponse) ProtoMessage() {}

func (x *UpdateDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeviceResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateDeviceResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *UpdateDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *UpdateDeviceResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetDeviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceRequest) Reset() {
	*x = GetDeviceRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceRequest) ProtoMessage() {}

func (x *GetDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{29}
}

func (x *GetDeviceRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

type GetDeviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Device        *Device                `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceResponse) Reset() {
	*x = GetDeviceResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceResponse) ProtoMessage() {}

func (x *GetDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{30}
}

func (x *GetDeviceResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *GetDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type ListDevicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamPid       string                 `protobuf:"bytes,1,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDevicesRequest) Reset() {
	*x = ListDevicesRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesRequest) ProtoMessage() {}

func (x *ListDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListDevicesRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{31}
}

func (x *ListDevicesRequest) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

type ListDevicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamPid       string                 `protobuf:"bytes,1,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	Devices       []*Device              `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDevicesResponse) Reset() {
	*x = ListDevicesResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesResponse) ProtoMessage() {}

func (x *ListDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListDevicesResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{32}
}

func (x *ListDevicesResponse) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *ListDevicesResponse) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	TeamPid       string                 `protobuf:"bytes,2,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	DatasetPid    string                 `protobuf:"bytes,3,opt,name=dataset_pid,json=datasetPid,proto3" json:"dataset_pid,omitempty"`
	Visualise     []*Visualise           `protobuf:"bytes,4,rep,name=visualise,proto3" json:"visualise,omitempty"`
	Where         *Where                 `protobuf:"bytes,5,opt,name=where,proto3" json:"where,omitempty"`
	GroupBy       []string               `protobuf:"bytes,6,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	OrderBy       []*Order               `protobuf:"bytes,7,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Limit         uint32                 `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	Having        *Clause                `protobuf:"bytes,9,opt,name=having,proto3" json:"having,omitempty"`
	StartTime     int64                  `protobuf:"varint,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,11,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{33}
}

func (x *Query) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *Query) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *Query) GetDatasetPid() string {
	if x != nil {
		return x.DatasetPid
	}
	return ""
}

func (x *Query) GetVisualise() []*Visualise {
	if x != nil {
		return x.Visualise
	}
	return nil
}

func (x *Query) GetWhere() *Where {
	if x != nil {
		return x.Where
	}
	return nil
}

func (x *Query) GetGroupBy() []string {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *Query) GetOrderBy() []*Order {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *Query) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Query) GetHaving() *Clause {
	if x != nil {
		return x.Having
	}
	return nil
}

func (x *Query) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Query) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Query) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Query) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Visualise struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Op            VisualiseOp            `protobuf:"varint,1,opt,name=op,proto3,enum=nexus.controlplane.v1.VisualiseOp" json:"op,omitempty"`
	Field         string                 `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Visualise) Reset() {
	*x = Visualise{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Visualise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Visualise) ProtoMessage() {}

func (x *Visualise) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Visualise.ProtoReflect.Descriptor instead.
func (*Visualise) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{34}
}

func (x *Visualise) GetOp() VisualiseOp {
	if x != nil {
		return x.Op
	}
	return VisualiseOp_VISUALISE_OP_UNSPECIFIED
}

func (x *Visualise) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

type Where struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Op            WhereOp                `protobuf:"varint,1,opt,name=op,proto3,enum=nexus.controlplane.v1.WhereOp" json:"op,omitempty"`
	Clauses       []*Clause              `protobuf:"bytes,2,rep,name=clauses,proto3" json:"clauses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Where) Reset() {
	*x = Where{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Where) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Where) ProtoMessage() {}

func (x *Where) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Where.ProtoReflect.Descriptor instead.
func (*Where) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{35}
}

func (x *Where) GetOp() WhereOp {
	if x != nil {
		return x.Op
	}
	return WhereOp_WHERE_OP_UNSPECIFIED
}

func (x *Where) GetClauses() []*Clause {
	if x != nil {
		return x.Clauses
	}
	return nil
}

type Clause struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Op            CompareOp              `protobuf:"varint,3,opt,name=op,proto3,enum=nexus.controlplane.v1.CompareOp" json:"op,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Clause) Reset() {
	*x = Clause{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Clause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clause) ProtoMessage() {}

func (x *Clause) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clause.ProtoReflect.Descriptor instead.
func (*Clause) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{36}
}

func (x *Clause) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Clause) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Clause) GetOp() CompareOp {
	if x != nil {
		return x.Op
	}
	return CompareOp_COMPARE_OP_UNSPECIFIED
}

type Order struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Order         OrderOp                `protobuf:"varint,2,opt,name=order,proto3,enum=nexus.controlplane.v1.OrderOp" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{37}
}

func (x *Order) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Order) GetOrder() OrderOp {
	if x != nil {
		return x.Order
	}
	return OrderOp_ORDER_OP_UNSPECIFIED
}

type Series struct {
	state      protoimpl.MessageState   `protogen:"open.v1"`
	Timestamps []*timestamppb.Timestamp `protobuf:"bytes,1,rep,name=timestamps,proto3" json:"timestamps,omitempty"`
	// The series of data returned by our query
	Data map[string]*SeriesData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The name of the columns that are visualisations of the data (i.e the
	// operation on the data)
	Visualisations []string `protobuf:"bytes,3,rep,name=visualisations,proto3" json:"visualisations,omitempty"`
	// The names of the columns that are used to group the data
	Groups        []string `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Series) Reset() {
	*x = Series{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Series) ProtoMessage() {}

func (x *Series) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Series.ProtoReflect.Descriptor instead.
func (*Series) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{38}
}

func (x *Series) GetTimestamps() []*timestamppb.Timestamp {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *Series) GetData() map[string]*SeriesData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Series) GetVisualisations() []string {
	if x != nil {
		return x.Visualisations
	}
	return nil
}

func (x *Series) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type SeriesData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the series. This is the field that was queried
	Name          string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Values        []*v1.Value `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeriesData) Reset() {
	*x = SeriesData{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeriesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeriesData) ProtoMessage() {}

func (x *SeriesData) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeriesData.ProtoReflect.Descriptor instead.
func (*SeriesData) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{39}
}

func (x *SeriesData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeriesData) GetValues() []*v1.Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type Row struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []string               `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	RowValues     []*RowValues           `protobuf:"bytes,2,rep,name=row_values,json=rowValues,proto3" json:"row_values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Row) Reset() {
	*x = Row{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{40}
}

func (x *Row) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Row) GetRowValues() []*RowValues {
	if x != nil {
		return x.RowValues
	}
	return nil
}

type RowValues struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*v1.Value            `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowValues) Reset() {
	*x = RowValues{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowValues) ProtoMessage() {}

func (x *RowValues) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowValues.ProtoReflect.Descriptor instead.
func (*RowValues) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{41}
}

func (x *RowValues) GetValues() []*v1.Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type CreateQueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamPid       string                 `protobuf:"bytes,1,opt,name=team_pid,json=teamPid,proto3" json:"team_pid,omitempty"`
	DatasetPid    string                 `protobuf:"bytes,2,opt,name=dataset_pid,json=datasetPid,proto3" json:"dataset_pid,omitempty"`
	Query         *Query                 `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQueryRequest) Reset() {
	*x = CreateQueryRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryRequest) ProtoMessage() {}

func (x *CreateQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueryRequest.ProtoReflect.Descriptor instead.
func (*CreateQueryRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{42}
}

func (x *CreateQueryRequest) GetTeamPid() string {
	if x != nil {
		return x.TeamPid
	}
	return ""
}

func (x *CreateQueryRequest) GetDatasetPid() string {
	if x != nil {
		return x.DatasetPid
	}
	return ""
}

func (x *CreateQueryRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type CreateQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Query         *Query                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQueryResponse) Reset() {
	*x = CreateQueryResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryResponse) ProtoMessage() {}

func (x *CreateQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueryResponse.ProtoReflect.Descriptor instead.
func (*CreateQueryResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{43}
}

func (x *CreateQueryResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *CreateQueryResponse) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *CreateQueryResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Request used to start a "query result" which kicks off a
// query execution job. Internally this creates a query result object
// in our database. The query result ID is returned in the response.
type SubmitQueryExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryPid      string                 `protobuf:"bytes,1,opt,name=query_pid,json=queryPid,proto3" json:"query_pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitQueryExecutionRequest) Reset() {
	*x = SubmitQueryExecutionRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitQueryExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitQueryExecutionRequest) ProtoMessage() {}

func (x *SubmitQueryExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitQueryExecutionRequest.ProtoReflect.Descriptor instead.
func (*SubmitQueryExecutionRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{44}
}

func (x *SubmitQueryExecutionRequest) GetQueryPid() string {
	if x != nil {
		return x.QueryPid
	}
	return ""
}

type SubmitQueryExecutionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	QueryPid       string                 `protobuf:"bytes,1,opt,name=query_pid,json=queryPid,proto3" json:"query_pid,omitempty"`
	QueryResultPid string                 `protobuf:"bytes,2,opt,name=query_result_pid,json=queryResultPid,proto3" json:"query_result_pid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubmitQueryExecutionResponse) Reset() {
	*x = SubmitQueryExecutionResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitQueryExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitQueryExecutionResponse) ProtoMessage() {}

func (x *SubmitQueryExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitQueryExecutionResponse.ProtoReflect.Descriptor instead.
func (*SubmitQueryExecutionResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{45}
}

func (x *SubmitQueryExecutionResponse) GetQueryPid() string {
	if x != nil {
		return x.QueryPid
	}
	return ""
}

func (x *SubmitQueryExecutionResponse) GetQueryResultPid() string {
	if x != nil {
		return x.QueryResultPid
	}
	return ""
}

type UpdateQueryExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *QueryExecutionResult  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQueryExecutionRequest) Reset() {
	*x = UpdateQueryExecutionRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQueryExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQueryExecutionRequest) ProtoMessage() {}

func (x *UpdateQueryExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQueryExecutionRequest.ProtoReflect.Descriptor instead.
func (*UpdateQueryExecutionRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateQueryExecutionRequest) GetResult() *QueryExecutionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateQueryExecutionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Nexus ACK's the update
	Ack           bool   `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQueryExecutionResponse) Reset() {
	*x = UpdateQueryExecutionResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQueryExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQueryExecutionResponse) ProtoMessage() {}

func (x *UpdateQueryExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQueryExecutionResponse.ProtoReflect.Descriptor instead.
func (*UpdateQueryExecutionResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateQueryExecutionResponse) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

func (x *UpdateQueryExecutionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PollQueryExecutionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DatasetPid     string                 `protobuf:"bytes,1,opt,name=dataset_pid,json=datasetPid,proto3" json:"dataset_pid,omitempty"`
	QueryResultPid string                 `protobuf:"bytes,2,opt,name=query_result_pid,json=queryResultPid,proto3" json:"query_result_pid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PollQueryExecutionRequest) Reset() {
	*x = PollQueryExecutionRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollQueryExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollQueryExecutionRequest) ProtoMessage() {}

func (x *PollQueryExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollQueryExecutionRequest.ProtoReflect.Descriptor instead.
func (*PollQueryExecutionRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{48}
}

func (x *PollQueryExecutionRequest) GetDatasetPid() string {
	if x != nil {
		return x.DatasetPid
	}
	return ""
}

func (x *PollQueryExecutionRequest) GetQueryResultPid() string {
	if x != nil {
		return x.QueryResultPid
	}
	return ""
}

type PollQueryExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *QueryExecutionResult  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollQueryExecutionResponse) Reset() {
	*x = PollQueryExecutionResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollQueryExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollQueryExecutionResponse) ProtoMessage() {}

func (x *PollQueryExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollQueryExecutionResponse.ProtoReflect.Descriptor instead.
func (*PollQueryExecutionResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{49}
}

func (x *PollQueryExecutionResponse) GetResult() *QueryExecutionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// The request message sent to fluid instances to perform a request
type ExecQueryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	QueryResultPid string                 `protobuf:"bytes,1,opt,name=query_result_pid,json=queryResultPid,proto3" json:"query_result_pid,omitempty"`
	Query          *Query                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExecQueryRequest) Reset() {
	*x = ExecQueryRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecQueryRequest) ProtoMessage() {}

func (x *ExecQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecQueryRequest.ProtoReflect.Descriptor instead.
func (*ExecQueryRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{50}
}

func (x *ExecQueryRequest) GetQueryResultPid() string {
	if x != nil {
		return x.QueryResultPid
	}
	return ""
}

func (x *ExecQueryRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type QueryExecutionResult struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DatasetPid     string                 `protobuf:"bytes,1,opt,name=dataset_pid,json=datasetPid,proto3" json:"dataset_pid,omitempty"`
	QueryResultPid string                 `protobuf:"bytes,2,opt,name=query_result_pid,json=queryResultPid,proto3" json:"query_result_pid,omitempty"`
	Status         QueryExecutionStatus   `protobuf:"varint,3,opt,name=status,proto3,enum=nexus.controlplane.v1.QueryExecutionStatus" json:"status,omitempty"`
	Data           *QueryExecutionData    `protobuf:"bytes,4,opt,name=data,proto3,oneof" json:"data,omitempty"`
	ErrorMessage   *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryExecutionResult) Reset() {
	*x = QueryExecutionResult{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExecutionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExecutionResult) ProtoMessage() {}

func (x *QueryExecutionResult) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExecutionResult.ProtoReflect.Descriptor instead.
func (*QueryExecutionResult) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{51}
}

func (x *QueryExecutionResult) GetDatasetPid() string {
	if x != nil {
		return x.DatasetPid
	}
	return ""
}

func (x *QueryExecutionResult) GetQueryResultPid() string {
	if x != nil {
		return x.QueryResultPid
	}
	return ""
}

func (x *QueryExecutionResult) GetStatus() QueryExecutionStatus {
	if x != nil {
		return x.Status
	}
	return QueryExecutionStatus_QUERY_EXECUTION_STATUS_UNSPECIFIED
}

func (x *QueryExecutionResult) GetData() *QueryExecutionData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryExecutionResult) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type QueryExecutionData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The time series data. If many fields are queried at once
	// e.g select bytes, src_ip each field will have its own series
	Series *Series `protobuf:"bytes,1,opt,name=series,proto3" json:"series,omitempty"`
	// This the "raw" data i.e the rows returned by the query.
	// Used to show the raw data in the UI
	Rows          []*Row `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryExecutionData) Reset() {
	*x = QueryExecutionData{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExecutionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExecutionData) ProtoMessage() {}

func (x *QueryExecutionData) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExecutionData.ProtoReflect.Descriptor instead.
func (*QueryExecutionData) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{52}
}

func (x *QueryExecutionData) GetSeries() *Series {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *QueryExecutionData) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

// ===== AGENT LIFECYCLE =====//
type HeartbeatRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The agent ID. These are generated by the agent themselves.
	// They are of the form agt_{nanoid}
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClusterPid    string `protobuf:"bytes,2,opt,name=cluster_pid,json=clusterPid,proto3" json:"cluster_pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{53}
}

func (x *HeartbeatRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HeartbeatRequest) GetClusterPid() string {
	if x != nil {
		return x.ClusterPid
	}
	return ""
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClusterPid    string                 `protobuf:"bytes,2,opt,name=cluster_pid,json=clusterPid,proto3" json:"cluster_pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{54}
}

func (x *HeartbeatResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HeartbeatResponse) GetClusterPid() string {
	if x != nil {
		return x.ClusterPid
	}
	return ""
}

type AgentMetadata struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClusterPid string                 `protobuf:"bytes,2,opt,name=cluster_pid,json=clusterPid,proto3" json:"cluster_pid,omitempty"`
	Version    string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// The status of the agent. The control plane manages this field.
	// It is determined by the heartbeat recency.
	Status AgentStatus `protobuf:"varint,4,opt,name=status,proto3,enum=nexus.controlplane.v1.AgentStatus" json:"status,omitempty"`
	// The last heartbeat we received.
	LastHeartbeat *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentMetadata) Reset() {
	*x = AgentMetadata{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMetadata) ProtoMessage() {}

func (x *AgentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMetadata.ProtoReflect.Descriptor instead.
func (*AgentMetadata) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{55}
}

func (x *AgentMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentMetadata) GetClusterPid() string {
	if x != nil {
		return x.ClusterPid
	}
	return ""
}

func (x *AgentMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AgentMetadata) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *AgentMetadata) GetLastHeartbeat() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeat
	}
	return nil
}

type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{56}
}

func (x *Heartbeat) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Heartbeat) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ControlMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Control       *ControlMessage        `protobuf:"bytes,2,opt,name=control,proto3" json:"control,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlMessageRequest) Reset() {
	*x = ControlMessageRequest{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessageRequest) ProtoMessage() {}

func (x *ControlMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessageRequest.ProtoReflect.Descriptor instead.
func (*ControlMessageRequest) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{57}
}

func (x *ControlMessageRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ControlMessageRequest) GetControl() *ControlMessage {
	if x != nil {
		return x.Control
	}
	return nil
}

type ControlMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Control       *ControlMessage        `protobuf:"bytes,2,opt,name=control,proto3" json:"control,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlMessageResponse) Reset() {
	*x = ControlMessageResponse{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessageResponse) ProtoMessage() {}

func (x *ControlMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessageResponse.ProtoReflect.Descriptor instead.
func (*ControlMessageResponse) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{58}
}

func (x *ControlMessageResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ControlMessageResponse) GetControl() *ControlMessage {
	if x != nil {
		return x.Control
	}
	return nil
}

func (x *ControlMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ControlMessageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ControlMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ControlMessage_Telemetry
	//	*ControlMessage_Devices
	Message       isControlMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlMessage) Reset() {
	*x = ControlMessage{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage) ProtoMessage() {}

func (x *ControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{59}
}

func (x *ControlMessage) GetMessage() isControlMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ControlMessage) GetTelemetry() *TelemetryControl {
	if x != nil {
		if x, ok := x.Message.(*ControlMessage_Telemetry); ok {
			return x.Telemetry
		}
	}
	return nil
}

func (x *ControlMessage) GetDevices() *DeviceControl {
	if x != nil {
		if x, ok := x.Message.(*ControlMessage_Devices); ok {
			return x.Devices
		}
	}
	return nil
}

type isControlMessage_Message interface {
	isControlMessage_Message()
}

type ControlMessage_Telemetry struct {
	Telemetry *TelemetryControl `protobuf:"bytes,1,opt,name=telemetry,proto3,oneof"`
}

type ControlMessage_Devices struct {
	Devices *DeviceControl `protobuf:"bytes,2,opt,name=devices,proto3,oneof"`
}

func (*ControlMessage_Telemetry) isControlMessage_Message() {}

func (*ControlMessage_Devices) isControlMessage_Message() {}

// Telemetry control messages
type TelemetryControl struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether or not to export telemetry data. This can be
	// switched off to prevent data from being written to
	// the catalogue and to blob storage.
	Export        bool `protobuf:"varint,1,opt,name=export,proto3" json:"export,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TelemetryControl) Reset() {
	*x = TelemetryControl{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryControl) ProtoMessage() {}

func (x *TelemetryControl) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryControl.ProtoReflect.Descriptor instead.
func (*TelemetryControl) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{60}
}

func (x *TelemetryControl) GetExport() bool {
	if x != nil {
		return x.Export
	}
	return false
}

// Device control messages
type DeviceControl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Devices       []*Device              `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceControl) Reset() {
	*x = DeviceControl{}
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceControl) ProtoMessage() {}

func (x *DeviceControl) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_controlplane_v1_control_plane_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceControl.ProtoReflect.Descriptor instead.
func (*DeviceControl) Descriptor() ([]byte, []int) {
	return file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP(), []int{61}
}

func (x *DeviceControl) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

var File_nexus_controlplane_v1_control_plane_proto protoreflect.FileDescriptor

const file_nexus_controlplane_v1_control_plane_proto_rawDesc = "" +
	"\n" +
	")nexus/controlplane/v1/control_plane.proto\x12\x15nexus.controlplane.v1\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x10std/v1/std.proto\"\xf7\x01\n" +
	"\aDataset\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x12\x19\n" +
	"\bteam_pid\x18\x02 \x01(\tR\ateamPid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x04 \x01(\tH\x00R\vdescription\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\x0e\n" +
	"\f_description\"|\n" +
	"\x14CreateDatasetRequest\x12\x19\n" +
	"\bteam_pid\x18\x01 \x01(\tR\ateamPid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x00R\vdescription\x88\x01\x01B\x0e\n" +
	"\f_description\"\x9e\x01\n" +
	"\x15CreateDatasetResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x128\n" +
	"\adataset\x18\x02 \x01(\v2\x1e.nexus.controlplane.v1.DatasetR\adataset\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"(\n" +
	"\x14DeleteDatasetRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\"d\n" +
	"\x15DeleteDatasetResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x129\n" +
	"\n" +
	"deleted_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tdeletedAt\"0\n" +
	"\x13ListDatasetsRequest\x12\x19\n" +
	"\bteam_pid\x18\x01 \x01(\tR\ateamPid\"m\n" +
	"\x14ListDatasetsResponse\x12\x19\n" +
	"\bteam_pid\x18\x01 \x01(\tR\ateamPid\x12:\n" +
	"\bdatasets\x18\x02 \x03(\v2\x1e.nexus.controlplane.v1.DatasetR\bdatasets\"%\n" +
	"\x11GetDatasetRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\"`\n" +
	"\x12GetDatasetResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x128\n" +
	"\adataset\x18\x02 \x01(\v2\x1e.nexus.controlplane.v1.DatasetR\adataset\"\xf8\x01\n" +
	"\aCluster\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x12\x19\n" +
	"\bteam_pid\x18\x02 \x01(\tR\ateamPid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x126\n" +
	"\x04type\x18\x04 \x01(\x0e2\".nexus.controlplane.v1.ClusterTypeR\x04type\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"}\n" +
	"\x14CreateClusterRequest\x12\x19\n" +
	"\bteam_pid\x18\x01 \x01(\tR\ateamPid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x126\n" +
	"\x04type\x18\x03 \x01(\x0e2\".nexus.controlplane.v1.ClusterTypeR\x04type\"\x9e\x01\n" +
	"\x15CreateClusterResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x128\n" +
	"\acluster\x18\x02 \x01(\v2\x1e.nexus.controlplane.v1.ClusterR\acluster\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"(\n" +
	"\x14DeleteClusterRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\"d\n" +
	"\x15DeleteClusterResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x129\n" +
	"\n" +
	"deleted_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tdeletedAt\"0\n" +
	"\x13ListClustersRequest\x12\x19\n" +
	"\bteam_pid\x18\x01 \x01(\tR\ateamPid\"m\n" +
	"\x14ListClustersResponse\x12\x19\n" +
	"\bteam_pid\x18\x01 \x01(\tR\ateamPid\x12:\n" +
	"\bclusters\x18\x02 \x03(\v2\x1e.nexus.controlplane.v1.ClusterR\bclusters\"%\n" +
	"\x11GetClusterRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\"`\n" +
	"\x12GetClusterResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x128\n" +
	"\acluster\x18\x02 \x01(\v2\x1e.nexus.controlplane.v1.ClusterR\acluster\"\xaa\x03\n" +
	"\x06Device\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x12\x19\n" +
	"\bteam_pid\x18\x02 \x01(\tR\ateamPid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x04 \x01(\tH\x01R\vdescription\x88\x01\x01\x12?\n" +
	"\ageneric\x18\x05 \x01(\v2#.nexus.controlplane.v1.GenericModelH\x00R\ageneric\x12>\n" +
	"\taddresses\x18\x06 \x03(\v2 .nexus.controlplane.v1.IpAddressR\taddresses\x12(\n" +
	"\x06labels\x18\a \x03(\v2\x10.std.v1.KeyValueR\x06labels\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\a\n" +
	"\x05modelB\x0e\n" +
	"\f_description\"\xc2\x01\n" +
	"\fGenericModel\x12\x14\n" +
	"\x05model\x18\x01 \x01(\tR\x05model\x12#\n" +
	"\fother_vendor\x18\x02 \x01(\tH\x00R\votherVendor\x124\n" +
	"\x05cisco\x18\x03 \x01(\v2\x1c.nexus.controlplane.v1.CiscoH\x00R\x05cisco\x127\n" +
	"\x06arista\x18\x04 \x01(\v2\x1d.nexus.controlplane.v1.AristaH\x00R\x06aristaB\b\n" +
	"\x06vendor\"\a\n" +
	"\x05Cisco\"\b\n" +
	"\x06Arista\"a\n" +
	"\tIpAddress\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x12:\n" +
	"\aversion\x18\x02 \x01(\x0e2 .nexus.controlplane.v1.IPVersionR\aversion\"\x9a\x02\n" +
	"\x13CreateDeviceRequest\x12\x19\n" +
	"\bteam_pid\x18\x01 \x01(\tR\ateamPid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12?\n" +
	"\ageneric\x18\x04 \x01(\v2#.nexus.controlplane.v1.GenericModelH\x00R\ageneric\x12>\n" +
	"\taddresses\x18\x05 \x03(\v2 .nexus.controlplane.v1.IpAddressR\taddresses\x12(\n" +
	"\x06labels\x18\x06 \x03(\v2\x10.std.v1.KeyValueR\x06labelsB\a\n" +
	"\x05model\"\x9a\x01\n" +
	"\x14CreateDeviceResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x125\n" +
	"\x06device\x18\x02 \x01(\v2\x1d.nexus.controlplane.v1.DeviceR\x06device\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"'\n" +
	"\x13DeleteDeviceRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\"c\n" +
	"\x14DeleteDeviceResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x129\n" +
	"\n" +
	"deleted_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tdeletedAt\"\x9b\x01\n" +
	"\x13UpdateDeviceRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x125\n" +
	"\x06device\x18\x02 \x01(\v2\x1d.nexus.controlplane.v1.DeviceR\x06device\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x9a\x01\n" +
	"\x14UpdateDeviceResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x125\n" +
	"\x06device\x18\x02 \x01(\v2\x1d.nexus.controlplane.v1.DeviceR\x06device\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"$\n" +
	"\x10GetDeviceRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\"\\\n" +
	"\x11GetDeviceResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x125\n" +
	"\x06device\x18\x02 \x01(\v2\x1d.nexus.controlplane.v1.DeviceR\x06device\"/\n" +
	"\x12ListDevicesRequest\x12\x19\n" +
	"\bteam_pid\x18\x01 \x01(\tR\ateamPid\"i\n" +
	"\x13ListDevicesResponse\x12\x19\n" +
	"\bteam_pid\x18\x01 \x01(\tR\ateamPid\x127\n" +
	"\adevices\x18\x02 \x03(\v2\x1d.nexus.controlplane.v1.DeviceR\adevices\"\x9a\x04\n" +
	"\x05Query\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x12\x19\n" +
	"\bteam_pid\x18\x02 \x01(\tR\ateamPid\x12\x1f\n" +
	"\vdataset_pid\x18\x03 \x01(\tR\n" +
	"datasetPid\x12>\n" +
	"\tvisualise\x18\x04 \x03(\v2 .nexus.controlplane.v1.VisualiseR\tvisualise\x122\n" +
	"\x05where\x18\x05 \x01(\v2\x1c.nexus.controlplane.v1.WhereR\x05where\x12\x19\n" +
	"\bgroup_by\x18\x06 \x03(\tR\agroupBy\x127\n" +
	"\border_by\x18\a \x03(\v2\x1c.nexus.controlplane.v1.OrderR\aorderBy\x12\x14\n" +
	"\x05limit\x18\b \x01(\rR\x05limit\x125\n" +
	"\x06having\x18\t \x01(\v2\x1d.nexus.controlplane.v1.ClauseR\x06having\x12\x1d\n" +
	"\n" +
	"start_time\x18\n" +
	" \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\v \x01(\x03R\aendTime\x129\n" +
	"\n" +
	"created_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"U\n" +
	"\tVisualise\x122\n" +
	"\x02op\x18\x01 \x01(\x0e2\".nexus.controlplane.v1.VisualiseOpR\x02op\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\"p\n" +
	"\x05Where\x12.\n" +
	"\x02op\x18\x01 \x01(\x0e2\x1e.nexus.controlplane.v1.WhereOpR\x02op\x127\n" +
	"\aclauses\x18\x02 \x03(\v2\x1d.nexus.controlplane.v1.ClauseR\aclauses\"f\n" +
	"\x06Clause\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x120\n" +
	"\x02op\x18\x03 \x01(\x0e2 .nexus.controlplane.v1.CompareOpR\x02op\"S\n" +
	"\x05Order\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x124\n" +
	"\x05order\x18\x02 \x01(\x0e2\x1e.nexus.controlplane.v1.OrderOpR\x05order\"\x9d\x02\n" +
	"\x06Series\x12:\n" +
	"\n" +
	"timestamps\x18\x01 \x03(\v2\x1a.google.protobuf.TimestampR\n" +
	"timestamps\x12;\n" +
	"\x04data\x18\x02 \x03(\v2'.nexus.controlplane.v1.Series.DataEntryR\x04data\x12&\n" +
	"\x0evisualisations\x18\x03 \x03(\tR\x0evisualisations\x12\x16\n" +
	"\x06groups\x18\x04 \x03(\tR\x06groups\x1aZ\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x127\n" +
	"\x05value\x18\x02 \x01(\v2!.nexus.controlplane.v1.SeriesDataR\x05value:\x028\x01\"G\n" +
	"\n" +
	"SeriesData\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\x06values\x18\x02 \x03(\v2\r.std.v1.ValueR\x06values\"^\n" +
	"\x03Row\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12?\n" +
	"\n" +
	"row_values\x18\x02 \x03(\v2 .nexus.controlplane.v1.RowValuesR\trowValues\"2\n" +
	"\tRowValues\x12%\n" +
	"\x06values\x18\x01 \x03(\v2\r.std.v1.ValueR\x06values\"\x84\x01\n" +
	"\x12CreateQueryRequest\x12\x19\n" +
	"\bteam_pid\x18\x01 \x01(\tR\ateamPid\x12\x1f\n" +
	"\vdataset_pid\x18\x02 \x01(\tR\n" +
	"datasetPid\x122\n" +
	"\x05query\x18\x03 \x01(\v2\x1c.nexus.controlplane.v1.QueryR\x05query\"\x96\x01\n" +
	"\x13CreateQueryResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x122\n" +
	"\x05query\x18\x02 \x01(\v2\x1c.nexus.controlplane.v1.QueryR\x05query\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\":\n" +
	"\x1bSubmitQueryExecutionRequest\x12\x1b\n" +
	"\tquery_pid\x18\x01 \x01(\tR\bqueryPid\"e\n" +
	"\x1cSubmitQueryExecutionResponse\x12\x1b\n" +
	"\tquery_pid\x18\x01 \x01(\tR\bqueryPid\x12(\n" +
	"\x10query_result_pid\x18\x02 \x01(\tR\x0equeryResultPid\"b\n" +
	"\x1bUpdateQueryExecutionRequest\x12C\n" +
	"\x06result\x18\x01 \x01(\v2+.nexus.controlplane.v1.QueryExecutionResultR\x06result\"@\n" +
	"\x1cUpdateQueryExecutionResponse\x12\x10\n" +
	"\x03ack\x18\x01 \x01(\bR\x03ack\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"f\n" +
	"\x19PollQueryExecutionRequest\x12\x1f\n" +
	"\vdataset_pid\x18\x01 \x01(\tR\n" +
	"datasetPid\x12(\n" +
	"\x10query_result_pid\x18\x02 \x01(\tR\x0equeryResultPid\"a\n" +
	"\x1aPollQueryExecutionResponse\x12C\n" +
	"\x06result\x18\x01 \x01(\v2+.nexus.controlplane.v1.QueryExecutionResultR\x06result\"p\n" +
	"\x10ExecQueryRequest\x12(\n" +
	"\x10query_result_pid\x18\x01 \x01(\tR\x0equeryResultPid\x122\n" +
	"\x05query\x18\x02 \x01(\v2\x1c.nexus.controlplane.v1.QueryR\x05query\"\xaf\x02\n" +
	"\x14QueryExecutionResult\x12\x1f\n" +
	"\vdataset_pid\x18\x01 \x01(\tR\n" +
	"datasetPid\x12(\n" +
	"\x10query_result_pid\x18\x02 \x01(\tR\x0equeryResultPid\x12C\n" +
	"\x06status\x18\x03 \x01(\x0e2+.nexus.controlplane.v1.QueryExecutionStatusR\x06status\x12B\n" +
	"\x04data\x18\x04 \x01(\v2).nexus.controlplane.v1.QueryExecutionDataH\x00R\x04data\x88\x01\x01\x12(\n" +
	"\rerror_message\x18\x05 \x01(\tH\x01R\ferrorMessage\x88\x01\x01B\a\n" +
	"\x05_dataB\x10\n" +
	"\x0e_error_message\"{\n" +
	"\x12QueryExecutionData\x125\n" +
	"\x06series\x18\x01 \x01(\v2\x1d.nexus.controlplane.v1.SeriesR\x06series\x12.\n" +
	"\x04rows\x18\x02 \x03(\v2\x1a.nexus.controlplane.v1.RowR\x04rows\"C\n" +
	"\x10HeartbeatRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vcluster_pid\x18\x02 \x01(\tR\n" +
	"clusterPid\"D\n" +
	"\x11HeartbeatResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vcluster_pid\x18\x02 \x01(\tR\n" +
	"clusterPid\"\xd9\x01\n" +
	"\rAgentMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vcluster_pid\x18\x02 \x01(\tR\n" +
	"clusterPid\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12:\n" +
	"\x06status\x18\x04 \x01(\x0e2\".nexus.controlplane.v1.AgentStatusR\x06status\x12A\n" +
	"\x0elast_heartbeat\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\rlastHeartbeat\"`\n" +
	"\tHeartbeat\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"w\n" +
	"\x15ControlMessageRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12?\n" +
	"\acontrol\x18\x02 \x01(\v2%.nexus.controlplane.v1.ControlMessageR\acontrol\"\xa8\x01\n" +
	"\x16ControlMessageResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12?\n" +
	"\acontrol\x18\x02 \x01(\v2%.nexus.controlplane.v1.ControlMessageR\acontrol\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"\xa6\x01\n" +
	"\x0eControlMessage\x12G\n" +
	"\ttelemetry\x18\x01 \x01(\v2'.nexus.controlplane.v1.TelemetryControlH\x00R\ttelemetry\x12@\n" +
	"\adevices\x18\x02 \x01(\v2$.nexus.controlplane.v1.DeviceControlH\x00R\adevicesB\t\n" +
	"\amessage\"*\n" +
	"\x10TelemetryControl\x12\x16\n" +
	"\x06export\x18\x01 \x01(\bR\x06export\"H\n" +
	"\rDeviceControl\x127\n" +
	"\adevices\x18\x01 \x03(\v2\x1d.nexus.controlplane.v1.DeviceR\adevices*_\n" +
	"\vClusterType\x12\x1c\n" +
	"\x18CLUSTER_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11CLUSTER_TYPE_BYOC\x10\x01\x12\x1b\n" +
	"\x17CLUSTER_TYPE_SERVERLESS\x10\x02*N\n" +
	"\tIPVersion\x12\x19\n" +
	"\x15IPVERSION_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eIPVERSION_IPV4\x10\x01\x12\x12\n" +
	"\x0eIPVERSION_IPV6\x10\x02*\x81\x04\n" +
	"\vVisualiseOp\x12\x1c\n" +
	"\x18VISUALISE_OP_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12VISUALISE_OP_COUNT\x10\x01\x12\x1f\n" +
	"\x1bVISUALISE_OP_COUNT_DISTINCT\x10\x02\x12\x14\n" +
	"\x10VISUALISE_OP_SUM\x10\x03\x12\x14\n" +
	"\x10VISUALISE_OP_AVG\x10\x04\x12\x14\n" +
	"\x10VISUALISE_OP_MAX\x10\x05\x12\x14\n" +
	"\x10VISUALISE_OP_MIN\x10\x06\x12\x15\n" +
	"\x11VISUALISE_OP_P001\x10\a\x12\x14\n" +
	"\x10VISUALISE_OP_P01\x10\b\x12\x14\n" +
	"\x10VISUALISE_OP_P05\x10\t\x12\x14\n" +
	"\x10VISUALISE_OP_P10\x10\n" +
	"\x12\x14\n" +
	"\x10VISUALISE_OP_P25\x10\v\x12\x14\n" +
	"\x10VISUALISE_OP_P50\x10\f\x12\x14\n" +
	"\x10VISUALISE_OP_P75\x10\r\x12\x14\n" +
	"\x10VISUALISE_OP_P90\x10\x0e\x12\x14\n" +
	"\x10VISUALISE_OP_P95\x10\x0f\x12\x14\n" +
	"\x10VISUALISE_OP_P99\x10\x10\x12\x15\n" +
	"\x11VISUALISE_OP_P999\x10\x11\x12\x19\n" +
	"\x15VISUALISE_OP_RATE_AVG\x10\x12\x12\x19\n" +
	"\x15VISUALISE_OP_RATE_SUM\x10\x13\x12\x19\n" +
	"\x15VISUALISE_OP_RATE_MAX\x10\x14*F\n" +
	"\aWhereOp\x12\x18\n" +
	"\x14WHERE_OP_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fWHERE_OP_AND\x10\x01\x12\x0f\n" +
	"\vWHERE_OP_OR\x10\x02*\xbb\x02\n" +
	"\tCompareOp\x12\x1a\n" +
	"\x16COMPARE_OP_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10COMPARE_OP_EQUAL\x10\x01\x12\x18\n" +
	"\x14COMPARE_OP_NOT_EQUAL\x10\x02\x12\x1b\n" +
	"\x17COMPARE_OP_GREATER_THAN\x10\x03\x12$\n" +
	" COMPARE_OP_GREATER_THAN_OR_EQUAL\x10\x04\x12\x18\n" +
	"\x14COMPARE_OP_LESS_THAN\x10\x05\x12!\n" +
	"\x1dCOMPARE_OP_LESS_THAN_OR_EQUAL\x10\x06\x12\x17\n" +
	"\x13COMPARE_OP_CONTAINS\x10\a\x12\x1f\n" +
	"\x1bCOMPARE_OP_DOES_NOT_CONTAIN\x10\b\x12\x11\n" +
	"\rCOMPARE_OP_IN\x10\t\x12\x15\n" +
	"\x11COMPARE_OP_NOT_IN\x10\n" +
	"*H\n" +
	"\aOrderOp\x12\x18\n" +
	"\x14ORDER_OP_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fORDER_OP_ASC\x10\x01\x12\x11\n" +
	"\rORDER_OP_DESC\x10\x02*\xcf\x01\n" +
	"\x14QueryExecutionStatus\x12&\n" +
	"\"QUERY_EXECUTION_STATUS_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eQUERY_EXECUTION_STATUS_PENDING\x10\x01\x12\"\n" +
	"\x1eQUERY_EXECUTION_STATUS_RUNNING\x10\x02\x12$\n" +
	" QUERY_EXECUTION_STATUS_COMPLETED\x10\x03\x12!\n" +
	"\x1dQUERY_EXECUTION_STATUS_FAILED\x10\x04*\x91\x01\n" +
	"\vAgentStatus\x12\x1c\n" +
	"\x18AGENT_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12AGENT_STATUS_ALIVE\x10\x01\x12\x16\n" +
	"\x12AGENT_STATUS_STALE\x10\x02\x12\x1d\n" +
	"\x19AGENT_STATUS_UNRESPONSIVE\x10\x03\x12\x15\n" +
	"\x11AGENT_STATUS_DEAD\x10\x042\xc7\x0f\n" +
	"\x13ControlPlaneService\x12l\n" +
	"\rCreateDataset\x12+.nexus.controlplane.v1.CreateDatasetRequest\x1a,.nexus.controlplane.v1.CreateDatasetResponse\"\x00\x12l\n" +
	"\rDeleteDataset\x12+.nexus.controlplane.v1.DeleteDatasetRequest\x1a,.nexus.controlplane.v1.DeleteDatasetResponse\"\x00\x12i\n" +
	"\fListDatasets\x12*.nexus.controlplane.v1.ListDatasetsRequest\x1a+.nexus.controlplane.v1.ListDatasetsResponse\"\x00\x12c\n" +
	"\n" +
	"GetDataset\x12(.nexus.controlplane.v1.GetDatasetRequest\x1a).nexus.controlplane.v1.GetDatasetResponse\"\x00\x12l\n" +
	"\rCreateCluster\x12+.nexus.controlplane.v1.CreateClusterRequest\x1a,.nexus.controlplane.v1.CreateClusterResponse\"\x00\x12l\n" +
	"\rDeleteCluster\x12+.nexus.controlplane.v1.DeleteClusterRequest\x1a,.nexus.controlplane.v1.DeleteClusterResponse\"\x00\x12i\n" +
	"\fListClusters\x12*.nexus.controlplane.v1.ListClustersRequest\x1a+.nexus.controlplane.v1.ListClustersResponse\"\x00\x12c\n" +
	"\n" +
	"GetCluster\x12(.nexus.controlplane.v1.GetClusterRequest\x1a).nexus.controlplane.v1.GetClusterResponse\"\x00\x12i\n" +
	"\fCreateDevice\x12*.nexus.controlplane.v1.CreateDeviceRequest\x1a+.nexus.controlplane.v1.CreateDeviceResponse\"\x00\x12i\n" +
	"\fDeleteDevice\x12*.nexus.controlplane.v1.DeleteDeviceRequest\x1a+.nexus.controlplane.v1.DeleteDeviceResponse\"\x00\x12i\n" +
	"\fUpdateDevice\x12*.nexus.controlplane.v1.UpdateDeviceRequest\x1a+.nexus.controlplane.v1.UpdateDeviceResponse\"\x00\x12f\n" +
	"\vListDevices\x12).nexus.controlplane.v1.ListDevicesRequest\x1a*.nexus.controlplane.v1.ListDevicesResponse\"\x00\x12`\n" +
	"\tGetDevice\x12'.nexus.controlplane.v1.GetDeviceRequest\x1a(.nexus.controlplane.v1.GetDeviceResponse\"\x00\x12f\n" +
	"\vCreateQuery\x12).nexus.controlplane.v1.CreateQueryRequest\x1a*.nexus.controlplane.v1.CreateQueryResponse\"\x00\x12\x81\x01\n" +
	"\x14SubmitQueryExecution\x122.nexus.controlplane.v1.SubmitQueryExecutionRequest\x1a3.nexus.controlplane.v1.SubmitQueryExecutionResponse\"\x00\x12\x81\x01\n" +
	"\x14UpdateQueryExecution\x122.nexus.controlplane.v1.UpdateQueryExecutionRequest\x1a3.nexus.controlplane.v1.UpdateQueryExecutionResponse\"\x00\x12{\n" +
	"\x12PollQueryExecution\x120.nexus.controlplane.v1.PollQueryExecutionRequest\x1a1.nexus.controlplane.v1.PollQueryExecutionResponse\"\x00\x12`\n" +
	"\tHeartbeat\x12'.nexus.controlplane.v1.HeartbeatRequest\x1a(.nexus.controlplane.v1.HeartbeatResponse\"\x00BFZDgithub.com/liquidspill/proto/go/nexus/controlplane/v1;controlplanev1b\x06proto3"

var (
	file_nexus_controlplane_v1_control_plane_proto_rawDescOnce sync.Once
	file_nexus_controlplane_v1_control_plane_proto_rawDescData []byte
)

func file_nexus_controlplane_v1_control_plane_proto_rawDescGZIP() []byte {
	file_nexus_controlplane_v1_control_plane_proto_rawDescOnce.Do(func() {
		file_nexus_controlplane_v1_control_plane_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nexus_controlplane_v1_control_plane_proto_rawDesc), len(file_nexus_controlplane_v1_control_plane_proto_rawDesc)))
	})
	return file_nexus_controlplane_v1_control_plane_proto_rawDescData
}

var file_nexus_controlplane_v1_control_plane_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_nexus_controlplane_v1_control_plane_proto_msgTypes = make([]protoimpl.MessageInfo, 63)
var file_nexus_controlplane_v1_control_plane_proto_goTypes = []any{
	(ClusterType)(0),                     // 0: nexus.controlplane.v1.ClusterType
	(IPVersion)(0),                       // 1: nexus.controlplane.v1.IPVersion
	(VisualiseOp)(0),                     // 2: nexus.controlplane.v1.VisualiseOp
	(WhereOp)(0),                         // 3: nexus.controlplane.v1.WhereOp
	(CompareOp)(0),                       // 4: nexus.controlplane.v1.CompareOp
	(OrderOp)(0),                         // 5: nexus.controlplane.v1.OrderOp
	(QueryExecutionStatus)(0),            // 6: nexus.controlplane.v1.QueryExecutionStatus
	(AgentStatus)(0),                     // 7: nexus.controlplane.v1.AgentStatus
	(*Dataset)(nil),                      // 8: nexus.controlplane.v1.Dataset
	(*CreateDatasetRequest)(nil),         // 9: nexus.controlplane.v1.CreateDatasetRequest
	(*CreateDatasetResponse)(nil),        // 10: nexus.controlplane.v1.CreateDatasetResponse
	(*DeleteDatasetRequest)(nil),         // 11: nexus.controlplane.v1.DeleteDatasetRequest
	(*DeleteDatasetResponse)(nil),        // 12: nexus.controlplane.v1.DeleteDatasetResponse
	(*ListDatasetsRequest)(nil),          // 13: nexus.controlplane.v1.ListDatasetsRequest
	(*ListDatasetsResponse)(nil),         // 14: nexus.controlplane.v1.ListDatasetsResponse
	(*GetDatasetRequest)(nil),            // 15: nexus.controlplane.v1.GetDatasetRequest
	(*GetDatasetResponse)(nil),           // 16: nexus.controlplane.v1.GetDatasetResponse
	(*Cluster)(nil),                      // 17: nexus.controlplane.v1.Cluster
	(*CreateClusterRequest)(nil),         // 18: nexus.controlplane.v1.CreateClusterRequest
	(*CreateClusterResponse)(nil),        // 19: nexus.controlplane.v1.CreateClusterResponse
	(*DeleteClusterRequest)(nil),         // 20: nexus.controlplane.v1.DeleteClusterRequest
	(*DeleteClusterResponse)(nil),        // 21: nexus.controlplane.v1.DeleteClusterResponse
	(*ListClustersRequest)(nil),          // 22: nexus.controlplane.v1.ListClustersRequest
	(*ListClustersResponse)(nil),         // 23: nexus.controlplane.v1.ListClustersResponse
	(*GetClusterRequest)(nil),            // 24: nexus.controlplane.v1.GetClusterRequest
	(*GetClusterResponse)(nil),           // 25: nexus.controlplane.v1.GetClusterResponse
	(*Device)(nil),                       // 26: nexus.controlplane.v1.Device
	(*GenericModel)(nil),                 // 27: nexus.controlplane.v1.GenericModel
	(*Cisco)(nil),                        // 28: nexus.controlplane.v1.Cisco
	(*Arista)(nil),                       // 29: nexus.controlplane.v1.Arista
	(*IpAddress)(nil),                    // 30: nexus.controlplane.v1.IpAddress
	(*CreateDeviceRequest)(nil),          // 31: nexus.controlplane.v1.CreateDeviceRequest
	(*CreateDeviceResponse)(nil),         // 32: nexus.controlplane.v1.CreateDeviceResponse
	(*DeleteDeviceRequest)(nil),          // 33: nexus.controlplane.v1.DeleteDeviceRequest
	(*DeleteDeviceResponse)(nil),         // 34: nexus.controlplane.v1.DeleteDeviceResponse
	(*UpdateDeviceRequest)(nil),          // 35: nexus.controlplane.v1.UpdateDeviceRequest
	(*UpdateDeviceResponse)(nil),         // 36: nexus.controlplane.v1.UpdateDeviceResponse
	(*GetDeviceRequest)(nil),             // 37: nexus.controlplane.v1.GetDeviceRequest
	(*GetDeviceResponse)(nil),            // 38: nexus.controlplane.v1.GetDeviceResponse
	(*ListDevicesRequest)(nil),           // 39: nexus.controlplane.v1.ListDevicesRequest
	(*ListDevicesResponse)(nil),          // 40: nexus.controlplane.v1.ListDevicesResponse
	(*Query)(nil),                        // 41: nexus.controlplane.v1.Query
	(*Visualise)(nil),                    // 42: nexus.controlplane.v1.Visualise
	(*Where)(nil),                        // 43: nexus.controlplane.v1.Where
	(*Clause)(nil),                       // 44: nexus.controlplane.v1.Clause
	(*Order)(nil),                        // 45: nexus.controlplane.v1.Order
	(*Series)(nil),                       // 46: nexus.controlplane.v1.Series
	(*SeriesData)(nil),                   // 47: nexus.controlplane.v1.SeriesData
	(*Row)(nil),                          // 48: nexus.controlplane.v1.Row
	(*RowValues)(nil),                    // 49: nexus.controlplane.v1.RowValues
	(*CreateQueryRequest)(nil),           // 50: nexus.controlplane.v1.CreateQueryRequest
	(*CreateQueryResponse)(nil),          // 51: nexus.controlplane.v1.CreateQueryResponse
	(*SubmitQueryExecutionRequest)(nil),  // 52: nexus.controlplane.v1.SubmitQueryExecutionRequest
	(*SubmitQueryExecutionResponse)(nil), // 53: nexus.controlplane.v1.SubmitQueryExecutionResponse
	(*UpdateQueryExecutionRequest)(nil),  // 54: nexus.controlplane.v1.UpdateQueryExecutionRequest
	(*UpdateQueryExecutionResponse)(nil), // 55: nexus.controlplane.v1.UpdateQueryExecutionResponse
	(*PollQueryExecutionRequest)(nil),    // 56: nexus.controlplane.v1.PollQueryExecutionRequest
	(*PollQueryExecutionResponse)(nil),   // 57: nexus.controlplane.v1.PollQueryExecutionResponse
	(*ExecQueryRequest)(nil),             // 58: nexus.controlplane.v1.ExecQueryRequest
	(*QueryExecutionResult)(nil),         // 59: nexus.controlplane.v1.QueryExecutionResult
	(*QueryExecutionData)(nil),           // 60: nexus.controlplane.v1.QueryExecutionData
	(*HeartbeatRequest)(nil),             // 61: nexus.controlplane.v1.HeartbeatRequest
	(*HeartbeatResponse)(nil),            // 62: nexus.controlplane.v1.HeartbeatResponse
	(*AgentMetadata)(nil),                // 63: nexus.controlplane.v1.AgentMetadata
	(*Heartbeat)(nil),                    // 64: nexus.controlplane.v1.Heartbeat
	(*ControlMessageRequest)(nil),        // 65: nexus.controlplane.v1.ControlMessageRequest
	(*ControlMessageResponse)(nil),       // 66: nexus.controlplane.v1.ControlMessageResponse
	(*ControlMessage)(nil),               // 67: nexus.controlplane.v1.ControlMessage
	(*TelemetryControl)(nil),             // 68: nexus.controlplane.v1.TelemetryControl
	(*DeviceControl)(nil),                // 69: nexus.controlplane.v1.DeviceControl
	nil,                                  // 70: nexus.controlplane.v1.Series.DataEntry
	(*timestamppb.Timestamp)(nil),        // 71: google.protobuf.Timestamp
	(*v1.KeyValue)(nil),                  // 72: std.v1.KeyValue
	(*fieldmaskpb.FieldMask)(nil),        // 73: google.protobuf.FieldMask
	(*v1.Value)(nil),                     // 74: std.v1.Value
}
var file_nexus_controlplane_v1_control_plane_proto_depIdxs = []int32{
	71, // 0: nexus.controlplane.v1.Dataset.created_at:type_name -> google.protobuf.Timestamp
	71, // 1: nexus.controlplane.v1.Dataset.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 2: nexus.controlplane.v1.CreateDatasetResponse.dataset:type_name -> nexus.controlplane.v1.Dataset
	71, // 3: nexus.controlplane.v1.CreateDatasetResponse.created_at:type_name -> google.protobuf.Timestamp
	71, // 4: nexus.controlplane.v1.DeleteDatasetResponse.deleted_at:type_name -> google.protobuf.Timestamp
	8,  // 5: nexus.controlplane.v1.ListDatasetsResponse.datasets:type_name -> nexus.controlplane.v1.Dataset
	8,  // 6: nexus.controlplane.v1.GetDatasetResponse.dataset:type_name -> nexus.controlplane.v1.Dataset
	0,  // 7: nexus.controlplane.v1.Cluster.type:type_name -> nexus.controlplane.v1.ClusterType
	71, // 8: nexus.controlplane.v1.Cluster.created_at:type_name -> google.protobuf.Timestamp
	71, // 9: nexus.controlplane.v1.Cluster.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 10: nexus.controlplane.v1.CreateClusterRequest.type:type_name -> nexus.controlplane.v1.ClusterType
	17, // 11: nexus.controlplane.v1.CreateClusterResponse.cluster:type_name -> nexus.controlplane.v1.Cluster
	71, // 12: nexus.controlplane.v1.CreateClusterResponse.created_at:type_name -> google.protobuf.Timestamp
	71, // 13: nexus.controlplane.v1.DeleteClusterResponse.deleted_at:type_name -> google.protobuf.Timestamp
	17, // 14: nexus.controlplane.v1.ListClustersResponse.clusters:type_name -> nexus.controlplane.v1.Cluster
	17, // 15: nexus.controlplane.v1.GetClusterResponse.cluster:type_name -> nexus.controlplane.v1.Cluster
	27, // 16: nexus.controlplane.v1.Device.generic:type_name -> nexus.controlplane.v1.GenericModel
	30, // 17: nexus.controlplane.v1.Device.addresses:type_name -> nexus.controlplane.v1.IpAddress
	72, // 18: nexus.controlplane.v1.Device.labels:type_name -> std.v1.KeyValue
	71, // 19: nexus.controlplane.v1.Device.created_at:type_name -> google.protobuf.Timestamp
	71, // 20: nexus.controlplane.v1.Device.updated_at:type_name -> google.protobuf.Timestamp
	28, // 21: nexus.controlplane.v1.GenericModel.cisco:type_name -> nexus.controlplane.v1.Cisco
	29, // 22: nexus.controlplane.v1.GenericModel.arista:type_name -> nexus.controlplane.v1.Arista
	1,  // 23: nexus.controlplane.v1.IpAddress.version:type_name -> nexus.controlplane.v1.IPVersion
	27, // 24: nexus.controlplane.v1.CreateDeviceRequest.generic:type_name -> nexus.controlplane.v1.GenericModel
	30, // 25: nexus.controlplane.v1.CreateDeviceRequest.addresses:type_name -> nexus.controlplane.v1.IpAddress
	72, // 26: nexus.controlplane.v1.CreateDeviceRequest.labels:type_name -> std.v1.KeyValue
	26, // 27: nexus.controlplane.v1.CreateDeviceResponse.device:type_name -> nexus.controlplane.v1.Device
	71, // 28: nexus.controlplane.v1.CreateDeviceResponse.created_at:type_name -> google.protobuf.Timestamp
	71, // 29: nexus.controlplane.v1.DeleteDeviceResponse.deleted_at:type_name -> google.protobuf.Timestamp
	26, // 30: nexus.controlplane.v1.UpdateDeviceRequest.device:type_name -> nexus.controlplane.v1.Device
	73, // 31: nexus.controlplane.v1.UpdateDeviceRequest.update_mask:type_name -> google.protobuf.FieldMask
	26, // 32: nexus.controlplane.v1.UpdateDeviceResponse.device:type_name -> nexus.controlplane.v1.Device
	71, // 33: nexus.controlplane.v1.UpdateDeviceResponse.updated_at:type_name -> google.protobuf.Timestamp
	26, // 34: nexus.controlplane.v1.GetDeviceResponse.device:type_name -> nexus.controlplane.v1.Device
	26, // 35: nexus.controlplane.v1.ListDevicesResponse.devices:type_name -> nexus.controlplane.v1.Device
	42, // 36: nexus.controlplane.v1.Query.visualise:type_name -> nexus.controlplane.v1.Visualise
	43, // 37: nexus.controlplane.v1.Query.where:type_name -> nexus.controlplane.v1.Where
	45, // 38: nexus.controlplane.v1.Query.order_by:type_name -> nexus.controlplane.v1.Order
	44, // 39: nexus.controlplane.v1.Query.having:type_name -> nexus.controlplane.v1.Clause
	71, // 40: nexus.controlplane.v1.Query.created_at:type_name -> google.protobuf.Timestamp
	71, // 41: nexus.controlplane.v1.Query.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 42: nexus.controlplane.v1.Visualise.op:type_name -> nexus.controlplane.v1.VisualiseOp
	3,  // 43: nexus.controlplane.v1.Where.op:type_name -> nexus.controlplane.v1.WhereOp
	44, // 44: nexus.controlplane.v1.Where.clauses:type_name -> nexus.controlplane.v1.Clause
	4,  // 45: nexus.controlplane.v1.Clause.op:type_name -> nexus.controlplane.v1.CompareOp
	5,  // 46: nexus.controlplane.v1.Order.order:type_name -> nexus.controlplane.v1.OrderOp
	71, // 47: nexus.controlplane.v1.Series.timestamps:type_name -> google.protobuf.Timestamp
	70, // 48: nexus.controlplane.v1.Series.data:type_name -> nexus.controlplane.v1.Series.DataEntry
	74, // 49: nexus.controlplane.v1.SeriesData.values:type_name -> std.v1.Value
	49, // 50: nexus.controlplane.v1.Row.row_values:type_name -> nexus.controlplane.v1.RowValues
	74, // 51: nexus.controlplane.v1.RowValues.values:type_name -> std.v1.Value
	41, // 52: nexus.controlplane.v1.CreateQueryRequest.query:type_name -> nexus.controlplane.v1.Query
	41, // 53: nexus.controlplane.v1.CreateQueryResponse.query:type_name -> nexus.controlplane.v1.Query
	71, // 54: nexus.controlplane.v1.CreateQueryResponse.created_at:type_name -> google.protobuf.Timestamp
	59, // 55: nexus.controlplane.v1.UpdateQueryExecutionRequest.result:type_name -> nexus.controlplane.v1.QueryExecutionResult
	59, // 56: nexus.controlplane.v1.PollQueryExecutionResponse.result:type_name -> nexus.controlplane.v1.QueryExecutionResult
	41, // 57: nexus.controlplane.v1.ExecQueryRequest.query:type_name -> nexus.controlplane.v1.Query
	6,  // 58: nexus.controlplane.v1.QueryExecutionResult.status:type_name -> nexus.controlplane.v1.QueryExecutionStatus
	60, // 59: nexus.controlplane.v1.QueryExecutionResult.data:type_name -> nexus.controlplane.v1.QueryExecutionData
	46, // 60: nexus.controlplane.v1.QueryExecutionData.series:type_name -> nexus.controlplane.v1.Series
	48, // 61: nexus.controlplane.v1.QueryExecutionData.rows:type_name -> nexus.controlplane.v1.Row
	7,  // 62: nexus.controlplane.v1.AgentMetadata.status:type_name -> nexus.controlplane.v1.AgentStatus
	71, // 63: nexus.controlplane.v1.AgentMetadata.last_heartbeat:type_name -> google.protobuf.Timestamp
	71, // 64: nexus.controlplane.v1.Heartbeat.timestamp:type_name -> google.protobuf.Timestamp
	67, // 65: nexus.controlplane.v1.ControlMessageRequest.control:type_name -> nexus.controlplane.v1.ControlMessage
	67, // 66: nexus.controlplane.v1.ControlMessageResponse.control:type_name -> nexus.controlplane.v1.ControlMessage
	68, // 67: nexus.controlplane.v1.ControlMessage.telemetry:type_name -> nexus.controlplane.v1.TelemetryControl
	69, // 68: nexus.controlplane.v1.ControlMessage.devices:type_name -> nexus.controlplane.v1.DeviceControl
	26, // 69: nexus.controlplane.v1.DeviceControl.devices:type_name -> nexus.controlplane.v1.Device
	47, // 70: nexus.controlplane.v1.Series.DataEntry.value:type_name -> nexus.controlplane.v1.SeriesData
	9,  // 71: nexus.controlplane.v1.ControlPlaneService.CreateDataset:input_type -> nexus.controlplane.v1.CreateDatasetRequest
	11, // 72: nexus.controlplane.v1.ControlPlaneService.DeleteDataset:input_type -> nexus.controlplane.v1.DeleteDatasetRequest
	13, // 73: nexus.controlplane.v1.ControlPlaneService.ListDatasets:input_type -> nexus.controlplane.v1.ListDatasetsRequest
	15, // 74: nexus.controlplane.v1.ControlPlaneService.GetDataset:input_type -> nexus.controlplane.v1.GetDatasetRequest
	18, // 75: nexus.controlplane.v1.ControlPlaneService.CreateCluster:input_type -> nexus.controlplane.v1.CreateClusterRequest
	20, // 76: nexus.controlplane.v1.ControlPlaneService.DeleteCluster:input_type -> nexus.controlplane.v1.DeleteClusterRequest
	22, // 77: nexus.controlplane.v1.ControlPlaneService.ListClusters:input_type -> nexus.controlplane.v1.ListClustersRequest
	24, // 78: nexus.controlplane.v1.ControlPlaneService.GetCluster:input_type -> nexus.controlplane.v1.GetClusterRequest
	31, // 79: nexus.controlplane.v1.ControlPlaneService.CreateDevice:input_type -> nexus.controlplane.v1.CreateDeviceRequest
	33, // 80: nexus.controlplane.v1.ControlPlaneService.DeleteDevice:input_type -> nexus.controlplane.v1.DeleteDeviceRequest
	35, // 81: nexus.controlplane.v1.ControlPlaneService.UpdateDevice:input_type -> nexus.controlplane.v1.UpdateDeviceRequest
	39, // 82: nexus.controlplane.v1.ControlPlaneService.ListDevices:input_type -> nexus.controlplane.v1.ListDevicesRequest
	37, // 83: nexus.controlplane.v1.ControlPlaneService.GetDevice:input_type -> nexus.controlplane.v1.GetDeviceRequest
	50, // 84: nexus.controlplane.v1.ControlPlaneService.CreateQuery:input_type -> nexus.controlplane.v1.CreateQueryRequest
	52, // 85: nexus.controlplane.v1.ControlPlaneService.SubmitQueryExecution:input_type -> nexus.controlplane.v1.SubmitQueryExecutionRequest
	54, // 86: nexus.controlplane.v1.ControlPlaneService.UpdateQueryExecution:input_type -> nexus.controlplane.v1.UpdateQueryExecutionRequest
	56, // 87: nexus.controlplane.v1.ControlPlaneService.PollQueryExecution:input_type -> nexus.controlplane.v1.PollQueryExecutionRequest
	61, // 88: nexus.controlplane.v1.ControlPlaneService.Heartbeat:input_type -> nexus.controlplane.v1.HeartbeatRequest
	10, // 89: nexus.controlplane.v1.ControlPlaneService.CreateDataset:output_type -> nexus.controlplane.v1.CreateDatasetResponse
	12, // 90: nexus.controlplane.v1.ControlPlaneService.DeleteDataset:output_type -> nexus.controlplane.v1.DeleteDatasetResponse
	14, // 91: nexus.controlplane.v1.ControlPlaneService.ListDatasets:output_type -> nexus.controlplane.v1.ListDatasetsResponse
	16, // 92: nexus.controlplane.v1.ControlPlaneService.GetDataset:output_type -> nexus.controlplane.v1.GetDatasetResponse
	19, // 93: nexus.controlplane.v1.ControlPlaneService.CreateCluster:output_type -> nexus.controlplane.v1.CreateClusterResponse
	21, // 94: nexus.controlplane.v1.ControlPlaneService.DeleteCluster:output_type -> nexus.controlplane.v1.DeleteClusterResponse
	23, // 95: nexus.controlplane.v1.ControlPlaneService.ListClusters:output_type -> nexus.controlplane.v1.ListClustersResponse
	25, // 96: nexus.controlplane.v1.ControlPlaneService.GetCluster:output_type -> nexus.controlplane.v1.GetClusterResponse
	32, // 97: nexus.controlplane.v1.ControlPlaneService.CreateDevice:output_type -> nexus.controlplane.v1.CreateDeviceResponse
	34, // 98: nexus.controlplane.v1.ControlPlaneService.DeleteDevice:output_type -> nexus.controlplane.v1.DeleteDeviceResponse
	36, // 99: nexus.controlplane.v1.ControlPlaneService.UpdateDevice:output_type -> nexus.controlplane.v1.UpdateDeviceResponse
	40, // 100: nexus.controlplane.v1.ControlPlaneService.ListDevices:output_type -> nexus.controlplane.v1.ListDevicesResponse
	38, // 101: nexus.controlplane.v1.ControlPlaneService.GetDevice:output_type -> nexus.controlplane.v1.GetDeviceResponse
	51, // 102: nexus.controlplane.v1.ControlPlaneService.CreateQuery:output_type -> nexus.controlplane.v1.CreateQueryResponse
	53, // 103: nexus.controlplane.v1.ControlPlaneService.SubmitQueryExecution:output_type -> nexus.controlplane.v1.SubmitQueryExecutionResponse
	55, // 104: nexus.controlplane.v1.ControlPlaneService.UpdateQueryExecution:output_type -> nexus.controlplane.v1.UpdateQueryExecutionResponse
	57, // 105: nexus.controlplane.v1.ControlPlaneService.PollQueryExecution:output_type -> nexus.controlplane.v1.PollQueryExecutionResponse
	62, // 106: nexus.controlplane.v1.ControlPlaneService.Heartbeat:output_type -> nexus.controlplane.v1.HeartbeatResponse
	89, // [89:107] is the sub-list for method output_type
	71, // [71:89] is the sub-list for method input_type
	71, // [71:71] is the sub-list for extension type_name
	71, // [71:71] is the sub-list for extension extendee
	0,  // [0:71] is the sub-list for field type_name
}

func init() { file_nexus_controlplane_v1_control_plane_proto_init() }
func file_nexus_controlplane_v1_control_plane_proto_init() {
	if File_nexus_controlplane_v1_control_plane_proto != nil {
		return
	}
	file_nexus_controlplane_v1_control_plane_proto_msgTypes[0].OneofWrappers = []any{}
	file_nexus_controlplane_v1_control_plane_proto_msgTypes[1].OneofWrappers = []any{}
	file_nexus_controlplane_v1_control_plane_proto_msgTypes[18].OneofWrappers = []any{
		(*Device_Generic)(nil),
	}
	file_nexus_controlplane_v1_control_plane_proto_msgTypes[19].OneofWrappers = []any{
		(*GenericModel_OtherVendor)(nil),
		(*GenericModel_Cisco)(nil),
		(*GenericModel_Arista)(nil),
	}
	file_nexus_controlplane_v1_control_plane_proto_msgTypes[23].OneofWrappers = []any{
		(*CreateDeviceRequest_Generic)(nil),
	}
	file_nexus_controlplane_v1_control_plane_proto_msgTypes[51].OneofWrappers = []any{}
	file_nexus_controlplane_v1_control_plane_proto_msgTypes[59].OneofWrappers = []any{
		(*ControlMessage_Telemetry)(nil),
		(*ControlMessage_Devices)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nexus_controlplane_v1_control_plane_proto_rawDesc), len(file_nexus_controlplane_v1_control_plane_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   63,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nexus_controlplane_v1_control_plane_proto_goTypes,
		DependencyIndexes: file_nexus_controlplane_v1_control_plane_proto_depIdxs,
		EnumInfos:         file_nexus_controlplane_v1_control_plane_proto_enumTypes,
		MessageInfos:      file_nexus_controlplane_v1_control_plane_proto_msgTypes,
	}.Build()
	File_nexus_controlplane_v1_control_plane_proto = out.File
	file_nexus_controlplane_v1_control_plane_proto_goTypes = nil
	file_nexus_controlplane_v1_control_plane_proto_depIdxs = nil
}

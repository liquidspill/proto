// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: nexus/catalog/v1/catalog.proto

package catalogv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ColumnType int32

const (
	ColumnType_COLUMN_TYPE_UNSPECIFIED ColumnType = 0
	ColumnType_COLUMN_TYPE_INT8        ColumnType = 1
	ColumnType_COLUMN_TYPE_INT16       ColumnType = 2
	ColumnType_COLUMN_TYPE_INT32       ColumnType = 3
	ColumnType_COLUMN_TYPE_INT64       ColumnType = 4
	ColumnType_COLUMN_TYPE_UINT8       ColumnType = 5
	ColumnType_COLUMN_TYPE_UINT16      ColumnType = 6
	ColumnType_COLUMN_TYPE_UINT32      ColumnType = 7
	ColumnType_COLUMN_TYPE_UINT64      ColumnType = 8
	ColumnType_COLUMN_TYPE_STRING      ColumnType = 9
	ColumnType_COLUMN_TYPE_BOOLEAN     ColumnType = 10
	ColumnType_COLUMN_TYPE_TIMESTAMP   ColumnType = 11
	ColumnType_COLUMN_TYPE_BYTES       ColumnType = 12
)

// Enum value maps for ColumnType.
var (
	ColumnType_name = map[int32]string{
		0:  "COLUMN_TYPE_UNSPECIFIED",
		1:  "COLUMN_TYPE_INT8",
		2:  "COLUMN_TYPE_INT16",
		3:  "COLUMN_TYPE_INT32",
		4:  "COLUMN_TYPE_INT64",
		5:  "COLUMN_TYPE_UINT8",
		6:  "COLUMN_TYPE_UINT16",
		7:  "COLUMN_TYPE_UINT32",
		8:  "COLUMN_TYPE_UINT64",
		9:  "COLUMN_TYPE_STRING",
		10: "COLUMN_TYPE_BOOLEAN",
		11: "COLUMN_TYPE_TIMESTAMP",
		12: "COLUMN_TYPE_BYTES",
	}
	ColumnType_value = map[string]int32{
		"COLUMN_TYPE_UNSPECIFIED": 0,
		"COLUMN_TYPE_INT8":        1,
		"COLUMN_TYPE_INT16":       2,
		"COLUMN_TYPE_INT32":       3,
		"COLUMN_TYPE_INT64":       4,
		"COLUMN_TYPE_UINT8":       5,
		"COLUMN_TYPE_UINT16":      6,
		"COLUMN_TYPE_UINT32":      7,
		"COLUMN_TYPE_UINT64":      8,
		"COLUMN_TYPE_STRING":      9,
		"COLUMN_TYPE_BOOLEAN":     10,
		"COLUMN_TYPE_TIMESTAMP":   11,
		"COLUMN_TYPE_BYTES":       12,
	}
)

func (x ColumnType) Enum() *ColumnType {
	p := new(ColumnType)
	*p = x
	return p
}

func (x ColumnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColumnType) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_catalog_v1_catalog_proto_enumTypes[0].Descriptor()
}

func (ColumnType) Type() protoreflect.EnumType {
	return &file_nexus_catalog_v1_catalog_proto_enumTypes[0]
}

func (x ColumnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColumnType.Descriptor instead.
func (ColumnType) EnumDescriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{0}
}

// CompactionLevel indicates how many times data has been compacted.
// Higher levels generally mean larger files with better organization.
type CompactionLevel int32

const (
	CompactionLevel_COMPACTION_LEVEL_UNSPECIFIED CompactionLevel = 0
	CompactionLevel_COMPACTION_LEVEL_ZERO        CompactionLevel = 1 // Initial write, no compaction
	CompactionLevel_COMPACTION_LEVEL_ONE         CompactionLevel = 2 // First compaction pass
)

// Enum value maps for CompactionLevel.
var (
	CompactionLevel_name = map[int32]string{
		0: "COMPACTION_LEVEL_UNSPECIFIED",
		1: "COMPACTION_LEVEL_ZERO",
		2: "COMPACTION_LEVEL_ONE",
	}
	CompactionLevel_value = map[string]int32{
		"COMPACTION_LEVEL_UNSPECIFIED": 0,
		"COMPACTION_LEVEL_ZERO":        1,
		"COMPACTION_LEVEL_ONE":         2,
	}
)

func (x CompactionLevel) Enum() *CompactionLevel {
	p := new(CompactionLevel)
	*p = x
	return p
}

func (x CompactionLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompactionLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_catalog_v1_catalog_proto_enumTypes[1].Descriptor()
}

func (CompactionLevel) Type() protoreflect.EnumType {
	return &file_nexus_catalog_v1_catalog_proto_enumTypes[1]
}

func (x CompactionLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompactionLevel.Descriptor instead.
func (CompactionLevel) EnumDescriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{1}
}

// Compression algorithms supported for compressing raw data.
// Different algorithms offer different trade-offs between compression ratio and speed.
type Compression int32

const (
	Compression_COMPRESSION_UNSPECIFIED Compression = 0
	Compression_COMPRESSION_ZSTD        Compression = 1 // Zstandard: High compression ratio, good speed
	Compression_COMPRESSION_LZ4         Compression = 2 // LZ4: Very fast, moderate compression
	Compression_COMPRESSION_SNAPPY      Compression = 3 // Snappy: Fast, moderate compression, widely used in Parquet
)

// Enum value maps for Compression.
var (
	Compression_name = map[int32]string{
		0: "COMPRESSION_UNSPECIFIED",
		1: "COMPRESSION_ZSTD",
		2: "COMPRESSION_LZ4",
		3: "COMPRESSION_SNAPPY",
	}
	Compression_value = map[string]int32{
		"COMPRESSION_UNSPECIFIED": 0,
		"COMPRESSION_ZSTD":        1,
		"COMPRESSION_LZ4":         2,
		"COMPRESSION_SNAPPY":      3,
	}
)

func (x Compression) Enum() *Compression {
	p := new(Compression)
	*p = x
	return p
}

func (x Compression) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Compression) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_catalog_v1_catalog_proto_enumTypes[2].Descriptor()
}

func (Compression) Type() protoreflect.EnumType {
	return &file_nexus_catalog_v1_catalog_proto_enumTypes[2]
}

func (x Compression) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Compression.Descriptor instead.
func (Compression) EnumDescriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{2}
}

type CreateManifestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterPid    string                 `protobuf:"bytes,1,opt,name=cluster_pid,json=clusterPid,proto3" json:"cluster_pid,omitempty"`
	Manifest      *Manifest              `protobuf:"bytes,2,opt,name=manifest,proto3" json:"manifest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateManifestRequest) Reset() {
	*x = CreateManifestRequest{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManifestRequest) ProtoMessage() {}

func (x *CreateManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManifestRequest.ProtoReflect.Descriptor instead.
func (*CreateManifestRequest) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{0}
}

func (x *CreateManifestRequest) GetClusterPid() string {
	if x != nil {
		return x.ClusterPid
	}
	return ""
}

func (x *CreateManifestRequest) GetManifest() *Manifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

type CreateManifestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           string                 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	ClusterPid    string                 `protobuf:"bytes,2,opt,name=cluster_pid,json=clusterPid,proto3" json:"cluster_pid,omitempty"`
	Manifest      *Manifest              `protobuf:"bytes,3,opt,name=manifest,proto3" json:"manifest,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateManifestResponse) Reset() {
	*x = CreateManifestResponse{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManifestResponse) ProtoMessage() {}

func (x *CreateManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManifestResponse.ProtoReflect.Descriptor instead.
func (*CreateManifestResponse) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{1}
}

func (x *CreateManifestResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *CreateManifestResponse) GetClusterPid() string {
	if x != nil {
		return x.ClusterPid
	}
	return ""
}

func (x *CreateManifestResponse) GetManifest() *Manifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *CreateManifestResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// ListManifestsRequest queries for Manifests within a time range.
// Used by query engines to discover which data files contain relevant data.
type ListManifestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterPid    string                 `protobuf:"bytes,1,opt,name=cluster_pid,json=clusterPid,proto3" json:"cluster_pid,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListManifestsRequest) Reset() {
	*x = ListManifestsRequest{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListManifestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManifestsRequest) ProtoMessage() {}

func (x *ListManifestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManifestsRequest.ProtoReflect.Descriptor instead.
func (*ListManifestsRequest) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{2}
}

func (x *ListManifestsRequest) GetClusterPid() string {
	if x != nil {
		return x.ClusterPid
	}
	return ""
}

func (x *ListManifestsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListManifestsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// ListManifestsResponse returns all Manifests matching the query criteria.
// The returned Manifest descriptors include column statistics that enable
// query engines to perform predicate pushdown and skip irrelevant files.
type ListManifestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterPid    string                 `protobuf:"bytes,1,opt,name=cluster_pid,json=clusterPid,proto3" json:"cluster_pid,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Manifests     []*Manifest            `protobuf:"bytes,4,rep,name=manifests,proto3" json:"manifests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListManifestsResponse) Reset() {
	*x = ListManifestsResponse{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListManifestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManifestsResponse) ProtoMessage() {}

func (x *ListManifestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManifestsResponse.ProtoReflect.Descriptor instead.
func (*ListManifestsResponse) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{3}
}

func (x *ListManifestsResponse) GetClusterPid() string {
	if x != nil {
		return x.ClusterPid
	}
	return ""
}

func (x *ListManifestsResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListManifestsResponse) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ListManifestsResponse) GetManifests() []*Manifest {
	if x != nil {
		return x.Manifests
	}
	return nil
}

// A Manifest describes a Granule where a Granule is a set of data stored in object storage
// as a Parquet file.
//
// A Granule is:
// - A Parquet file stored in object storage (e.g S3)
// - Immutable once written
// - Organized by cluster key (timestamp) for data locality
// - Enriched with column statistics for query optimization
//
// The Manifest (this Granule descriptor) enables query engines to:
// 1. Discover which files to read based on time range queries
// 2. Skip files based on min/max statistics (predicate pushdown)
// 3. Use bloom filters for efficient existence checks
// 4. Understand the schema without reading the Parquet file
//
// RELATIONSHIP:
// Granule (data file in S3) ← described by → Manifest (this message) ← stored in → CatalogService
type Manifest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Manifest
	// NOTE: This should be left unset when creating a new Manifest, the control
	// plane will create the pid and set it here, as well as returning it in the response
	Pid string `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// The key used to cluster the data into Granules. This determines how data
	// is partitioned and enables efficient querying by time and device.
	// Data locality: Granules with similar cluster keys are stored together,
	// which helps query engines process related data faster.
	ClusterKey *ClusterKey `protobuf:"bytes,2,opt,name=cluster_key,json=clusterKey,proto3" json:"cluster_key,omitempty"`
	// Storage location(s) for the Parquet file.
	// Multiple locations can be specified for redundancy/multi-region support.
	Locations []*StorageLocation `protobuf:"bytes,3,rep,name=locations,proto3" json:"locations,omitempty"`
	// Physical size in bytes of the Parquet file in object storage
	Size uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	// Total number of rows in the Parquet file
	RowCount uint64 `protobuf:"varint,5,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	// Timestamp when the Granule was created and written to object storage
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Schema and statistics for each column in the Parquet file.
	// Key: column name, Value: column metadata
	// This enables query optimization without reading the actual file:
	// - Type information for schema validation
	// - Min/max values for predicate pushdown
	// - Bloom filters for existence checks
	Columns       map[string]*Column `protobuf:"bytes,7,rep,name=columns,proto3" json:"columns,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Manifest) Reset() {
	*x = Manifest{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Manifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manifest) ProtoMessage() {}

func (x *Manifest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manifest.ProtoReflect.Descriptor instead.
func (*Manifest) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{4}
}

func (x *Manifest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *Manifest) GetClusterKey() *ClusterKey {
	if x != nil {
		return x.ClusterKey
	}
	return nil
}

func (x *Manifest) GetLocations() []*StorageLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *Manifest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Manifest) GetRowCount() uint64 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *Manifest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Manifest) GetColumns() map[string]*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type Column struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Statistics    *Statistics            `protobuf:"bytes,2,opt,name=statistics,proto3" json:"statistics,omitempty"`
	Type          ColumnType             `protobuf:"varint,3,opt,name=type,proto3,enum=nexus.catalog.v1.ColumnType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column) Reset() {
	*x = Column{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{5}
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Column) GetStatistics() *Statistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *Column) GetType() ColumnType {
	if x != nil {
		return x.Type
	}
	return ColumnType_COLUMN_TYPE_UNSPECIFIED
}

// StorageLocation specifies where a Parquet file is stored.
// Supports multiple storage backends for flexibility across cloud providers and local development.
type StorageLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Location:
	//
	//	*StorageLocation_S3Compatible
	//	*StorageLocation_AzureBlob
	//	*StorageLocation_Local
	Location      isStorageLocation_Location `protobuf_oneof:"location"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageLocation) Reset() {
	*x = StorageLocation{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageLocation) ProtoMessage() {}

func (x *StorageLocation) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageLocation.ProtoReflect.Descriptor instead.
func (*StorageLocation) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{6}
}

func (x *StorageLocation) GetLocation() isStorageLocation_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *StorageLocation) GetS3Compatible() *S3CompatibleStorage {
	if x != nil {
		if x, ok := x.Location.(*StorageLocation_S3Compatible); ok {
			return x.S3Compatible
		}
	}
	return nil
}

func (x *StorageLocation) GetAzureBlob() *AzureBlobStorage {
	if x != nil {
		if x, ok := x.Location.(*StorageLocation_AzureBlob); ok {
			return x.AzureBlob
		}
	}
	return nil
}

func (x *StorageLocation) GetLocal() *LocalStorage {
	if x != nil {
		if x, ok := x.Location.(*StorageLocation_Local); ok {
			return x.Local
		}
	}
	return nil
}

type isStorageLocation_Location interface {
	isStorageLocation_Location()
}

type StorageLocation_S3Compatible struct {
	S3Compatible *S3CompatibleStorage `protobuf:"bytes,1,opt,name=s3_compatible,json=s3Compatible,proto3,oneof"` // AWS S3, GCS, MinIO, Ceph, etc.
}

type StorageLocation_AzureBlob struct {
	AzureBlob *AzureBlobStorage `protobuf:"bytes,2,opt,name=azure_blob,json=azureBlob,proto3,oneof"` // Microsoft Azure Blob Storage
}

type StorageLocation_Local struct {
	Local *LocalStorage `protobuf:"bytes,3,opt,name=local,proto3,oneof"` // Local filesystem
}

func (*StorageLocation_S3Compatible) isStorageLocation_Location() {}

func (*StorageLocation_AzureBlob) isStorageLocation_Location() {}

func (*StorageLocation_Local) isStorageLocation_Location() {}

// S3CompatibleStorage represents object storage using the S3 API.
// Supports AWS S3, Google Cloud Storage (GCS), R2, Ceph, and other S3-compatible services.
type S3CompatibleStorage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Endpoint URL for the object storage service.
	// Examples:
	// - AWS S3 (us-east-1): "https://s3.us-east-1.amazonaws.com" or empty for default
	// - AWS S3 (custom region): "https://s3.<region>.amazonaws.com"
	// - GCS: "https://storage.googleapis.com"
	// - Cloudflare R2: "https://<account-id>.r2.cloudflarestorage.com"
	// If empty, defaults to AWS S3 in the region specified below.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Bucket name
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// Object key/path within the bucket (e.g., "data/2024/01/flows.parquet")
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// AWS region (for S3) or location (for GCS).
	// Examples: "us-east-1", "us-west-2", "eu-west-1"
	// For GCS, use GCS location names like "us-central1", "europe-west1"
	Region        string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3CompatibleStorage) Reset() {
	*x = S3CompatibleStorage{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3CompatibleStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3CompatibleStorage) ProtoMessage() {}

func (x *S3CompatibleStorage) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3CompatibleStorage.ProtoReflect.Descriptor instead.
func (*S3CompatibleStorage) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{7}
}

func (x *S3CompatibleStorage) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *S3CompatibleStorage) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *S3CompatibleStorage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *S3CompatibleStorage) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// AzureBlobStorage represents Microsoft Azure Blob Storage.
// Note: Azure Blob Storage uses a different API model than S3.
// Uses container/blob nomenclature instead of bucket/key.
type AzureBlobStorage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Azure storage account name
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// Container name (equivalent to S3 bucket)
	Container string `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
	// Blob name/path (equivalent to S3 key)
	BlobName string `protobuf:"bytes,3,opt,name=blob_name,json=blobName,proto3" json:"blob_name,omitempty"`
	// Optional: Azure endpoint suffix (e.g., "core.windows.net")
	// Defaults to "core.windows.net" if not specified.
	// Full URL format: https://{account_name}.blob.{endpoint_suffix}/{container}/{blob_name}
	EndpointSuffix string `protobuf:"bytes,4,opt,name=endpoint_suffix,json=endpointSuffix,proto3" json:"endpoint_suffix,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AzureBlobStorage) Reset() {
	*x = AzureBlobStorage{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureBlobStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureBlobStorage) ProtoMessage() {}

func (x *AzureBlobStorage) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureBlobStorage.ProtoReflect.Descriptor instead.
func (*AzureBlobStorage) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{8}
}

func (x *AzureBlobStorage) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AzureBlobStorage) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *AzureBlobStorage) GetBlobName() string {
	if x != nil {
		return x.BlobName
	}
	return ""
}

func (x *AzureBlobStorage) GetEndpointSuffix() string {
	if x != nil {
		return x.EndpointSuffix
	}
	return ""
}

// LocalStorage represents local filesystem storage.
// Primarily used for demos, testing, and development environments.
type LocalStorage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filesystem path (can be absolute or relative)
	// Examples:
	// - Absolute: "/data/parquet/flows.parquet"
	// - Relative: "./data/flows.parquet"
	Path          string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalStorage) Reset() {
	*x = LocalStorage{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalStorage) ProtoMessage() {}

func (x *LocalStorage) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalStorage.ProtoReflect.Descriptor instead.
func (*LocalStorage) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{9}
}

func (x *LocalStorage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Statistics contains min/max bounds and bloom filters for a column.
// Query engines use these statistics to determine if a Granule needs to be read:
//
// PREDICATE PUSHDOWN EXAMPLE:
// Query: SELECT * FROM table WHERE age > 30
// If a Granule's age column has max_int32 = 25, the entire file can be skipped.
//
// BLOOM FILTER EXAMPLE:
// Query: SELECT * FROM table WHERE user_id = 'abc123'
// The bloom filter can quickly indicate if 'abc123' definitely doesn't exist,
// allowing the query engine to skip reading the file.
type Statistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Minimum value in this column across all rows in the Granule.
	// The specific field used depends on the column type.
	//
	// Types that are valid to be assigned to Min:
	//
	//	*Statistics_MinInt32
	//	*Statistics_MinInt64
	//	*Statistics_MinUint32
	//	*Statistics_MinUint64
	//	*Statistics_MinBool
	//	*Statistics_MinString
	//	*Statistics_MinBytes
	//	*Statistics_MinTimestamp
	Min isStatistics_Min `protobuf_oneof:"min"`
	// Maximum value in this column across all rows in the Granule.
	// The specific field used depends on the column type.
	//
	// Types that are valid to be assigned to Max:
	//
	//	*Statistics_MaxInt32
	//	*Statistics_MaxInt64
	//	*Statistics_MaxUint32
	//	*Statistics_MaxUint64
	//	*Statistics_MaxBool
	//	*Statistics_MaxString
	//	*Statistics_MaxBytes
	//	*Statistics_MaxTimestamp
	Max isStatistics_Max `protobuf_oneof:"max"`
	// Bloom filter or similar probabilistic data structure.
	// Used for efficient "does this value exist?" queries.
	// False positives are possible, but false negatives are not.
	Filter        []byte `protobuf:"bytes,17,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{10}
}

func (x *Statistics) GetMin() isStatistics_Min {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *Statistics) GetMinInt32() int32 {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinInt32); ok {
			return x.MinInt32
		}
	}
	return 0
}

func (x *Statistics) GetMinInt64() int64 {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinInt64); ok {
			return x.MinInt64
		}
	}
	return 0
}

func (x *Statistics) GetMinUint32() uint32 {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinUint32); ok {
			return x.MinUint32
		}
	}
	return 0
}

func (x *Statistics) GetMinUint64() uint64 {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinUint64); ok {
			return x.MinUint64
		}
	}
	return 0
}

func (x *Statistics) GetMinBool() bool {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinBool); ok {
			return x.MinBool
		}
	}
	return false
}

func (x *Statistics) GetMinString() string {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinString); ok {
			return x.MinString
		}
	}
	return ""
}

func (x *Statistics) GetMinBytes() []byte {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinBytes); ok {
			return x.MinBytes
		}
	}
	return nil
}

func (x *Statistics) GetMinTimestamp() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Min.(*Statistics_MinTimestamp); ok {
			return x.MinTimestamp
		}
	}
	return nil
}

func (x *Statistics) GetMax() isStatistics_Max {
	if x != nil {
		return x.Max
	}
	return nil
}

func (x *Statistics) GetMaxInt32() int32 {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxInt32); ok {
			return x.MaxInt32
		}
	}
	return 0
}

func (x *Statistics) GetMaxInt64() int64 {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxInt64); ok {
			return x.MaxInt64
		}
	}
	return 0
}

func (x *Statistics) GetMaxUint32() uint32 {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxUint32); ok {
			return x.MaxUint32
		}
	}
	return 0
}

func (x *Statistics) GetMaxUint64() uint64 {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxUint64); ok {
			return x.MaxUint64
		}
	}
	return 0
}

func (x *Statistics) GetMaxBool() bool {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxBool); ok {
			return x.MaxBool
		}
	}
	return false
}

func (x *Statistics) GetMaxString() string {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxString); ok {
			return x.MaxString
		}
	}
	return ""
}

func (x *Statistics) GetMaxBytes() []byte {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxBytes); ok {
			return x.MaxBytes
		}
	}
	return nil
}

func (x *Statistics) GetMaxTimestamp() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Max.(*Statistics_MaxTimestamp); ok {
			return x.MaxTimestamp
		}
	}
	return nil
}

func (x *Statistics) GetFilter() []byte {
	if x != nil {
		return x.Filter
	}
	return nil
}

type isStatistics_Min interface {
	isStatistics_Min()
}

type Statistics_MinInt32 struct {
	// Handles int8, int16, int32
	MinInt32 int32 `protobuf:"varint,1,opt,name=min_int32,json=minInt32,proto3,oneof"`
}

type Statistics_MinInt64 struct {
	MinInt64 int64 `protobuf:"varint,2,opt,name=min_int64,json=minInt64,proto3,oneof"`
}

type Statistics_MinUint32 struct {
	// Handles uint8, uint16, uint32
	MinUint32 uint32 `protobuf:"varint,3,opt,name=min_uint32,json=minUint32,proto3,oneof"`
}

type Statistics_MinUint64 struct {
	MinUint64 uint64 `protobuf:"varint,4,opt,name=min_uint64,json=minUint64,proto3,oneof"`
}

type Statistics_MinBool struct {
	MinBool bool `protobuf:"varint,5,opt,name=min_bool,json=minBool,proto3,oneof"`
}

type Statistics_MinString struct {
	MinString string `protobuf:"bytes,6,opt,name=min_string,json=minString,proto3,oneof"`
}

type Statistics_MinBytes struct {
	MinBytes []byte `protobuf:"bytes,7,opt,name=min_bytes,json=minBytes,proto3,oneof"`
}

type Statistics_MinTimestamp struct {
	MinTimestamp *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=min_timestamp,json=minTimestamp,proto3,oneof"`
}

func (*Statistics_MinInt32) isStatistics_Min() {}

func (*Statistics_MinInt64) isStatistics_Min() {}

func (*Statistics_MinUint32) isStatistics_Min() {}

func (*Statistics_MinUint64) isStatistics_Min() {}

func (*Statistics_MinBool) isStatistics_Min() {}

func (*Statistics_MinString) isStatistics_Min() {}

func (*Statistics_MinBytes) isStatistics_Min() {}

func (*Statistics_MinTimestamp) isStatistics_Min() {}

type isStatistics_Max interface {
	isStatistics_Max()
}

type Statistics_MaxInt32 struct {
	// Handles int8, int16, int32
	MaxInt32 int32 `protobuf:"varint,9,opt,name=max_int32,json=maxInt32,proto3,oneof"`
}

type Statistics_MaxInt64 struct {
	MaxInt64 int64 `protobuf:"varint,10,opt,name=max_int64,json=maxInt64,proto3,oneof"`
}

type Statistics_MaxUint32 struct {
	// Handles uint8, uint16, uint32
	MaxUint32 uint32 `protobuf:"varint,11,opt,name=max_uint32,json=maxUint32,proto3,oneof"`
}

type Statistics_MaxUint64 struct {
	MaxUint64 uint64 `protobuf:"varint,12,opt,name=max_uint64,json=maxUint64,proto3,oneof"`
}

type Statistics_MaxBool struct {
	MaxBool bool `protobuf:"varint,13,opt,name=max_bool,json=maxBool,proto3,oneof"`
}

type Statistics_MaxString struct {
	MaxString string `protobuf:"bytes,14,opt,name=max_string,json=maxString,proto3,oneof"`
}

type Statistics_MaxBytes struct {
	MaxBytes []byte `protobuf:"bytes,15,opt,name=max_bytes,json=maxBytes,proto3,oneof"`
}

type Statistics_MaxTimestamp struct {
	MaxTimestamp *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=max_timestamp,json=maxTimestamp,proto3,oneof"`
}

func (*Statistics_MaxInt32) isStatistics_Max() {}

func (*Statistics_MaxInt64) isStatistics_Max() {}

func (*Statistics_MaxUint32) isStatistics_Max() {}

func (*Statistics_MaxUint64) isStatistics_Max() {}

func (*Statistics_MaxBool) isStatistics_Max() {}

func (*Statistics_MaxString) isStatistics_Max() {}

func (*Statistics_MaxBytes) isStatistics_Max() {}

func (*Statistics_MaxTimestamp) isStatistics_Max() {}

// ClusterKey defines how data is partitioned and organized into Granules.
// The cluster key creates a partitioning scheme:
// 1. Temporal dimension (timestamp) - enables time-range queries
//
// DATA LOCALITY BENEFITS:
//   - Time-range queries: "SELECT * FROM flows WHERE timestamp BETWEEN t1 AND t2"
//     Only need to scan Granules with cluster_key.timestamp in [t1, t2]
//
// Granules with similar cluster keys are stored together in object storage,
// improving cache locality and reducing the number of files that need to be read.
type ClusterKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The timestamp when the flow was received by the system.
	// Used as the primary partitioning dimension for time-range queries.
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterKey) Reset() {
	*x = ClusterKey{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterKey) ProtoMessage() {}

func (x *ClusterKey) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterKey.ProtoReflect.Descriptor instead.
func (*ClusterKey) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{11}
}

func (x *ClusterKey) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Compaction represents metadata about a data compaction operation.
// Compaction is the process of merging multiple small Granules into larger ones
// to improve query performance and reduce storage overhead.
//
// COMPACTION LEVELS (LSM-tree style):
// - Level 0: Initial write, many small files
// - Level 1: First compaction pass, medium-sized files
// - Higher levels: Further compaction, larger files with better organization
//
// TODO: Add metrics we care about? (e.g., rows merged, time taken, compression ratio)
type Compaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp when the compaction operation was performed
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The compaction level (0 = uncompacted, higher = more compacted)
	Level CompactionLevel `protobuf:"varint,2,opt,name=level,proto3,enum=nexus.catalog.v1.CompactionLevel" json:"level,omitempty"`
	// The time window that was compacted
	Window *Window `protobuf:"bytes,3,opt,name=window,proto3" json:"window,omitempty"`
	// Total size in bytes of the compacted output
	Size          uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Compaction) Reset() {
	*x = Compaction{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Compaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Compaction) ProtoMessage() {}

func (x *Compaction) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Compaction.ProtoReflect.Descriptor instead.
func (*Compaction) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{12}
}

func (x *Compaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Compaction) GetLevel() CompactionLevel {
	if x != nil {
		return x.Level
	}
	return CompactionLevel_COMPACTION_LEVEL_UNSPECIFIED
}

func (x *Compaction) GetWindow() *Window {
	if x != nil {
		return x.Window
	}
	return nil
}

func (x *Compaction) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// Window represents a time range, typically used for compaction operations.
// Defines the temporal boundaries of a batch of data.
type Window struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Size of the window (e.g., duration in seconds or minutes)
	Size          uint32                 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Window) Reset() {
	*x = Window{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Window) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Window) ProtoMessage() {}

func (x *Window) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Window.ProtoReflect.Descriptor instead.
func (*Window) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{13}
}

func (x *Window) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Window) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Window) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// Value represents a generic container for storing raw data with metadata.
// This is used for storing arbitrary values with compression and timestamp tracking.
// Useful for caching, intermediate results, or storing configuration data.
type Value struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp when the value was first created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp when the value was last updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Compression algorithm applied to the raw data
	Comp Compression `protobuf:"varint,3,opt,name=comp,proto3,enum=nexus.catalog.v1.Compression" json:"comp,omitempty"`
	// The raw data bytes (potentially compressed)
	Raw           []byte `protobuf:"bytes,4,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{14}
}

func (x *Value) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Value) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Value) GetComp() Compression {
	if x != nil {
		return x.Comp
	}
	return Compression_COMPRESSION_UNSPECIFIED
}

func (x *Value) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

// Variant is a polymorphic value type that can hold different primitive types.
// Similar to a union type or tagged union in programming languages.
//
// USE CASES:
// - Storing heterogeneous data where the type varies at runtime
// - Dynamic configuration values
// - Query parameters that can be of different types
// - Metadata values with varying types
//
// The oneof ensures only one field is set at a time, with the field tag
// indicating the actual type of the stored value.
type Variant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Variant:
	//
	//	*Variant_Int32Variant
	//	*Variant_Int64Variant
	//	*Variant_Uint32Variant
	//	*Variant_Uint64Variant
	//	*Variant_BoolVariant
	//	*Variant_StringVariant
	//	*Variant_BytesVariant
	//	*Variant_TimestampVariant
	Variant       isVariant_Variant `protobuf_oneof:"variant"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Variant) Reset() {
	*x = Variant{}
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Variant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variant) ProtoMessage() {}

func (x *Variant) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_catalog_v1_catalog_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variant.ProtoReflect.Descriptor instead.
func (*Variant) Descriptor() ([]byte, []int) {
	return file_nexus_catalog_v1_catalog_proto_rawDescGZIP(), []int{15}
}

func (x *Variant) GetVariant() isVariant_Variant {
	if x != nil {
		return x.Variant
	}
	return nil
}

func (x *Variant) GetInt32Variant() int32 {
	if x != nil {
		if x, ok := x.Variant.(*Variant_Int32Variant); ok {
			return x.Int32Variant
		}
	}
	return 0
}

func (x *Variant) GetInt64Variant() int64 {
	if x != nil {
		if x, ok := x.Variant.(*Variant_Int64Variant); ok {
			return x.Int64Variant
		}
	}
	return 0
}

func (x *Variant) GetUint32Variant() uint32 {
	if x != nil {
		if x, ok := x.Variant.(*Variant_Uint32Variant); ok {
			return x.Uint32Variant
		}
	}
	return 0
}

func (x *Variant) GetUint64Variant() uint64 {
	if x != nil {
		if x, ok := x.Variant.(*Variant_Uint64Variant); ok {
			return x.Uint64Variant
		}
	}
	return 0
}

func (x *Variant) GetBoolVariant() bool {
	if x != nil {
		if x, ok := x.Variant.(*Variant_BoolVariant); ok {
			return x.BoolVariant
		}
	}
	return false
}

func (x *Variant) GetStringVariant() string {
	if x != nil {
		if x, ok := x.Variant.(*Variant_StringVariant); ok {
			return x.StringVariant
		}
	}
	return ""
}

func (x *Variant) GetBytesVariant() []byte {
	if x != nil {
		if x, ok := x.Variant.(*Variant_BytesVariant); ok {
			return x.BytesVariant
		}
	}
	return nil
}

func (x *Variant) GetTimestampVariant() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Variant.(*Variant_TimestampVariant); ok {
			return x.TimestampVariant
		}
	}
	return nil
}

type isVariant_Variant interface {
	isVariant_Variant()
}

type Variant_Int32Variant struct {
	Int32Variant int32 `protobuf:"varint,1,opt,name=int32_variant,json=int32Variant,proto3,oneof"`
}

type Variant_Int64Variant struct {
	Int64Variant int64 `protobuf:"varint,2,opt,name=int64_variant,json=int64Variant,proto3,oneof"`
}

type Variant_Uint32Variant struct {
	Uint32Variant uint32 `protobuf:"varint,3,opt,name=uint32_variant,json=uint32Variant,proto3,oneof"`
}

type Variant_Uint64Variant struct {
	Uint64Variant uint64 `protobuf:"varint,4,opt,name=uint64_variant,json=uint64Variant,proto3,oneof"`
}

type Variant_BoolVariant struct {
	BoolVariant bool `protobuf:"varint,5,opt,name=bool_variant,json=boolVariant,proto3,oneof"`
}

type Variant_StringVariant struct {
	StringVariant string `protobuf:"bytes,6,opt,name=string_variant,json=stringVariant,proto3,oneof"`
}

type Variant_BytesVariant struct {
	BytesVariant []byte `protobuf:"bytes,7,opt,name=bytes_variant,json=bytesVariant,proto3,oneof"`
}

type Variant_TimestampVariant struct {
	TimestampVariant *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp_variant,json=timestampVariant,proto3,oneof"`
}

func (*Variant_Int32Variant) isVariant_Variant() {}

func (*Variant_Int64Variant) isVariant_Variant() {}

func (*Variant_Uint32Variant) isVariant_Variant() {}

func (*Variant_Uint64Variant) isVariant_Variant() {}

func (*Variant_BoolVariant) isVariant_Variant() {}

func (*Variant_StringVariant) isVariant_Variant() {}

func (*Variant_BytesVariant) isVariant_Variant() {}

func (*Variant_TimestampVariant) isVariant_Variant() {}

var File_nexus_catalog_v1_catalog_proto protoreflect.FileDescriptor

const file_nexus_catalog_v1_catalog_proto_rawDesc = "" +
	"\n" +
	"\x1enexus/catalog/v1/catalog.proto\x12\x10nexus.catalog.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"p\n" +
	"\x15CreateManifestRequest\x12\x1f\n" +
	"\vcluster_pid\x18\x01 \x01(\tR\n" +
	"clusterPid\x126\n" +
	"\bmanifest\x18\x02 \x01(\v2\x1a.nexus.catalog.v1.ManifestR\bmanifest\"\xbe\x01\n" +
	"\x16CreateManifestResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x12\x1f\n" +
	"\vcluster_pid\x18\x02 \x01(\tR\n" +
	"clusterPid\x126\n" +
	"\bmanifest\x18\x03 \x01(\v2\x1a.nexus.catalog.v1.ManifestR\bmanifest\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xa9\x01\n" +
	"\x14ListManifestsRequest\x12\x1f\n" +
	"\vcluster_pid\x18\x01 \x01(\tR\n" +
	"clusterPid\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"\xe4\x01\n" +
	"\x15ListManifestsResponse\x12\x1f\n" +
	"\vcluster_pid\x18\x01 \x01(\tR\n" +
	"clusterPid\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x128\n" +
	"\tmanifests\x18\x04 \x03(\v2\x1a.nexus.catalog.v1.ManifestR\tmanifests\"\xa1\x03\n" +
	"\bManifest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\tR\x03pid\x12=\n" +
	"\vcluster_key\x18\x02 \x01(\v2\x1c.nexus.catalog.v1.ClusterKeyR\n" +
	"clusterKey\x12?\n" +
	"\tlocations\x18\x03 \x03(\v2!.nexus.catalog.v1.StorageLocationR\tlocations\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x04R\x04size\x12\x1b\n" +
	"\trow_count\x18\x05 \x01(\x04R\browCount\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12A\n" +
	"\acolumns\x18\a \x03(\v2'.nexus.catalog.v1.Manifest.ColumnsEntryR\acolumns\x1aT\n" +
	"\fColumnsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.nexus.catalog.v1.ColumnR\x05value:\x028\x01\"\x8c\x01\n" +
	"\x06Column\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12<\n" +
	"\n" +
	"statistics\x18\x02 \x01(\v2\x1c.nexus.catalog.v1.StatisticsR\n" +
	"statistics\x120\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1c.nexus.catalog.v1.ColumnTypeR\x04type\"\xe8\x01\n" +
	"\x0fStorageLocation\x12L\n" +
	"\rs3_compatible\x18\x01 \x01(\v2%.nexus.catalog.v1.S3CompatibleStorageH\x00R\fs3Compatible\x12C\n" +
	"\n" +
	"azure_blob\x18\x02 \x01(\v2\".nexus.catalog.v1.AzureBlobStorageH\x00R\tazureBlob\x126\n" +
	"\x05local\x18\x03 \x01(\v2\x1e.nexus.catalog.v1.LocalStorageH\x00R\x05localB\n" +
	"\n" +
	"\blocation\"s\n" +
	"\x13S3CompatibleStorage\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x16\n" +
	"\x06bucket\x18\x02 \x01(\tR\x06bucket\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\"\x99\x01\n" +
	"\x10AzureBlobStorage\x12!\n" +
	"\faccount_name\x18\x01 \x01(\tR\vaccountName\x12\x1c\n" +
	"\tcontainer\x18\x02 \x01(\tR\tcontainer\x12\x1b\n" +
	"\tblob_name\x18\x03 \x01(\tR\bblobName\x12'\n" +
	"\x0fendpoint_suffix\x18\x04 \x01(\tR\x0eendpointSuffix\"\"\n" +
	"\fLocalStorage\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"\xf2\x04\n" +
	"\n" +
	"Statistics\x12\x1d\n" +
	"\tmin_int32\x18\x01 \x01(\x05H\x00R\bminInt32\x12\x1d\n" +
	"\tmin_int64\x18\x02 \x01(\x03H\x00R\bminInt64\x12\x1f\n" +
	"\n" +
	"min_uint32\x18\x03 \x01(\rH\x00R\tminUint32\x12\x1f\n" +
	"\n" +
	"min_uint64\x18\x04 \x01(\x04H\x00R\tminUint64\x12\x1b\n" +
	"\bmin_bool\x18\x05 \x01(\bH\x00R\aminBool\x12\x1f\n" +
	"\n" +
	"min_string\x18\x06 \x01(\tH\x00R\tminString\x12\x1d\n" +
	"\tmin_bytes\x18\a \x01(\fH\x00R\bminBytes\x12A\n" +
	"\rmin_timestamp\x18\b \x01(\v2\x1a.google.protobuf.TimestampH\x00R\fminTimestamp\x12\x1d\n" +
	"\tmax_int32\x18\t \x01(\x05H\x01R\bmaxInt32\x12\x1d\n" +
	"\tmax_int64\x18\n" +
	" \x01(\x03H\x01R\bmaxInt64\x12\x1f\n" +
	"\n" +
	"max_uint32\x18\v \x01(\rH\x01R\tmaxUint32\x12\x1f\n" +
	"\n" +
	"max_uint64\x18\f \x01(\x04H\x01R\tmaxUint64\x12\x1b\n" +
	"\bmax_bool\x18\r \x01(\bH\x01R\amaxBool\x12\x1f\n" +
	"\n" +
	"max_string\x18\x0e \x01(\tH\x01R\tmaxString\x12\x1d\n" +
	"\tmax_bytes\x18\x0f \x01(\fH\x01R\bmaxBytes\x12A\n" +
	"\rmax_timestamp\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\fmaxTimestamp\x12\x16\n" +
	"\x06filter\x18\x11 \x01(\fR\x06filterB\x05\n" +
	"\x03minB\x05\n" +
	"\x03max\"F\n" +
	"\n" +
	"ClusterKey\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xc6\x01\n" +
	"\n" +
	"Compaction\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x127\n" +
	"\x05level\x18\x02 \x01(\x0e2!.nexus.catalog.v1.CompactionLevelR\x05level\x120\n" +
	"\x06window\x18\x03 \x01(\v2\x18.nexus.catalog.v1.WindowR\x06window\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x04R\x04size\"\x8e\x01\n" +
	"\x06Window\x12\x12\n" +
	"\x04size\x18\x01 \x01(\rR\x04size\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"\xc2\x01\n" +
	"\x05Value\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x121\n" +
	"\x04comp\x18\x03 \x01(\x0e2\x1d.nexus.catalog.v1.CompressionR\x04comp\x12\x10\n" +
	"\x03raw\x18\x04 \x01(\fR\x03raw\"\xf4\x02\n" +
	"\aVariant\x12%\n" +
	"\rint32_variant\x18\x01 \x01(\x05H\x00R\fint32Variant\x12%\n" +
	"\rint64_variant\x18\x02 \x01(\x03H\x00R\fint64Variant\x12'\n" +
	"\x0euint32_variant\x18\x03 \x01(\rH\x00R\ruint32Variant\x12'\n" +
	"\x0euint64_variant\x18\x04 \x01(\x04H\x00R\ruint64Variant\x12#\n" +
	"\fbool_variant\x18\x05 \x01(\bH\x00R\vboolVariant\x12'\n" +
	"\x0estring_variant\x18\x06 \x01(\tH\x00R\rstringVariant\x12%\n" +
	"\rbytes_variant\x18\a \x01(\fH\x00R\fbytesVariant\x12I\n" +
	"\x11timestamp_variant\x18\b \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x10timestampVariantB\t\n" +
	"\avariant*\xc6\x02\n" +
	"\n" +
	"ColumnType\x12\x1b\n" +
	"\x17COLUMN_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10COLUMN_TYPE_INT8\x10\x01\x12\x15\n" +
	"\x11COLUMN_TYPE_INT16\x10\x02\x12\x15\n" +
	"\x11COLUMN_TYPE_INT32\x10\x03\x12\x15\n" +
	"\x11COLUMN_TYPE_INT64\x10\x04\x12\x15\n" +
	"\x11COLUMN_TYPE_UINT8\x10\x05\x12\x16\n" +
	"\x12COLUMN_TYPE_UINT16\x10\x06\x12\x16\n" +
	"\x12COLUMN_TYPE_UINT32\x10\a\x12\x16\n" +
	"\x12COLUMN_TYPE_UINT64\x10\b\x12\x16\n" +
	"\x12COLUMN_TYPE_STRING\x10\t\x12\x17\n" +
	"\x13COLUMN_TYPE_BOOLEAN\x10\n" +
	"\x12\x19\n" +
	"\x15COLUMN_TYPE_TIMESTAMP\x10\v\x12\x15\n" +
	"\x11COLUMN_TYPE_BYTES\x10\f*h\n" +
	"\x0fCompactionLevel\x12 \n" +
	"\x1cCOMPACTION_LEVEL_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15COMPACTION_LEVEL_ZERO\x10\x01\x12\x18\n" +
	"\x14COMPACTION_LEVEL_ONE\x10\x02*m\n" +
	"\vCompression\x12\x1b\n" +
	"\x17COMPRESSION_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10COMPRESSION_ZSTD\x10\x01\x12\x13\n" +
	"\x0fCOMPRESSION_LZ4\x10\x02\x12\x16\n" +
	"\x12COMPRESSION_SNAPPY\x10\x032\xdb\x01\n" +
	"\x0eCatalogService\x12e\n" +
	"\x0eCreateManifest\x12'.nexus.catalog.v1.CreateManifestRequest\x1a(.nexus.catalog.v1.CreateManifestResponse\"\x00\x12b\n" +
	"\rListManifests\x12&.nexus.catalog.v1.ListManifestsRequest\x1a'.nexus.catalog.v1.ListManifestsResponse\"\x00B<Z:github.com/liquidspill/proto/go/nexus/catalog/v1;catalogv1b\x06proto3"

var (
	file_nexus_catalog_v1_catalog_proto_rawDescOnce sync.Once
	file_nexus_catalog_v1_catalog_proto_rawDescData []byte
)

func file_nexus_catalog_v1_catalog_proto_rawDescGZIP() []byte {
	file_nexus_catalog_v1_catalog_proto_rawDescOnce.Do(func() {
		file_nexus_catalog_v1_catalog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nexus_catalog_v1_catalog_proto_rawDesc), len(file_nexus_catalog_v1_catalog_proto_rawDesc)))
	})
	return file_nexus_catalog_v1_catalog_proto_rawDescData
}

var file_nexus_catalog_v1_catalog_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_nexus_catalog_v1_catalog_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_nexus_catalog_v1_catalog_proto_goTypes = []any{
	(ColumnType)(0),                // 0: nexus.catalog.v1.ColumnType
	(CompactionLevel)(0),           // 1: nexus.catalog.v1.CompactionLevel
	(Compression)(0),               // 2: nexus.catalog.v1.Compression
	(*CreateManifestRequest)(nil),  // 3: nexus.catalog.v1.CreateManifestRequest
	(*CreateManifestResponse)(nil), // 4: nexus.catalog.v1.CreateManifestResponse
	(*ListManifestsRequest)(nil),   // 5: nexus.catalog.v1.ListManifestsRequest
	(*ListManifestsResponse)(nil),  // 6: nexus.catalog.v1.ListManifestsResponse
	(*Manifest)(nil),               // 7: nexus.catalog.v1.Manifest
	(*Column)(nil),                 // 8: nexus.catalog.v1.Column
	(*StorageLocation)(nil),        // 9: nexus.catalog.v1.StorageLocation
	(*S3CompatibleStorage)(nil),    // 10: nexus.catalog.v1.S3CompatibleStorage
	(*AzureBlobStorage)(nil),       // 11: nexus.catalog.v1.AzureBlobStorage
	(*LocalStorage)(nil),           // 12: nexus.catalog.v1.LocalStorage
	(*Statistics)(nil),             // 13: nexus.catalog.v1.Statistics
	(*ClusterKey)(nil),             // 14: nexus.catalog.v1.ClusterKey
	(*Compaction)(nil),             // 15: nexus.catalog.v1.Compaction
	(*Window)(nil),                 // 16: nexus.catalog.v1.Window
	(*Value)(nil),                  // 17: nexus.catalog.v1.Value
	(*Variant)(nil),                // 18: nexus.catalog.v1.Variant
	nil,                            // 19: nexus.catalog.v1.Manifest.ColumnsEntry
	(*timestamppb.Timestamp)(nil),  // 20: google.protobuf.Timestamp
}
var file_nexus_catalog_v1_catalog_proto_depIdxs = []int32{
	7,  // 0: nexus.catalog.v1.CreateManifestRequest.manifest:type_name -> nexus.catalog.v1.Manifest
	7,  // 1: nexus.catalog.v1.CreateManifestResponse.manifest:type_name -> nexus.catalog.v1.Manifest
	20, // 2: nexus.catalog.v1.CreateManifestResponse.created_at:type_name -> google.protobuf.Timestamp
	20, // 3: nexus.catalog.v1.ListManifestsRequest.start_time:type_name -> google.protobuf.Timestamp
	20, // 4: nexus.catalog.v1.ListManifestsRequest.end_time:type_name -> google.protobuf.Timestamp
	20, // 5: nexus.catalog.v1.ListManifestsResponse.start_time:type_name -> google.protobuf.Timestamp
	20, // 6: nexus.catalog.v1.ListManifestsResponse.end_time:type_name -> google.protobuf.Timestamp
	7,  // 7: nexus.catalog.v1.ListManifestsResponse.manifests:type_name -> nexus.catalog.v1.Manifest
	14, // 8: nexus.catalog.v1.Manifest.cluster_key:type_name -> nexus.catalog.v1.ClusterKey
	9,  // 9: nexus.catalog.v1.Manifest.locations:type_name -> nexus.catalog.v1.StorageLocation
	20, // 10: nexus.catalog.v1.Manifest.created_at:type_name -> google.protobuf.Timestamp
	19, // 11: nexus.catalog.v1.Manifest.columns:type_name -> nexus.catalog.v1.Manifest.ColumnsEntry
	13, // 12: nexus.catalog.v1.Column.statistics:type_name -> nexus.catalog.v1.Statistics
	0,  // 13: nexus.catalog.v1.Column.type:type_name -> nexus.catalog.v1.ColumnType
	10, // 14: nexus.catalog.v1.StorageLocation.s3_compatible:type_name -> nexus.catalog.v1.S3CompatibleStorage
	11, // 15: nexus.catalog.v1.StorageLocation.azure_blob:type_name -> nexus.catalog.v1.AzureBlobStorage
	12, // 16: nexus.catalog.v1.StorageLocation.local:type_name -> nexus.catalog.v1.LocalStorage
	20, // 17: nexus.catalog.v1.Statistics.min_timestamp:type_name -> google.protobuf.Timestamp
	20, // 18: nexus.catalog.v1.Statistics.max_timestamp:type_name -> google.protobuf.Timestamp
	20, // 19: nexus.catalog.v1.ClusterKey.timestamp:type_name -> google.protobuf.Timestamp
	20, // 20: nexus.catalog.v1.Compaction.created_at:type_name -> google.protobuf.Timestamp
	1,  // 21: nexus.catalog.v1.Compaction.level:type_name -> nexus.catalog.v1.CompactionLevel
	16, // 22: nexus.catalog.v1.Compaction.window:type_name -> nexus.catalog.v1.Window
	20, // 23: nexus.catalog.v1.Window.start_time:type_name -> google.protobuf.Timestamp
	20, // 24: nexus.catalog.v1.Window.end_time:type_name -> google.protobuf.Timestamp
	20, // 25: nexus.catalog.v1.Value.created_at:type_name -> google.protobuf.Timestamp
	20, // 26: nexus.catalog.v1.Value.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 27: nexus.catalog.v1.Value.comp:type_name -> nexus.catalog.v1.Compression
	20, // 28: nexus.catalog.v1.Variant.timestamp_variant:type_name -> google.protobuf.Timestamp
	8,  // 29: nexus.catalog.v1.Manifest.ColumnsEntry.value:type_name -> nexus.catalog.v1.Column
	3,  // 30: nexus.catalog.v1.CatalogService.CreateManifest:input_type -> nexus.catalog.v1.CreateManifestRequest
	5,  // 31: nexus.catalog.v1.CatalogService.ListManifests:input_type -> nexus.catalog.v1.ListManifestsRequest
	4,  // 32: nexus.catalog.v1.CatalogService.CreateManifest:output_type -> nexus.catalog.v1.CreateManifestResponse
	6,  // 33: nexus.catalog.v1.CatalogService.ListManifests:output_type -> nexus.catalog.v1.ListManifestsResponse
	32, // [32:34] is the sub-list for method output_type
	30, // [30:32] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_nexus_catalog_v1_catalog_proto_init() }
func file_nexus_catalog_v1_catalog_proto_init() {
	if File_nexus_catalog_v1_catalog_proto != nil {
		return
	}
	file_nexus_catalog_v1_catalog_proto_msgTypes[6].OneofWrappers = []any{
		(*StorageLocation_S3Compatible)(nil),
		(*StorageLocation_AzureBlob)(nil),
		(*StorageLocation_Local)(nil),
	}
	file_nexus_catalog_v1_catalog_proto_msgTypes[10].OneofWrappers = []any{
		(*Statistics_MinInt32)(nil),
		(*Statistics_MinInt64)(nil),
		(*Statistics_MinUint32)(nil),
		(*Statistics_MinUint64)(nil),
		(*Statistics_MinBool)(nil),
		(*Statistics_MinString)(nil),
		(*Statistics_MinBytes)(nil),
		(*Statistics_MinTimestamp)(nil),
		(*Statistics_MaxInt32)(nil),
		(*Statistics_MaxInt64)(nil),
		(*Statistics_MaxUint32)(nil),
		(*Statistics_MaxUint64)(nil),
		(*Statistics_MaxBool)(nil),
		(*Statistics_MaxString)(nil),
		(*Statistics_MaxBytes)(nil),
		(*Statistics_MaxTimestamp)(nil),
	}
	file_nexus_catalog_v1_catalog_proto_msgTypes[15].OneofWrappers = []any{
		(*Variant_Int32Variant)(nil),
		(*Variant_Int64Variant)(nil),
		(*Variant_Uint32Variant)(nil),
		(*Variant_Uint64Variant)(nil),
		(*Variant_BoolVariant)(nil),
		(*Variant_StringVariant)(nil),
		(*Variant_BytesVariant)(nil),
		(*Variant_TimestampVariant)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nexus_catalog_v1_catalog_proto_rawDesc), len(file_nexus_catalog_v1_catalog_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nexus_catalog_v1_catalog_proto_goTypes,
		DependencyIndexes: file_nexus_catalog_v1_catalog_proto_depIdxs,
		EnumInfos:         file_nexus_catalog_v1_catalog_proto_enumTypes,
		MessageInfos:      file_nexus_catalog_v1_catalog_proto_msgTypes,
	}.Build()
	File_nexus_catalog_v1_catalog_proto = out.File
	file_nexus_catalog_v1_catalog_proto_goTypes = nil
	file_nexus_catalog_v1_catalog_proto_depIdxs = nil
}

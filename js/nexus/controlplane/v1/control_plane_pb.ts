// @generated by protoc-gen-es v2.10.0 with parameter "target=ts"
// @generated from file nexus/controlplane/v1/control_plane.proto (package nexus.controlplane.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { KeyValue, Value } from "../../../std/v1/std_pb";
import { file_std_v1_std } from "../../../std/v1/std_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file nexus/controlplane/v1/control_plane.proto.
 */
export const file_nexus_controlplane_v1_control_plane: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_timestamp, file_google_protobuf_field_mask, file_std_v1_std]);

/**
 * @generated from message nexus.controlplane.v1.Cluster
 */
export type Cluster = Message<"nexus.controlplane.v1.Cluster"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string team_id = 2;
   */
  teamId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: nexus.controlplane.v1.ClusterType type = 4;
   */
  type: ClusterType;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 6;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message nexus.controlplane.v1.Cluster.
 * Use `create(ClusterSchema)` to create a new message.
 */
export const ClusterSchema: GenMessage<Cluster> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 0);

/**
 * @generated from message nexus.controlplane.v1.CreateClusterRequest
 */
export type CreateClusterRequest = Message<"nexus.controlplane.v1.CreateClusterRequest"> & {
  /**
   * @generated from field: string team_id = 1;
   */
  teamId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: nexus.controlplane.v1.ClusterType type = 3;
   */
  type: ClusterType;
};

/**
 * Describes the message nexus.controlplane.v1.CreateClusterRequest.
 * Use `create(CreateClusterRequestSchema)` to create a new message.
 */
export const CreateClusterRequestSchema: GenMessage<CreateClusterRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 1);

/**
 * @generated from message nexus.controlplane.v1.CreateClusterResponse
 */
export type CreateClusterResponse = Message<"nexus.controlplane.v1.CreateClusterResponse"> & {
  /**
   * @generated from field: nexus.controlplane.v1.Cluster cluster = 1;
   */
  cluster?: Cluster;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message nexus.controlplane.v1.CreateClusterResponse.
 * Use `create(CreateClusterResponseSchema)` to create a new message.
 */
export const CreateClusterResponseSchema: GenMessage<CreateClusterResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 2);

/**
 * @generated from message nexus.controlplane.v1.DeleteClusterRequest
 */
export type DeleteClusterRequest = Message<"nexus.controlplane.v1.DeleteClusterRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message nexus.controlplane.v1.DeleteClusterRequest.
 * Use `create(DeleteClusterRequestSchema)` to create a new message.
 */
export const DeleteClusterRequestSchema: GenMessage<DeleteClusterRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 3);

/**
 * @generated from message nexus.controlplane.v1.DeleteClusterResponse
 */
export type DeleteClusterResponse = Message<"nexus.controlplane.v1.DeleteClusterResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: google.protobuf.Timestamp deleted_at = 2;
   */
  deletedAt?: Timestamp;
};

/**
 * Describes the message nexus.controlplane.v1.DeleteClusterResponse.
 * Use `create(DeleteClusterResponseSchema)` to create a new message.
 */
export const DeleteClusterResponseSchema: GenMessage<DeleteClusterResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 4);

/**
 * @generated from message nexus.controlplane.v1.ListClustersRequest
 */
export type ListClustersRequest = Message<"nexus.controlplane.v1.ListClustersRequest"> & {
  /**
   * @generated from field: string team_id = 1;
   */
  teamId: string;
};

/**
 * Describes the message nexus.controlplane.v1.ListClustersRequest.
 * Use `create(ListClustersRequestSchema)` to create a new message.
 */
export const ListClustersRequestSchema: GenMessage<ListClustersRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 5);

/**
 * @generated from message nexus.controlplane.v1.ListClustersResponse
 */
export type ListClustersResponse = Message<"nexus.controlplane.v1.ListClustersResponse"> & {
  /**
   * @generated from field: string team_id = 1;
   */
  teamId: string;

  /**
   * @generated from field: repeated nexus.controlplane.v1.Cluster clusters = 2;
   */
  clusters: Cluster[];
};

/**
 * Describes the message nexus.controlplane.v1.ListClustersResponse.
 * Use `create(ListClustersResponseSchema)` to create a new message.
 */
export const ListClustersResponseSchema: GenMessage<ListClustersResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 6);

/**
 * @generated from message nexus.controlplane.v1.GetClusterRequest
 */
export type GetClusterRequest = Message<"nexus.controlplane.v1.GetClusterRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message nexus.controlplane.v1.GetClusterRequest.
 * Use `create(GetClusterRequestSchema)` to create a new message.
 */
export const GetClusterRequestSchema: GenMessage<GetClusterRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 7);

/**
 * @generated from message nexus.controlplane.v1.GetClusterResponse
 */
export type GetClusterResponse = Message<"nexus.controlplane.v1.GetClusterResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: nexus.controlplane.v1.Cluster cluster = 2;
   */
  cluster?: Cluster;
};

/**
 * Describes the message nexus.controlplane.v1.GetClusterResponse.
 * Use `create(GetClusterResponseSchema)` to create a new message.
 */
export const GetClusterResponseSchema: GenMessage<GetClusterResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 8);

/**
 * @generated from message nexus.controlplane.v1.Device
 */
export type Device = Message<"nexus.controlplane.v1.Device"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * @generated from field: string team_id = 3;
   */
  teamId: string;

  /**
   * A "common name" for the device that the user can use
   * to identify it.
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from oneof nexus.controlplane.v1.Device.vendor
   */
  vendor: {
    /**
     * A known vendor that we explicitly support where
     * support means we can populate device information
     * with additional information that we know is specific
     * to this vendor and/or model
     *
     * @generated from field: nexus.controlplane.v1.Vendor known_vendor = 6;
     */
    value: Vendor;
    case: "knownVendor";
  } | {
    /**
     * A generic vendor
     *
     * @generated from field: string other_vendor = 7;
     */
    value: string;
    case: "otherVendor";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof nexus.controlplane.v1.Device.model
   */
  model: {
    /**
     * A known model that we explicitly support
     *
     * @generated from field: nexus.controlplane.v1.Model known_model = 8;
     */
    value: Model;
    case: "knownModel";
  } | {
    /**
     * A generic model
     *
     * @generated from field: string other_model = 9;
     */
    value: string;
    case: "otherModel";
  } | { case: undefined; value?: undefined };

  /**
   * The IP addresses of the device. We use these to look
   * up the relevant device to enrich our flow with its information.
   *
   * @generated from field: repeated nexus.controlplane.v1.IpAddress addresses = 10;
   */
  addresses: IpAddress[];

  /**
   * User-defined labels for the device. Used to add more metadata
   * to query over.
   *
   * Additional information about the device, specific to known devices that
   * we support (in future)
   * oneof device_info {}
   *
   * @generated from field: repeated std.v1.KeyValue labels = 11;
   */
  labels: KeyValue[];
};

/**
 * Describes the message nexus.controlplane.v1.Device.
 * Use `create(DeviceSchema)` to create a new message.
 */
export const DeviceSchema: GenMessage<Device> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 9);

/**
 * @generated from message nexus.controlplane.v1.IpAddress
 */
export type IpAddress = Message<"nexus.controlplane.v1.IpAddress"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;

  /**
   * @generated from field: nexus.controlplane.v1.IPVersion version = 2;
   */
  version: IPVersion;
};

/**
 * Describes the message nexus.controlplane.v1.IpAddress.
 * Use `create(IpAddressSchema)` to create a new message.
 */
export const IpAddressSchema: GenMessage<IpAddress> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 10);

/**
 * @generated from message nexus.controlplane.v1.CreateDeviceRequest
 */
export type CreateDeviceRequest = Message<"nexus.controlplane.v1.CreateDeviceRequest"> & {
  /**
   * @generated from field: string team_id = 1;
   */
  teamId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from oneof nexus.controlplane.v1.CreateDeviceRequest.vendor
   */
  vendor: {
    /**
     * @generated from field: nexus.controlplane.v1.Vendor known_vendor = 4;
     */
    value: Vendor;
    case: "knownVendor";
  } | {
    /**
     * @generated from field: string other_vendor = 5;
     */
    value: string;
    case: "otherVendor";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof nexus.controlplane.v1.CreateDeviceRequest.model
   */
  model: {
    /**
     * @generated from field: nexus.controlplane.v1.Model known_model = 6;
     */
    value: Model;
    case: "knownModel";
  } | {
    /**
     * @generated from field: string other_model = 7;
     */
    value: string;
    case: "otherModel";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: repeated nexus.controlplane.v1.IpAddress addresses = 8;
   */
  addresses: IpAddress[];

  /**
   * @generated from field: repeated std.v1.KeyValue labels = 9;
   */
  labels: KeyValue[];
};

/**
 * Describes the message nexus.controlplane.v1.CreateDeviceRequest.
 * Use `create(CreateDeviceRequestSchema)` to create a new message.
 */
export const CreateDeviceRequestSchema: GenMessage<CreateDeviceRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 11);

/**
 * @generated from message nexus.controlplane.v1.CreateDeviceResponse
 */
export type CreateDeviceResponse = Message<"nexus.controlplane.v1.CreateDeviceResponse"> & {
  /**
   * @generated from field: string team_id = 1;
   */
  teamId: string;

  /**
   * @generated from field: nexus.controlplane.v1.Device device = 2;
   */
  device?: Device;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message nexus.controlplane.v1.CreateDeviceResponse.
 * Use `create(CreateDeviceResponseSchema)` to create a new message.
 */
export const CreateDeviceResponseSchema: GenMessage<CreateDeviceResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 12);

/**
 * @generated from message nexus.controlplane.v1.DeleteDeviceRequest
 */
export type DeleteDeviceRequest = Message<"nexus.controlplane.v1.DeleteDeviceRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message nexus.controlplane.v1.DeleteDeviceRequest.
 * Use `create(DeleteDeviceRequestSchema)` to create a new message.
 */
export const DeleteDeviceRequestSchema: GenMessage<DeleteDeviceRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 13);

/**
 * @generated from message nexus.controlplane.v1.DeleteDeviceResponse
 */
export type DeleteDeviceResponse = Message<"nexus.controlplane.v1.DeleteDeviceResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: google.protobuf.Timestamp deleted_at = 2;
   */
  deletedAt?: Timestamp;
};

/**
 * Describes the message nexus.controlplane.v1.DeleteDeviceResponse.
 * Use `create(DeleteDeviceResponseSchema)` to create a new message.
 */
export const DeleteDeviceResponseSchema: GenMessage<DeleteDeviceResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 14);

/**
 * @generated from message nexus.controlplane.v1.UpdateDeviceRequest
 */
export type UpdateDeviceRequest = Message<"nexus.controlplane.v1.UpdateDeviceRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: nexus.controlplane.v1.Device device = 2;
   */
  device?: Device;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message nexus.controlplane.v1.UpdateDeviceRequest.
 * Use `create(UpdateDeviceRequestSchema)` to create a new message.
 */
export const UpdateDeviceRequestSchema: GenMessage<UpdateDeviceRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 15);

/**
 * @generated from message nexus.controlplane.v1.UpdateDeviceResponse
 */
export type UpdateDeviceResponse = Message<"nexus.controlplane.v1.UpdateDeviceResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: nexus.controlplane.v1.Device device = 2;
   */
  device?: Device;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 3;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message nexus.controlplane.v1.UpdateDeviceResponse.
 * Use `create(UpdateDeviceResponseSchema)` to create a new message.
 */
export const UpdateDeviceResponseSchema: GenMessage<UpdateDeviceResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 16);

/**
 * @generated from message nexus.controlplane.v1.GetDeviceRequest
 */
export type GetDeviceRequest = Message<"nexus.controlplane.v1.GetDeviceRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message nexus.controlplane.v1.GetDeviceRequest.
 * Use `create(GetDeviceRequestSchema)` to create a new message.
 */
export const GetDeviceRequestSchema: GenMessage<GetDeviceRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 17);

/**
 * @generated from message nexus.controlplane.v1.GetDeviceResponse
 */
export type GetDeviceResponse = Message<"nexus.controlplane.v1.GetDeviceResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: nexus.controlplane.v1.Device device = 2;
   */
  device?: Device;
};

/**
 * Describes the message nexus.controlplane.v1.GetDeviceResponse.
 * Use `create(GetDeviceResponseSchema)` to create a new message.
 */
export const GetDeviceResponseSchema: GenMessage<GetDeviceResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 18);

/**
 * @generated from message nexus.controlplane.v1.ListDevicesRequest
 */
export type ListDevicesRequest = Message<"nexus.controlplane.v1.ListDevicesRequest"> & {
  /**
   * @generated from field: string team_id = 1;
   */
  teamId: string;
};

/**
 * Describes the message nexus.controlplane.v1.ListDevicesRequest.
 * Use `create(ListDevicesRequestSchema)` to create a new message.
 */
export const ListDevicesRequestSchema: GenMessage<ListDevicesRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 19);

/**
 * @generated from message nexus.controlplane.v1.ListDevicesResponse
 */
export type ListDevicesResponse = Message<"nexus.controlplane.v1.ListDevicesResponse"> & {
  /**
   * @generated from field: string team_id = 1;
   */
  teamId: string;

  /**
   * @generated from field: repeated nexus.controlplane.v1.Device devices = 2;
   */
  devices: Device[];
};

/**
 * Describes the message nexus.controlplane.v1.ListDevicesResponse.
 * Use `create(ListDevicesResponseSchema)` to create a new message.
 */
export const ListDevicesResponseSchema: GenMessage<ListDevicesResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 20);

/**
 * @generated from message nexus.controlplane.v1.Query
 */
export type Query = Message<"nexus.controlplane.v1.Query"> & {
  /**
   * @generated from field: repeated nexus.controlplane.v1.Visualise visualise = 1;
   */
  visualise: Visualise[];

  /**
   * @generated from field: nexus.controlplane.v1.Where where = 2;
   */
  where?: Where;

  /**
   * @generated from field: repeated string group_by = 3;
   */
  groupBy: string[];

  /**
   * @generated from field: repeated nexus.controlplane.v1.Order order_by = 4;
   */
  orderBy: Order[];

  /**
   * @generated from field: uint32 limit = 5;
   */
  limit: number;

  /**
   * @generated from field: nexus.controlplane.v1.Clause having = 6;
   */
  having?: Clause;

  /**
   * @generated from field: int64 start_time = 7;
   */
  startTime: bigint;

  /**
   * @generated from field: int64 end_time = 8;
   */
  endTime: bigint;
};

/**
 * Describes the message nexus.controlplane.v1.Query.
 * Use `create(QuerySchema)` to create a new message.
 */
export const QuerySchema: GenMessage<Query> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 21);

/**
 * @generated from message nexus.controlplane.v1.Visualise
 */
export type Visualise = Message<"nexus.controlplane.v1.Visualise"> & {
  /**
   * @generated from field: nexus.controlplane.v1.VisualiseOp op = 1;
   */
  op: VisualiseOp;

  /**
   * @generated from field: string field = 2;
   */
  field: string;
};

/**
 * Describes the message nexus.controlplane.v1.Visualise.
 * Use `create(VisualiseSchema)` to create a new message.
 */
export const VisualiseSchema: GenMessage<Visualise> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 22);

/**
 * @generated from message nexus.controlplane.v1.Where
 */
export type Where = Message<"nexus.controlplane.v1.Where"> & {
  /**
   * @generated from field: nexus.controlplane.v1.WhereOp op = 1;
   */
  op: WhereOp;

  /**
   * @generated from field: repeated nexus.controlplane.v1.Clause clauses = 2;
   */
  clauses: Clause[];
};

/**
 * Describes the message nexus.controlplane.v1.Where.
 * Use `create(WhereSchema)` to create a new message.
 */
export const WhereSchema: GenMessage<Where> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 23);

/**
 * @generated from message nexus.controlplane.v1.Clause
 */
export type Clause = Message<"nexus.controlplane.v1.Clause"> & {
  /**
   * @generated from field: string field = 1;
   */
  field: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * @generated from field: nexus.controlplane.v1.CompareOp op = 3;
   */
  op: CompareOp;
};

/**
 * Describes the message nexus.controlplane.v1.Clause.
 * Use `create(ClauseSchema)` to create a new message.
 */
export const ClauseSchema: GenMessage<Clause> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 24);

/**
 * @generated from message nexus.controlplane.v1.Order
 */
export type Order = Message<"nexus.controlplane.v1.Order"> & {
  /**
   * @generated from field: string field = 1;
   */
  field: string;

  /**
   * @generated from field: nexus.controlplane.v1.OrderOp order = 2;
   */
  order: OrderOp;
};

/**
 * Describes the message nexus.controlplane.v1.Order.
 * Use `create(OrderSchema)` to create a new message.
 */
export const OrderSchema: GenMessage<Order> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 25);

/**
 * @generated from message nexus.controlplane.v1.Series
 */
export type Series = Message<"nexus.controlplane.v1.Series"> & {
  /**
   * @generated from field: repeated google.protobuf.Timestamp timestamps = 1;
   */
  timestamps: Timestamp[];

  /**
   * The series of data returned by our query
   *
   * @generated from field: map<string, nexus.controlplane.v1.SeriesData> data = 2;
   */
  data: { [key: string]: SeriesData };

  /**
   * The name of the columns that are visualisations of the data (i.e the
   * operation on the data)
   *
   * @generated from field: repeated string visualisations = 3;
   */
  visualisations: string[];

  /**
   * The names of the columns that are used to group the data
   *
   * @generated from field: repeated string groups = 4;
   */
  groups: string[];
};

/**
 * Describes the message nexus.controlplane.v1.Series.
 * Use `create(SeriesSchema)` to create a new message.
 */
export const SeriesSchema: GenMessage<Series> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 26);

/**
 * @generated from message nexus.controlplane.v1.SeriesData
 */
export type SeriesData = Message<"nexus.controlplane.v1.SeriesData"> & {
  /**
   * The name of the series. This is the field that was queried
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated std.v1.Value values = 2;
   */
  values: Value[];
};

/**
 * Describes the message nexus.controlplane.v1.SeriesData.
 * Use `create(SeriesDataSchema)` to create a new message.
 */
export const SeriesDataSchema: GenMessage<SeriesData> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 27);

/**
 * @generated from message nexus.controlplane.v1.Row
 */
export type Row = Message<"nexus.controlplane.v1.Row"> & {
  /**
   * @generated from field: repeated string fields = 1;
   */
  fields: string[];

  /**
   * @generated from field: repeated nexus.controlplane.v1.RowValues row_values = 2;
   */
  rowValues: RowValues[];
};

/**
 * Describes the message nexus.controlplane.v1.Row.
 * Use `create(RowSchema)` to create a new message.
 */
export const RowSchema: GenMessage<Row> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 28);

/**
 * @generated from message nexus.controlplane.v1.RowValues
 */
export type RowValues = Message<"nexus.controlplane.v1.RowValues"> & {
  /**
   * @generated from field: repeated std.v1.Value values = 1;
   */
  values: Value[];
};

/**
 * Describes the message nexus.controlplane.v1.RowValues.
 * Use `create(RowValuesSchema)` to create a new message.
 */
export const RowValuesSchema: GenMessage<RowValues> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 29);

/**
 * @generated from message nexus.controlplane.v1.CreateQueryRequest
 */
export type CreateQueryRequest = Message<"nexus.controlplane.v1.CreateQueryRequest"> & {
  /**
   * @generated from field: nexus.controlplane.v1.Query query = 1;
   */
  query?: Query;
};

/**
 * Describes the message nexus.controlplane.v1.CreateQueryRequest.
 * Use `create(CreateQueryRequestSchema)` to create a new message.
 */
export const CreateQueryRequestSchema: GenMessage<CreateQueryRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 30);

/**
 * @generated from message nexus.controlplane.v1.CreateQueryResponse
 */
export type CreateQueryResponse = Message<"nexus.controlplane.v1.CreateQueryResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: nexus.controlplane.v1.Query query = 2;
   */
  query?: Query;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message nexus.controlplane.v1.CreateQueryResponse.
 * Use `create(CreateQueryResponseSchema)` to create a new message.
 */
export const CreateQueryResponseSchema: GenMessage<CreateQueryResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 31);

/**
 * @generated from message nexus.controlplane.v1.StartQueryExecutionRequest
 */
export type StartQueryExecutionRequest = Message<"nexus.controlplane.v1.StartQueryExecutionRequest"> & {
  /**
   * @generated from field: string query_id = 1;
   */
  queryId: string;
};

/**
 * Describes the message nexus.controlplane.v1.StartQueryExecutionRequest.
 * Use `create(StartQueryExecutionRequestSchema)` to create a new message.
 */
export const StartQueryExecutionRequestSchema: GenMessage<StartQueryExecutionRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 32);

/**
 * @generated from message nexus.controlplane.v1.StartQueryExecutionResponse
 */
export type StartQueryExecutionResponse = Message<"nexus.controlplane.v1.StartQueryExecutionResponse"> & {
  /**
   * The ID of the query execution job. This ID is used later
   * to poll for the results of the query.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string query_id = 2;
   */
  queryId: string;
};

/**
 * Describes the message nexus.controlplane.v1.StartQueryExecutionResponse.
 * Use `create(StartQueryExecutionResponseSchema)` to create a new message.
 */
export const StartQueryExecutionResponseSchema: GenMessage<StartQueryExecutionResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 33);

/**
 * @generated from message nexus.controlplane.v1.PollQueryExecutionRequest
 */
export type PollQueryExecutionRequest = Message<"nexus.controlplane.v1.PollQueryExecutionRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;
};

/**
 * Describes the message nexus.controlplane.v1.PollQueryExecutionRequest.
 * Use `create(PollQueryExecutionRequestSchema)` to create a new message.
 */
export const PollQueryExecutionRequestSchema: GenMessage<PollQueryExecutionRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 34);

/**
 * @generated from message nexus.controlplane.v1.PollQueryExecutionResponse
 */
export type PollQueryExecutionResponse = Message<"nexus.controlplane.v1.PollQueryExecutionResponse"> & {
  /**
   * @generated from field: nexus.controlplane.v1.QueryExecutionStatus status = 1;
   */
  status: QueryExecutionStatus;

  /**
   * @generated from field: optional nexus.controlplane.v1.QueryExecutionResult result = 2;
   */
  result?: QueryExecutionResult;
};

/**
 * Describes the message nexus.controlplane.v1.PollQueryExecutionResponse.
 * Use `create(PollQueryExecutionResponseSchema)` to create a new message.
 */
export const PollQueryExecutionResponseSchema: GenMessage<PollQueryExecutionResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 35);

/**
 * @generated from message nexus.controlplane.v1.QueryExecutionResult
 */
export type QueryExecutionResult = Message<"nexus.controlplane.v1.QueryExecutionResult"> & {
  /**
   * The time series data. If many fields are queried at once
   * e.g select bytes, src_ip each field will have its own series
   *
   * @generated from field: nexus.controlplane.v1.Series series = 1;
   */
  series?: Series;

  /**
   * This the "raw" data i.e the rows returned by the query.
   * Used to show the raw data in the UI
   *
   * @generated from field: repeated nexus.controlplane.v1.Row rows = 2;
   */
  rows: Row[];
};

/**
 * Describes the message nexus.controlplane.v1.QueryExecutionResult.
 * Use `create(QueryExecutionResultSchema)` to create a new message.
 */
export const QueryExecutionResultSchema: GenMessage<QueryExecutionResult> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 36);

/**
 * @generated from message nexus.controlplane.v1.RegisterAgentRequest
 */
export type RegisterAgentRequest = Message<"nexus.controlplane.v1.RegisterAgentRequest"> & {
  /**
   * The agent ID. These are generated by the agent themselves.
   * They are of the form agt_{nanoid}
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * string organization_id = 2; // We can derive these?
   * string team_id = 3;
   *
   * @generated from field: string cluster_id = 2;
   */
  clusterId: string;
};

/**
 * Describes the message nexus.controlplane.v1.RegisterAgentRequest.
 * Use `create(RegisterAgentRequestSchema)` to create a new message.
 */
export const RegisterAgentRequestSchema: GenMessage<RegisterAgentRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 37);

/**
 * @generated from message nexus.controlplane.v1.RegisterAgentResponse
 */
export type RegisterAgentResponse = Message<"nexus.controlplane.v1.RegisterAgentResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * string organization_id = 2;
   * string team_id = 3;
   *
   * @generated from field: string cluster_id = 2;
   */
  clusterId: string;
};

/**
 * Describes the message nexus.controlplane.v1.RegisterAgentResponse.
 * Use `create(RegisterAgentResponseSchema)` to create a new message.
 */
export const RegisterAgentResponseSchema: GenMessage<RegisterAgentResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 38);

/**
 * @generated from message nexus.controlplane.v1.DeregisterAgentRequest
 */
export type DeregisterAgentRequest = Message<"nexus.controlplane.v1.DeregisterAgentRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message nexus.controlplane.v1.DeregisterAgentRequest.
 * Use `create(DeregisterAgentRequestSchema)` to create a new message.
 */
export const DeregisterAgentRequestSchema: GenMessage<DeregisterAgentRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 39);

/**
 * @generated from message nexus.controlplane.v1.DeregisterAgentResponse
 */
export type DeregisterAgentResponse = Message<"nexus.controlplane.v1.DeregisterAgentResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: google.protobuf.Timestamp deregistered_at = 2;
   */
  deregisteredAt?: Timestamp;
};

/**
 * Describes the message nexus.controlplane.v1.DeregisterAgentResponse.
 * Use `create(DeregisterAgentResponseSchema)` to create a new message.
 */
export const DeregisterAgentResponseSchema: GenMessage<DeregisterAgentResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 40);

/**
 * @generated from message nexus.controlplane.v1.HeartbeatRequest
 */
export type HeartbeatRequest = Message<"nexus.controlplane.v1.HeartbeatRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message nexus.controlplane.v1.HeartbeatRequest.
 * Use `create(HeartbeatRequestSchema)` to create a new message.
 */
export const HeartbeatRequestSchema: GenMessage<HeartbeatRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 41);

/**
 * @generated from message nexus.controlplane.v1.HeartbeatResponse
 */
export type HeartbeatResponse = Message<"nexus.controlplane.v1.HeartbeatResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message nexus.controlplane.v1.HeartbeatResponse.
 * Use `create(HeartbeatResponseSchema)` to create a new message.
 */
export const HeartbeatResponseSchema: GenMessage<HeartbeatResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 42);

/**
 * @generated from message nexus.controlplane.v1.ControlMessageRequest
 */
export type ControlMessageRequest = Message<"nexus.controlplane.v1.ControlMessageRequest"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * @generated from field: nexus.controlplane.v1.ControlMessage control = 2;
   */
  control?: ControlMessage;
};

/**
 * Describes the message nexus.controlplane.v1.ControlMessageRequest.
 * Use `create(ControlMessageRequestSchema)` to create a new message.
 */
export const ControlMessageRequestSchema: GenMessage<ControlMessageRequest> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 43);

/**
 * @generated from message nexus.controlplane.v1.ControlMessageResponse
 */
export type ControlMessageResponse = Message<"nexus.controlplane.v1.ControlMessageResponse"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * @generated from field: nexus.controlplane.v1.ControlMessage control = 2;
   */
  control?: ControlMessage;

  /**
   * @generated from field: bool success = 3;
   */
  success: boolean;

  /**
   * @generated from field: string error = 4;
   */
  error: string;
};

/**
 * Describes the message nexus.controlplane.v1.ControlMessageResponse.
 * Use `create(ControlMessageResponseSchema)` to create a new message.
 */
export const ControlMessageResponseSchema: GenMessage<ControlMessageResponse> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 44);

/**
 * @generated from message nexus.controlplane.v1.ControlMessage
 */
export type ControlMessage = Message<"nexus.controlplane.v1.ControlMessage"> & {
  /**
   * @generated from oneof nexus.controlplane.v1.ControlMessage.message
   */
  message: {
    /**
     * @generated from field: nexus.controlplane.v1.TelemetryControl telemetry = 1;
     */
    value: TelemetryControl;
    case: "telemetry";
  } | {
    /**
     * @generated from field: nexus.controlplane.v1.DeviceControl devices = 2;
     */
    value: DeviceControl;
    case: "devices";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message nexus.controlplane.v1.ControlMessage.
 * Use `create(ControlMessageSchema)` to create a new message.
 */
export const ControlMessageSchema: GenMessage<ControlMessage> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 45);

/**
 * Telemetry control messages
 *
 * @generated from message nexus.controlplane.v1.TelemetryControl
 */
export type TelemetryControl = Message<"nexus.controlplane.v1.TelemetryControl"> & {
  /**
   * Whether or not to export telemetry data. This can be
   * switched off to prevent data from being written to
   * the catalogue and to blob storage.
   *
   * @generated from field: bool export = 1;
   */
  export: boolean;
};

/**
 * Describes the message nexus.controlplane.v1.TelemetryControl.
 * Use `create(TelemetryControlSchema)` to create a new message.
 */
export const TelemetryControlSchema: GenMessage<TelemetryControl> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 46);

/**
 * Device control messages
 *
 * @generated from message nexus.controlplane.v1.DeviceControl
 */
export type DeviceControl = Message<"nexus.controlplane.v1.DeviceControl"> & {
  /**
   * @generated from field: repeated nexus.controlplane.v1.Device devices = 1;
   */
  devices: Device[];
};

/**
 * Describes the message nexus.controlplane.v1.DeviceControl.
 * Use `create(DeviceControlSchema)` to create a new message.
 */
export const DeviceControlSchema: GenMessage<DeviceControl> = /*@__PURE__*/
  messageDesc(file_nexus_controlplane_v1_control_plane, 47);

/**
 * @generated from enum nexus.controlplane.v1.ClusterType
 */
export enum ClusterType {
  /**
   * @generated from enum value: CLUSTER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The cluster runs in their own cloud
   *
   * @generated from enum value: CLUSTER_TYPE_BYOC = 1;
   */
  BYOC = 1,

  /**
   * We run the cluster in our cloud, on behalf of the user
   *
   * @generated from enum value: CLUSTER_TYPE_SERVERLESS = 2;
   */
  SERVERLESS = 2,
}

/**
 * Describes the enum nexus.controlplane.v1.ClusterType.
 */
export const ClusterTypeSchema: GenEnum<ClusterType> = /*@__PURE__*/
  enumDesc(file_nexus_controlplane_v1_control_plane, 0);

/**
 * @generated from enum nexus.controlplane.v1.Vendor
 */
export enum Vendor {
  /**
   * @generated from enum value: VENDOR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,
}

/**
 * Describes the enum nexus.controlplane.v1.Vendor.
 */
export const VendorSchema: GenEnum<Vendor> = /*@__PURE__*/
  enumDesc(file_nexus_controlplane_v1_control_plane, 1);

/**
 * @generated from enum nexus.controlplane.v1.Model
 */
export enum Model {
  /**
   * @generated from enum value: MODEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,
}

/**
 * Describes the enum nexus.controlplane.v1.Model.
 */
export const ModelSchema: GenEnum<Model> = /*@__PURE__*/
  enumDesc(file_nexus_controlplane_v1_control_plane, 2);

/**
 * @generated from enum nexus.controlplane.v1.IPVersion
 */
export enum IPVersion {
  /**
   * @generated from enum value: IPVERSION_UNSPECIFIED = 0;
   */
  IPVERSION_UNSPECIFIED = 0,

  /**
   * @generated from enum value: IPVERSION_IPV4 = 1;
   */
  IPVERSION_IPV4 = 1,

  /**
   * @generated from enum value: IPVERSION_IPV6 = 2;
   */
  IPVERSION_IPV6 = 2,
}

/**
 * Describes the enum nexus.controlplane.v1.IPVersion.
 */
export const IPVersionSchema: GenEnum<IPVersion> = /*@__PURE__*/
  enumDesc(file_nexus_controlplane_v1_control_plane, 3);

/**
 * @generated from enum nexus.controlplane.v1.VisualiseOp
 */
export enum VisualiseOp {
  /**
   * @generated from enum value: VISUALISE_OP_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: VISUALISE_OP_COUNT = 1;
   */
  COUNT = 1,

  /**
   * @generated from enum value: VISUALISE_OP_COUNT_DISTINCT = 2;
   */
  COUNT_DISTINCT = 2,

  /**
   * @generated from enum value: VISUALISE_OP_SUM = 3;
   */
  SUM = 3,

  /**
   * @generated from enum value: VISUALISE_OP_AVG = 4;
   */
  AVG = 4,

  /**
   * @generated from enum value: VISUALISE_OP_MAX = 5;
   */
  MAX = 5,

  /**
   * @generated from enum value: VISUALISE_OP_MIN = 6;
   */
  MIN = 6,

  /**
   * Unsupported
   *
   * @generated from enum value: VISUALISE_OP_P001 = 7;
   */
  P001 = 7,

  /**
   * @generated from enum value: VISUALISE_OP_P01 = 8;
   */
  P01 = 8,

  /**
   * @generated from enum value: VISUALISE_OP_P05 = 9;
   */
  P05 = 9,

  /**
   * @generated from enum value: VISUALISE_OP_P10 = 10;
   */
  P10 = 10,

  /**
   * @generated from enum value: VISUALISE_OP_P25 = 11;
   */
  P25 = 11,

  /**
   * @generated from enum value: VISUALISE_OP_P50 = 12;
   */
  P50 = 12,

  /**
   * @generated from enum value: VISUALISE_OP_P75 = 13;
   */
  P75 = 13,

  /**
   * @generated from enum value: VISUALISE_OP_P90 = 14;
   */
  P90 = 14,

  /**
   * @generated from enum value: VISUALISE_OP_P95 = 15;
   */
  P95 = 15,

  /**
   * @generated from enum value: VISUALISE_OP_P99 = 16;
   */
  P99 = 16,

  /**
   * @generated from enum value: VISUALISE_OP_P999 = 17;
   */
  P999 = 17,

  /**
   * @generated from enum value: VISUALISE_OP_RATE_AVG = 18;
   */
  RATE_AVG = 18,

  /**
   * @generated from enum value: VISUALISE_OP_RATE_SUM = 19;
   */
  RATE_SUM = 19,

  /**
   * @generated from enum value: VISUALISE_OP_RATE_MAX = 20;
   */
  RATE_MAX = 20,
}

/**
 * Describes the enum nexus.controlplane.v1.VisualiseOp.
 */
export const VisualiseOpSchema: GenEnum<VisualiseOp> = /*@__PURE__*/
  enumDesc(file_nexus_controlplane_v1_control_plane, 4);

/**
 * @generated from enum nexus.controlplane.v1.WhereOp
 */
export enum WhereOp {
  /**
   * @generated from enum value: WHERE_OP_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: WHERE_OP_AND = 1;
   */
  AND = 1,

  /**
   * @generated from enum value: WHERE_OP_OR = 2;
   */
  OR = 2,
}

/**
 * Describes the enum nexus.controlplane.v1.WhereOp.
 */
export const WhereOpSchema: GenEnum<WhereOp> = /*@__PURE__*/
  enumDesc(file_nexus_controlplane_v1_control_plane, 5);

/**
 * @generated from enum nexus.controlplane.v1.CompareOp
 */
export enum CompareOp {
  /**
   * @generated from enum value: COMPARE_OP_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: COMPARE_OP_EQUAL = 1;
   */
  EQUAL = 1,

  /**
   * @generated from enum value: COMPARE_OP_NOT_EQUAL = 2;
   */
  NOT_EQUAL = 2,

  /**
   * @generated from enum value: COMPARE_OP_GREATER_THAN = 3;
   */
  GREATER_THAN = 3,

  /**
   * @generated from enum value: COMPARE_OP_GREATER_THAN_OR_EQUAL = 4;
   */
  GREATER_THAN_OR_EQUAL = 4,

  /**
   * @generated from enum value: COMPARE_OP_LESS_THAN = 5;
   */
  LESS_THAN = 5,

  /**
   * @generated from enum value: COMPARE_OP_LESS_THAN_OR_EQUAL = 6;
   */
  LESS_THAN_OR_EQUAL = 6,

  /**
   * @generated from enum value: COMPARE_OP_CONTAINS = 7;
   */
  CONTAINS = 7,

  /**
   * @generated from enum value: COMPARE_OP_DOES_NOT_CONTAIN = 8;
   */
  DOES_NOT_CONTAIN = 8,

  /**
   * @generated from enum value: COMPARE_OP_IN = 9;
   */
  IN = 9,

  /**
   * @generated from enum value: COMPARE_OP_NOT_IN = 10;
   */
  NOT_IN = 10,
}

/**
 * Describes the enum nexus.controlplane.v1.CompareOp.
 */
export const CompareOpSchema: GenEnum<CompareOp> = /*@__PURE__*/
  enumDesc(file_nexus_controlplane_v1_control_plane, 6);

/**
 * @generated from enum nexus.controlplane.v1.OrderOp
 */
export enum OrderOp {
  /**
   * @generated from enum value: ORDER_OP_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ORDER_OP_ASC = 1;
   */
  ASC = 1,

  /**
   * @generated from enum value: ORDER_OP_DESC = 2;
   */
  DESC = 2,
}

/**
 * Describes the enum nexus.controlplane.v1.OrderOp.
 */
export const OrderOpSchema: GenEnum<OrderOp> = /*@__PURE__*/
  enumDesc(file_nexus_controlplane_v1_control_plane, 7);

/**
 * @generated from enum nexus.controlplane.v1.QueryExecutionStatus
 */
export enum QueryExecutionStatus {
  /**
   * @generated from enum value: QUERY_EXECUTION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: QUERY_EXECUTION_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: QUERY_EXECUTION_STATUS_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: QUERY_EXECUTION_STATUS_COMPLETED = 3;
   */
  COMPLETED = 3,

  /**
   * @generated from enum value: QUERY_EXECUTION_STATUS_FAILED = 4;
   */
  FAILED = 4,
}

/**
 * Describes the enum nexus.controlplane.v1.QueryExecutionStatus.
 */
export const QueryExecutionStatusSchema: GenEnum<QueryExecutionStatus> = /*@__PURE__*/
  enumDesc(file_nexus_controlplane_v1_control_plane, 8);

/**
 * The control plane service manages all operational aspects of the system. This includes
 * owning the management of clusters, devices, queries, etc. Additionally, it manages the
 * lifecycle of our agents.
 *
 * @generated from service nexus.controlplane.v1.ControlPlaneService
 */
export const ControlPlaneService: GenService<{
  /**
   * Cluster management
   *
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.CreateCluster
   */
  createCluster: {
    methodKind: "unary";
    input: typeof CreateClusterRequestSchema;
    output: typeof CreateClusterResponseSchema;
  },
  /**
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.DeleteCluster
   */
  deleteCluster: {
    methodKind: "unary";
    input: typeof DeleteClusterRequestSchema;
    output: typeof DeleteClusterResponseSchema;
  },
  /**
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.ListClusters
   */
  listClusters: {
    methodKind: "unary";
    input: typeof ListClustersRequestSchema;
    output: typeof ListClustersResponseSchema;
  },
  /**
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.GetCluster
   */
  getCluster: {
    methodKind: "unary";
    input: typeof GetClusterRequestSchema;
    output: typeof GetClusterResponseSchema;
  },
  /**
   * Device management
   *
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.CreateDevice
   */
  createDevice: {
    methodKind: "unary";
    input: typeof CreateDeviceRequestSchema;
    output: typeof CreateDeviceResponseSchema;
  },
  /**
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.DeleteDevice
   */
  deleteDevice: {
    methodKind: "unary";
    input: typeof DeleteDeviceRequestSchema;
    output: typeof DeleteDeviceResponseSchema;
  },
  /**
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.UpdateDevice
   */
  updateDevice: {
    methodKind: "unary";
    input: typeof UpdateDeviceRequestSchema;
    output: typeof UpdateDeviceResponseSchema;
  },
  /**
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.ListDevices
   */
  listDevices: {
    methodKind: "unary";
    input: typeof ListDevicesRequestSchema;
    output: typeof ListDevicesResponseSchema;
  },
  /**
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.GetDevice
   */
  getDevice: {
    methodKind: "unary";
    input: typeof GetDeviceRequestSchema;
    output: typeof GetDeviceResponseSchema;
  },
  /**
   * Query management
   *
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.CreateQuery
   */
  createQuery: {
    methodKind: "unary";
    input: typeof CreateQueryRequestSchema;
    output: typeof CreateQueryResponseSchema;
  },
  /**
   * Starts a background job to execute the query
   *
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.StartQueryExecution
   */
  startQueryExecution: {
    methodKind: "unary";
    input: typeof StartQueryExecutionRequestSchema;
    output: typeof StartQueryExecutionResponseSchema;
  },
  /**
   * Poll the query execution job. It will return a status and if complete, the
   * result alongside it
   *
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.PollQueryExecution
   */
  pollQueryExecution: {
    methodKind: "unary";
    input: typeof PollQueryExecutionRequestSchema;
    output: typeof PollQueryExecutionResponseSchema;
  },
  /**
   * Agent lifecycle
   *
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.RegisterAgent
   */
  registerAgent: {
    methodKind: "unary";
    input: typeof RegisterAgentRequestSchema;
    output: typeof RegisterAgentResponseSchema;
  },
  /**
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.DeregisterAgent
   */
  deregisterAgent: {
    methodKind: "unary";
    input: typeof DeregisterAgentRequestSchema;
    output: typeof DeregisterAgentResponseSchema;
  },
  /**
   * @generated from rpc nexus.controlplane.v1.ControlPlaneService.Heartbeat
   */
  heartbeat: {
    methodKind: "unary";
    input: typeof HeartbeatRequestSchema;
    output: typeof HeartbeatResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_nexus_controlplane_v1_control_plane, 0);


// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file fluid/controlplane/v1/controlplane.proto (package fluid.controlplane.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { KeyValue } from "../../../std/v1/std_pb";
import { file_std_v1_std } from "../../../std/v1/std_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file fluid/controlplane/v1/controlplane.proto.
 */
export const file_fluid_controlplane_v1_controlplane: GenFile = /*@__PURE__*/
  fileDesc("CihmbHVpZC9jb250cm9scGxhbmUvdjEvY29udHJvbHBsYW5lLnByb3RvEhVmbHVpZC5jb250cm9scGxhbmUudjEiGAoGQ29uZmlnEg4KBmV4cG9ydBgBIAEoCCJPChVDb250cm9sTWVzc2FnZVJlcXVlc3QSNgoHbWVzc2FnZRgBIAEoCzIlLmZsdWlkLmNvbnRyb2xwbGFuZS52MS5Db250cm9sTWVzc2FnZSJ/ChZDb250cm9sTWVzc2FnZVJlc3BvbnNlEjYKB21lc3NhZ2UYASABKAsyJS5mbHVpZC5jb250cm9scGxhbmUudjEuQ29udHJvbE1lc3NhZ2USLQoGY29uZmlnGAIgASgLMh0uZmx1aWQuY29udHJvbHBsYW5lLnYxLkNvbmZpZyJfCg5Db250cm9sTWVzc2FnZRJCChBleHBvcnRfdGVsZW1ldHJ5GAEgASgLMiYuZmx1aWQuY29udHJvbHBsYW5lLnYxLkV4cG9ydFRlbGVtZXRyeUgAQgkKB21lc3NhZ2UiIQoPRXhwb3J0VGVsZW1ldHJ5Eg4KBmV4cG9ydBgBIAEoCCJvChNSZWdpc3RlclJ1bGVSZXF1ZXN0Ei0KBnRhcmdldBgBIAEoCzIdLmZsdWlkLmNvbnRyb2xwbGFuZS52MS5UYXJnZXQSKQoEcnVsZRgCIAEoCzIbLmZsdWlkLmNvbnRyb2xwbGFuZS52MS5SdWxlIrABChRSZWdpc3RlclJ1bGVSZXNwb25zZRItCglhY3Rpb25fYXQYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg8KB3J1bGVfaWQYAiABKAkSLQoGdGFyZ2V0GAMgASgLMh0uZmx1aWQuY29udHJvbHBsYW5lLnYxLlRhcmdldBIpCgRydWxlGAQgASgLMhsuZmx1aWQuY29udHJvbHBsYW5lLnYxLlJ1bGUihAEKBlRhcmdldBIxCgdkZXZpY2VzGAEgASgLMh4uZmx1aWQuY29udHJvbHBsYW5lLnYxLkRldmljZXNIABI9CgpkZXNjcmlwdG9yGAIgASgLMicuZmx1aWQuY29udHJvbHBsYW5lLnYxLkRldmljZURlc2NyaXB0b3JIAEIICgZ0YXJnZXQiHQoHRGV2aWNlcxISCgpkZXZpY2VfaWRzGAEgAygJIl8KEERldmljZURlc2NyaXB0b3ISDgoGdmVuZG9yGAEgASgJEg0KBW1vZGVsGAIgASgJEgoKAm9zGAMgASgJEiAKBmxhYmVscxgEIAMoCzIQLnN0ZC52MS5LZXlWYWx1ZSIGCgRSdWxlIigKFURlcmVnaXN0ZXJSdWxlUmVxdWVzdBIPCgdydWxlX2lkGAEgASgJIlgKFkRlcmVnaXN0ZXJSdWxlUmVzcG9uc2USLQoJYWN0aW9uX2F0GAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIPCgdydWxlX2lkGAIgASgJMtsCChNDb250cm9sUGxhbmVTZXJ2aWNlEmgKB0NvbnRyb2wSLC5mbHVpZC5jb250cm9scGxhbmUudjEuQ29udHJvbE1lc3NhZ2VSZXF1ZXN0Gi0uZmx1aWQuY29udHJvbHBsYW5lLnYxLkNvbnRyb2xNZXNzYWdlUmVzcG9uc2UiABJpCgxSZWdpc3RlclJ1bGUSKi5mbHVpZC5jb250cm9scGxhbmUudjEuUmVnaXN0ZXJSdWxlUmVxdWVzdBorLmZsdWlkLmNvbnRyb2xwbGFuZS52MS5SZWdpc3RlclJ1bGVSZXNwb25zZSIAEm8KDkRlcmVnaXN0ZXJSdWxlEiwuZmx1aWQuY29udHJvbHBsYW5lLnYxLkRlcmVnaXN0ZXJSdWxlUmVxdWVzdBotLmZsdWlkLmNvbnRyb2xwbGFuZS52MS5EZXJlZ2lzdGVyUnVsZVJlc3BvbnNlIgBCRlpEZ2l0aHViLmNvbS9saXF1aWRzcGlsbC9wcm90by9nby9mbHVpZC9jb250cm9scGxhbmUvdjE7Y29udHJvbHBsYW5ldjFiBnByb3RvMw", [file_google_protobuf_timestamp, file_std_v1_std]);

/**
 * @generated from message fluid.controlplane.v1.Config
 */
export type Config = Message<"fluid.controlplane.v1.Config"> & {
  /**
   * @generated from field: bool export = 1;
   */
  export: boolean;
};

/**
 * Describes the message fluid.controlplane.v1.Config.
 * Use `create(ConfigSchema)` to create a new message.
 */
export const ConfigSchema: GenMessage<Config> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 0);

/**
 * @generated from message fluid.controlplane.v1.ControlMessageRequest
 */
export type ControlMessageRequest = Message<"fluid.controlplane.v1.ControlMessageRequest"> & {
  /**
   * @generated from field: fluid.controlplane.v1.ControlMessage message = 1;
   */
  message?: ControlMessage;
};

/**
 * Describes the message fluid.controlplane.v1.ControlMessageRequest.
 * Use `create(ControlMessageRequestSchema)` to create a new message.
 */
export const ControlMessageRequestSchema: GenMessage<ControlMessageRequest> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 1);

/**
 * @generated from message fluid.controlplane.v1.ControlMessageResponse
 */
export type ControlMessageResponse = Message<"fluid.controlplane.v1.ControlMessageResponse"> & {
  /**
   * @generated from field: fluid.controlplane.v1.ControlMessage message = 1;
   */
  message?: ControlMessage;

  /**
   * @generated from field: fluid.controlplane.v1.Config config = 2;
   */
  config?: Config;
};

/**
 * Describes the message fluid.controlplane.v1.ControlMessageResponse.
 * Use `create(ControlMessageResponseSchema)` to create a new message.
 */
export const ControlMessageResponseSchema: GenMessage<ControlMessageResponse> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 2);

/**
 * @generated from message fluid.controlplane.v1.ControlMessage
 */
export type ControlMessage = Message<"fluid.controlplane.v1.ControlMessage"> & {
  /**
   * @generated from oneof fluid.controlplane.v1.ControlMessage.message
   */
  message: {
    /**
     * @generated from field: fluid.controlplane.v1.ExportTelemetry export_telemetry = 1;
     */
    value: ExportTelemetry;
    case: "exportTelemetry";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message fluid.controlplane.v1.ControlMessage.
 * Use `create(ControlMessageSchema)` to create a new message.
 */
export const ControlMessageSchema: GenMessage<ControlMessage> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 3);

/**
 * @generated from message fluid.controlplane.v1.ExportTelemetry
 */
export type ExportTelemetry = Message<"fluid.controlplane.v1.ExportTelemetry"> & {
  /**
   * @generated from field: bool export = 1;
   */
  export: boolean;
};

/**
 * Describes the message fluid.controlplane.v1.ExportTelemetry.
 * Use `create(ExportTelemetrySchema)` to create a new message.
 */
export const ExportTelemetrySchema: GenMessage<ExportTelemetry> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 4);

/**
 * @generated from message fluid.controlplane.v1.RegisterRuleRequest
 */
export type RegisterRuleRequest = Message<"fluid.controlplane.v1.RegisterRuleRequest"> & {
  /**
   * @generated from field: fluid.controlplane.v1.Target target = 1;
   */
  target?: Target;

  /**
   * @generated from field: fluid.controlplane.v1.Rule rule = 2;
   */
  rule?: Rule;
};

/**
 * Describes the message fluid.controlplane.v1.RegisterRuleRequest.
 * Use `create(RegisterRuleRequestSchema)` to create a new message.
 */
export const RegisterRuleRequestSchema: GenMessage<RegisterRuleRequest> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 5);

/**
 * @generated from message fluid.controlplane.v1.RegisterRuleResponse
 */
export type RegisterRuleResponse = Message<"fluid.controlplane.v1.RegisterRuleResponse"> & {
  /**
   * @generated from field: google.protobuf.Timestamp action_at = 1;
   */
  actionAt?: Timestamp;

  /**
   * @generated from field: string rule_id = 2;
   */
  ruleId: string;

  /**
   * @generated from field: fluid.controlplane.v1.Target target = 3;
   */
  target?: Target;

  /**
   * @generated from field: fluid.controlplane.v1.Rule rule = 4;
   */
  rule?: Rule;
};

/**
 * Describes the message fluid.controlplane.v1.RegisterRuleResponse.
 * Use `create(RegisterRuleResponseSchema)` to create a new message.
 */
export const RegisterRuleResponseSchema: GenMessage<RegisterRuleResponse> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 6);

/**
 * @generated from message fluid.controlplane.v1.Target
 */
export type Target = Message<"fluid.controlplane.v1.Target"> & {
  /**
   * @generated from oneof fluid.controlplane.v1.Target.target
   */
  target: {
    /**
     * @generated from field: fluid.controlplane.v1.Devices devices = 1;
     */
    value: Devices;
    case: "devices";
  } | {
    /**
     * @generated from field: fluid.controlplane.v1.DeviceDescriptor descriptor = 2;
     */
    value: DeviceDescriptor;
    case: "descriptor";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message fluid.controlplane.v1.Target.
 * Use `create(TargetSchema)` to create a new message.
 */
export const TargetSchema: GenMessage<Target> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 7);

/**
 * @generated from message fluid.controlplane.v1.Devices
 */
export type Devices = Message<"fluid.controlplane.v1.Devices"> & {
  /**
   * @generated from field: repeated string device_ids = 1;
   */
  deviceIds: string[];
};

/**
 * Describes the message fluid.controlplane.v1.Devices.
 * Use `create(DevicesSchema)` to create a new message.
 */
export const DevicesSchema: GenMessage<Devices> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 8);

/**
 * @generated from message fluid.controlplane.v1.DeviceDescriptor
 */
export type DeviceDescriptor = Message<"fluid.controlplane.v1.DeviceDescriptor"> & {
  /**
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * @generated from field: string os = 3;
   */
  os: string;

  /**
   * @generated from field: repeated std.v1.KeyValue labels = 4;
   */
  labels: KeyValue[];
};

/**
 * Describes the message fluid.controlplane.v1.DeviceDescriptor.
 * Use `create(DeviceDescriptorSchema)` to create a new message.
 */
export const DeviceDescriptorSchema: GenMessage<DeviceDescriptor> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 9);

/**
 * @generated from message fluid.controlplane.v1.Rule
 */
export type Rule = Message<"fluid.controlplane.v1.Rule"> & {
};

/**
 * Describes the message fluid.controlplane.v1.Rule.
 * Use `create(RuleSchema)` to create a new message.
 */
export const RuleSchema: GenMessage<Rule> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 10);

/**
 * @generated from message fluid.controlplane.v1.DeregisterRuleRequest
 */
export type DeregisterRuleRequest = Message<"fluid.controlplane.v1.DeregisterRuleRequest"> & {
  /**
   * @generated from field: string rule_id = 1;
   */
  ruleId: string;
};

/**
 * Describes the message fluid.controlplane.v1.DeregisterRuleRequest.
 * Use `create(DeregisterRuleRequestSchema)` to create a new message.
 */
export const DeregisterRuleRequestSchema: GenMessage<DeregisterRuleRequest> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 11);

/**
 * @generated from message fluid.controlplane.v1.DeregisterRuleResponse
 */
export type DeregisterRuleResponse = Message<"fluid.controlplane.v1.DeregisterRuleResponse"> & {
  /**
   * @generated from field: google.protobuf.Timestamp action_at = 1;
   */
  actionAt?: Timestamp;

  /**
   * @generated from field: string rule_id = 2;
   */
  ruleId: string;
};

/**
 * Describes the message fluid.controlplane.v1.DeregisterRuleResponse.
 * Use `create(DeregisterRuleResponseSchema)` to create a new message.
 */
export const DeregisterRuleResponseSchema: GenMessage<DeregisterRuleResponse> = /*@__PURE__*/
  messageDesc(file_fluid_controlplane_v1_controlplane, 12);

/**
 * @generated from service fluid.controlplane.v1.ControlPlaneService
 */
export const ControlPlaneService: GenService<{
  /**
   * @generated from rpc fluid.controlplane.v1.ControlPlaneService.Control
   */
  control: {
    methodKind: "unary";
    input: typeof ControlMessageRequestSchema;
    output: typeof ControlMessageResponseSchema;
  },
  /**
   * @generated from rpc fluid.controlplane.v1.ControlPlaneService.RegisterRule
   */
  registerRule: {
    methodKind: "unary";
    input: typeof RegisterRuleRequestSchema;
    output: typeof RegisterRuleResponseSchema;
  },
  /**
   * @generated from rpc fluid.controlplane.v1.ControlPlaneService.DeregisterRule
   */
  deregisterRule: {
    methodKind: "unary";
    input: typeof DeregisterRuleRequestSchema;
    output: typeof DeregisterRuleResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_fluid_controlplane_v1_controlplane, 0);


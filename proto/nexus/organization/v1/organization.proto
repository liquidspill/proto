syntax = "proto3";

package nexus.organization.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/liquidspill/proto/go/nexus/organization/v1;organizationv1";

// Registers and deregisters organizations and teams. These are endpoints meant to be
// called by the authority over organizations and teams (at the time of writing this
// is our web app, spx). We call it registration because we do not create the team in
// this service, that is done elsewhere. Here, we just register knowledge of its existence
// so we can do our job.
service OrganizationService {
  rpc RegisterOrganization(RegisterOrganizationRequest) returns (RegisterOrganizationResponse) {}
  rpc DeregisterOrganization(DeregisterOrganizationRequest) returns (DeregisterOrganizationResponse) {}
  rpc RegisterTeam(RegisterTeamRequest) returns (RegisterTeamResponse) {}
  rpc DeregisterTeam(DeregisterTeamRequest) returns (DeregisterTeamResponse) {}
}

message RegisterOrganizationRequest {
  string id = 1;
}

message RegisterOrganizationResponse {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
}

message DeregisterOrganizationRequest {
  string id = 1;
}

message DeregisterOrganizationResponse {
  string id = 1;
  google.protobuf.Timestamp deleted_at = 2;
}

message RegisterTeamRequest {
  string id = 1;
  string organization_id = 2;
}

message RegisterTeamResponse {
  string id = 1;
  string organization_id = 2;
  google.protobuf.Timestamp created_at = 3;
}

message DeregisterTeamRequest {
  string id = 1;
  string organization_id = 2;
}

message DeregisterTeamResponse {
  string id = 1;
  string organization_id = 2;
  google.protobuf.Timestamp deleted_at = 3;
}
